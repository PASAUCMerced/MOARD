; ModuleID = 'set_constants.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ce = external global [5 x [13 x double]]
@c1 = external global double
@c2 = external global double
@c3 = external global double
@c4 = external global double
@c5 = external global double
@grid_points = external global [3 x i32]
@dnxm1 = external global double
@dnym1 = external global double
@dnzm1 = external global double
@c1c2 = external global double
@c1c5 = external global double
@c3c4 = external global double
@c1345 = external global double
@conz1 = external global double
@tx1 = external global double
@tx2 = external global double
@tx3 = external global double
@ty1 = external global double
@ty2 = external global double
@ty3 = external global double
@tz1 = external global double
@tz2 = external global double
@tz3 = external global double
@dx1 = external global double
@dx2 = external global double
@dx3 = external global double
@dx4 = external global double
@dx5 = external global double
@dy1 = external global double
@dy2 = external global double
@dy3 = external global double
@dy4 = external global double
@dy5 = external global double
@dz1 = external global double
@dz2 = external global double
@dz3 = external global double
@dz4 = external global double
@dz5 = external global double
@dxmax = external global double
@dymax = external global double
@dzmax = external global double
@dssp = external global double
@c4dssp = external global double
@c5dssp = external global double
@dt = external global double
@dttx1 = external global double
@dttx2 = external global double
@dtty1 = external global double
@dtty2 = external global double
@dttz1 = external global double
@dttz2 = external global double
@c2dttx1 = external global double
@c2dtty1 = external global double
@c2dttz1 = external global double
@dtdssp = external global double
@comz1 = external global double
@comz4 = external global double
@comz5 = external global double
@comz6 = external global double
@c3c4tx3 = external global double
@c3c4ty3 = external global double
@c3c4tz3 = external global double
@dx1tx1 = external global double
@dx2tx1 = external global double
@dx3tx1 = external global double
@dx4tx1 = external global double
@dx5tx1 = external global double
@dy1ty1 = external global double
@dy2ty1 = external global double
@dy3ty1 = external global double
@dy4ty1 = external global double
@dy5ty1 = external global double
@dz1tz1 = external global double
@dz2tz1 = external global double
@dz3tz1 = external global double
@dz4tz1 = external global double
@dz5tz1 = external global double
@c2iv = external global double
@con43 = external global double
@con16 = external global double
@xxcon1 = external global double
@xxcon2 = external global double
@xxcon3 = external global double
@xxcon4 = external global double
@xxcon5 = external global double
@yycon1 = external global double
@yycon2 = external global double
@yycon3 = external global double
@yycon4 = external global double
@yycon5 = external global double
@zzcon1 = external global double
@zzcon2 = external global double
@zzcon3 = external global double
@zzcon4 = external global double
@zzcon5 = external global double

; Function Attrs: nounwind uwtable
define void @set_constants() #0 {
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 0), align 8, !dbg !11, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 1), align 8, !dbg !16, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 2), align 8, !dbg !17, !tbaa !12
  store double 4.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 3), align 8, !dbg !18, !tbaa !12
  store double 5.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 4), align 8, !dbg !19, !tbaa !12
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 5), align 8, !dbg !20, !tbaa !12
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 6), align 8, !dbg !21, !tbaa !12
  store double 2.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 7), align 8, !dbg !22, !tbaa !12
  store double 1.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 8), align 8, !dbg !23, !tbaa !12
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 9), align 8, !dbg !24, !tbaa !12
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 10), align 8, !dbg !25, !tbaa !12
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 11), align 8, !dbg !26, !tbaa !12
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 0, i64 12), align 8, !dbg !27, !tbaa !12
  store double 1.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 0), align 8, !dbg !28, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 1), align 8, !dbg !29, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 2), align 8, !dbg !30, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 3), align 8, !dbg !31, !tbaa !12
  store double 1.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 4), align 8, !dbg !32, !tbaa !12
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 5), align 8, !dbg !33, !tbaa !12
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 6), align 8, !dbg !34, !tbaa !12
  store double 1.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 7), align 8, !dbg !35, !tbaa !12
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 8), align 8, !dbg !36, !tbaa !12
  store double 2.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 9), align 8, !dbg !37, !tbaa !12
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 10), align 8, !dbg !38, !tbaa !12
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 11), align 8, !dbg !39, !tbaa !12
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 1, i64 12), align 8, !dbg !40, !tbaa !12
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 0), align 8, !dbg !41, !tbaa !12
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 1), align 8, !dbg !42, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 2), align 8, !dbg !43, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 3), align 8, !dbg !44, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 4), align 8, !dbg !45, !tbaa !12
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 5), align 8, !dbg !46, !tbaa !12
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 6), align 8, !dbg !47, !tbaa !12
  store double 4.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 7), align 8, !dbg !48, !tbaa !12
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 8), align 8, !dbg !49, !tbaa !12
  store double 5.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 9), align 8, !dbg !50, !tbaa !12
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 10), align 8, !dbg !51, !tbaa !12
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 11), align 8, !dbg !52, !tbaa !12
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 2, i64 12), align 8, !dbg !53, !tbaa !12
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 0), align 8, !dbg !54, !tbaa !12
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 1), align 8, !dbg !55, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 2), align 8, !dbg !56, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 3), align 8, !dbg !57, !tbaa !12
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 4), align 8, !dbg !58, !tbaa !12
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 5), align 8, !dbg !59, !tbaa !12
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 6), align 8, !dbg !60, !tbaa !12
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 7), align 8, !dbg !61, !tbaa !12
  store double 5.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 8), align 8, !dbg !62, !tbaa !12
  store double 4.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 9), align 8, !dbg !63, !tbaa !12
  store double 2.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 10), align 8, !dbg !64, !tbaa !12
  store double 1.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 11), align 8, !dbg !65, !tbaa !12
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 3, i64 12), align 8, !dbg !66, !tbaa !12
  store double 5.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 0), align 8, !dbg !67, !tbaa !12
  store double 4.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 1), align 8, !dbg !68, !tbaa !12
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 2), align 8, !dbg !69, !tbaa !12
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 3), align 8, !dbg !70, !tbaa !12
  store double 1.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 4), align 8, !dbg !71, !tbaa !12
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 5), align 8, !dbg !72, !tbaa !12
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 6), align 8, !dbg !73, !tbaa !12
  store double 5.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 7), align 8, !dbg !74, !tbaa !12
  store double 4.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 8), align 8, !dbg !75, !tbaa !12
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 9), align 8, !dbg !76, !tbaa !12
  store double 1.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 10), align 8, !dbg !77, !tbaa !12
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 11), align 8, !dbg !78, !tbaa !12
  store double 2.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i64 0, i64 4, i64 12), align 8, !dbg !79, !tbaa !12
  store double 1.400000e+00, double* @c1, align 8, !dbg !80, !tbaa !12
  store double 4.000000e-01, double* @c2, align 8, !dbg !81, !tbaa !12
  store double 1.000000e-01, double* @c3, align 8, !dbg !82, !tbaa !12
  store double 1.000000e+00, double* @c4, align 8, !dbg !83, !tbaa !12
  store double 1.400000e+00, double* @c5, align 8, !dbg !84, !tbaa !12
  %1 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i64 0, i64 0), align 4, !dbg !85, !tbaa !86
  %2 = add nsw i32 %1, -1, !dbg !85
  %3 = sitofp i32 %2 to double, !dbg !85
  %4 = fdiv double 1.000000e+00, %3, !dbg !85
  store double %4, double* @dnxm1, align 8, !dbg !85, !tbaa !12
  %5 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i64 0, i64 1), align 4, !dbg !88, !tbaa !86
  %6 = add nsw i32 %5, -1, !dbg !88
  %7 = sitofp i32 %6 to double, !dbg !88
  %8 = fdiv double 1.000000e+00, %7, !dbg !88
  store double %8, double* @dnym1, align 8, !dbg !88, !tbaa !12
  %9 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i64 0, i64 2), align 4, !dbg !89, !tbaa !86
  %10 = add nsw i32 %9, -1, !dbg !89
  %11 = sitofp i32 %10 to double, !dbg !89
  %12 = fdiv double 1.000000e+00, %11, !dbg !89
  store double %12, double* @dnzm1, align 8, !dbg !89, !tbaa !12
  %13 = load double* @c1, align 8, !dbg !90, !tbaa !12
  %14 = load double* @c2, align 8, !dbg !90, !tbaa !12
  %15 = fmul double %13, %14, !dbg !90
  store double %15, double* @c1c2, align 8, !dbg !90, !tbaa !12
  %16 = load double* @c5, align 8, !dbg !91, !tbaa !12
  %17 = fmul double %13, %16, !dbg !91
  store double %17, double* @c1c5, align 8, !dbg !91, !tbaa !12
  %18 = load double* @c3, align 8, !dbg !92, !tbaa !12
  %19 = load double* @c4, align 8, !dbg !92, !tbaa !12
  %20 = fmul double %18, %19, !dbg !92
  store double %20, double* @c3c4, align 8, !dbg !92, !tbaa !12
  %21 = fmul double %17, %20, !dbg !93
  store double %21, double* @c1345, align 8, !dbg !93, !tbaa !12
  %22 = load double* @c1c5, align 8, !dbg !94, !tbaa !12
  %23 = fsub double 1.000000e+00, %22, !dbg !94
  store double %23, double* @conz1, align 8, !dbg !94, !tbaa !12
  %24 = load double* @dnxm1, align 8, !dbg !95, !tbaa !12
  %25 = fmul double %24, %24, !dbg !95
  %26 = fdiv double 1.000000e+00, %25, !dbg !95
  store double %26, double* @tx1, align 8, !dbg !95, !tbaa !12
  %27 = fmul double %24, 2.000000e+00, !dbg !96
  %28 = fdiv double 1.000000e+00, %27, !dbg !96
  store double %28, double* @tx2, align 8, !dbg !96, !tbaa !12
  %29 = load double* @dnxm1, align 8, !dbg !97, !tbaa !12
  %30 = fdiv double 1.000000e+00, %29, !dbg !97
  store double %30, double* @tx3, align 8, !dbg !97, !tbaa !12
  %31 = load double* @dnym1, align 8, !dbg !98, !tbaa !12
  %32 = fmul double %31, %31, !dbg !98
  %33 = fdiv double 1.000000e+00, %32, !dbg !98
  store double %33, double* @ty1, align 8, !dbg !98, !tbaa !12
  %34 = fmul double %31, 2.000000e+00, !dbg !99
  %35 = fdiv double 1.000000e+00, %34, !dbg !99
  store double %35, double* @ty2, align 8, !dbg !99, !tbaa !12
  %36 = load double* @dnym1, align 8, !dbg !100, !tbaa !12
  %37 = fdiv double 1.000000e+00, %36, !dbg !100
  store double %37, double* @ty3, align 8, !dbg !100, !tbaa !12
  %38 = load double* @dnzm1, align 8, !dbg !101, !tbaa !12
  %39 = fmul double %38, %38, !dbg !101
  %40 = fdiv double 1.000000e+00, %39, !dbg !101
  store double %40, double* @tz1, align 8, !dbg !101, !tbaa !12
  %41 = fmul double %38, 2.000000e+00, !dbg !102
  %42 = fdiv double 1.000000e+00, %41, !dbg !102
  store double %42, double* @tz2, align 8, !dbg !102, !tbaa !12
  %43 = load double* @dnzm1, align 8, !dbg !103, !tbaa !12
  %44 = fdiv double 1.000000e+00, %43, !dbg !103
  store double %44, double* @tz3, align 8, !dbg !103, !tbaa !12
  store double 7.500000e-01, double* @dx1, align 8, !dbg !104, !tbaa !12
  store double 7.500000e-01, double* @dx2, align 8, !dbg !105, !tbaa !12
  store double 7.500000e-01, double* @dx3, align 8, !dbg !106, !tbaa !12
  store double 7.500000e-01, double* @dx4, align 8, !dbg !107, !tbaa !12
  store double 7.500000e-01, double* @dx5, align 8, !dbg !108, !tbaa !12
  store double 7.500000e-01, double* @dy1, align 8, !dbg !109, !tbaa !12
  store double 7.500000e-01, double* @dy2, align 8, !dbg !110, !tbaa !12
  store double 7.500000e-01, double* @dy3, align 8, !dbg !111, !tbaa !12
  store double 7.500000e-01, double* @dy4, align 8, !dbg !112, !tbaa !12
  store double 7.500000e-01, double* @dy5, align 8, !dbg !113, !tbaa !12
  store double 1.000000e+00, double* @dz1, align 8, !dbg !114, !tbaa !12
  store double 1.000000e+00, double* @dz2, align 8, !dbg !115, !tbaa !12
  store double 1.000000e+00, double* @dz3, align 8, !dbg !116, !tbaa !12
  store double 1.000000e+00, double* @dz4, align 8, !dbg !117, !tbaa !12
  store double 1.000000e+00, double* @dz5, align 8, !dbg !118, !tbaa !12
  %45 = load double* @dx3, align 8, !dbg !119, !tbaa !12
  %46 = load double* @dx4, align 8, !dbg !119, !tbaa !12
  %47 = fcmp ogt double %45, %46, !dbg !119
  %48 = select i1 %47, double %45, double %46, !dbg !119
  store double %48, double* @dxmax, align 8, !dbg !119, !tbaa !12
  %49 = load double* @dy2, align 8, !dbg !120, !tbaa !12
  %50 = load double* @dy4, align 8, !dbg !120, !tbaa !12
  %51 = fcmp ogt double %49, %50, !dbg !120
  %52 = select i1 %51, double %49, double %50, !dbg !120
  store double %52, double* @dymax, align 8, !dbg !120, !tbaa !12
  %53 = load double* @dz2, align 8, !dbg !121, !tbaa !12
  %54 = load double* @dz3, align 8, !dbg !121, !tbaa !12
  %55 = fcmp ogt double %53, %54, !dbg !121
  %56 = select i1 %55, double %53, double %54, !dbg !121
  store double %56, double* @dzmax, align 8, !dbg !121, !tbaa !12
  %57 = load double* @dx1, align 8, !dbg !122, !tbaa !12
  %58 = load double* @dy1, align 8, !dbg !122, !tbaa !12
  %59 = load double* @dz1, align 8, !dbg !122, !tbaa !12
  %60 = fcmp ogt double %58, %59, !dbg !122
  %61 = select i1 %60, double %58, double %59, !dbg !122
  %62 = fcmp ogt double %57, %61, !dbg !122
  %. = select i1 %62, double %57, double %61, !dbg !122
  %63 = fmul double %., 2.500000e-01, !dbg !122
  store double %63, double* @dssp, align 8, !dbg !122, !tbaa !12
  %64 = fmul double %63, 4.000000e+00, !dbg !123
  store double %64, double* @c4dssp, align 8, !dbg !123, !tbaa !12
  %65 = fmul double %63, 5.000000e+00, !dbg !124
  store double %65, double* @c5dssp, align 8, !dbg !124, !tbaa !12
  %66 = load double* @dt, align 8, !dbg !125, !tbaa !12
  %67 = load double* @tx1, align 8, !dbg !125, !tbaa !12
  %68 = fmul double %66, %67, !dbg !125
  store double %68, double* @dttx1, align 8, !dbg !125, !tbaa !12
  %69 = load double* @tx2, align 8, !dbg !126, !tbaa !12
  %70 = fmul double %66, %69, !dbg !126
  store double %70, double* @dttx2, align 8, !dbg !126, !tbaa !12
  %71 = load double* @dt, align 8, !dbg !127, !tbaa !12
  %72 = load double* @ty1, align 8, !dbg !127, !tbaa !12
  %73 = fmul double %71, %72, !dbg !127
  store double %73, double* @dtty1, align 8, !dbg !127, !tbaa !12
  %74 = load double* @ty2, align 8, !dbg !128, !tbaa !12
  %75 = fmul double %71, %74, !dbg !128
  store double %75, double* @dtty2, align 8, !dbg !128, !tbaa !12
  %76 = load double* @dt, align 8, !dbg !129, !tbaa !12
  %77 = load double* @tz1, align 8, !dbg !129, !tbaa !12
  %78 = fmul double %76, %77, !dbg !129
  store double %78, double* @dttz1, align 8, !dbg !129, !tbaa !12
  %79 = load double* @tz2, align 8, !dbg !130, !tbaa !12
  %80 = fmul double %76, %79, !dbg !130
  store double %80, double* @dttz2, align 8, !dbg !130, !tbaa !12
  %81 = load double* @dttx1, align 8, !dbg !131, !tbaa !12
  %82 = fmul double %81, 2.000000e+00, !dbg !131
  store double %82, double* @c2dttx1, align 8, !dbg !131, !tbaa !12
  %83 = load double* @dtty1, align 8, !dbg !132, !tbaa !12
  %84 = fmul double %83, 2.000000e+00, !dbg !132
  store double %84, double* @c2dtty1, align 8, !dbg !132, !tbaa !12
  %85 = load double* @dttz1, align 8, !dbg !133, !tbaa !12
  %86 = fmul double %85, 2.000000e+00, !dbg !133
  store double %86, double* @c2dttz1, align 8, !dbg !133, !tbaa !12
  %87 = load double* @dt, align 8, !dbg !134, !tbaa !12
  %88 = load double* @dssp, align 8, !dbg !134, !tbaa !12
  %89 = fmul double %87, %88, !dbg !134
  store double %89, double* @dtdssp, align 8, !dbg !134, !tbaa !12
  store double %89, double* @comz1, align 8, !dbg !135, !tbaa !12
  %90 = fmul double %89, 4.000000e+00, !dbg !136
  store double %90, double* @comz4, align 8, !dbg !136, !tbaa !12
  %91 = fmul double %89, 5.000000e+00, !dbg !137
  store double %91, double* @comz5, align 8, !dbg !137, !tbaa !12
  %92 = fmul double %89, 6.000000e+00, !dbg !138
  store double %92, double* @comz6, align 8, !dbg !138, !tbaa !12
  %93 = load double* @c3c4, align 8, !dbg !139, !tbaa !12
  %94 = load double* @tx3, align 8, !dbg !139, !tbaa !12
  %95 = fmul double %93, %94, !dbg !139
  store double %95, double* @c3c4tx3, align 8, !dbg !139, !tbaa !12
  %96 = load double* @ty3, align 8, !dbg !140, !tbaa !12
  %97 = fmul double %93, %96, !dbg !140
  store double %97, double* @c3c4ty3, align 8, !dbg !140, !tbaa !12
  %98 = load double* @c3c4, align 8, !dbg !141, !tbaa !12
  %99 = load double* @tz3, align 8, !dbg !141, !tbaa !12
  %100 = fmul double %98, %99, !dbg !141
  store double %100, double* @c3c4tz3, align 8, !dbg !141, !tbaa !12
  %101 = load double* @dx1, align 8, !dbg !142, !tbaa !12
  %102 = load double* @tx1, align 8, !dbg !142, !tbaa !12
  %103 = fmul double %101, %102, !dbg !142
  store double %103, double* @dx1tx1, align 8, !dbg !142, !tbaa !12
  %104 = load double* @dx2, align 8, !dbg !143, !tbaa !12
  %105 = fmul double %102, %104, !dbg !143
  store double %105, double* @dx2tx1, align 8, !dbg !143, !tbaa !12
  %106 = load double* @dx3, align 8, !dbg !144, !tbaa !12
  %107 = load double* @tx1, align 8, !dbg !144, !tbaa !12
  %108 = fmul double %106, %107, !dbg !144
  store double %108, double* @dx3tx1, align 8, !dbg !144, !tbaa !12
  %109 = load double* @dx4, align 8, !dbg !145, !tbaa !12
  %110 = fmul double %107, %109, !dbg !145
  store double %110, double* @dx4tx1, align 8, !dbg !145, !tbaa !12
  %111 = load double* @dx5, align 8, !dbg !146, !tbaa !12
  %112 = load double* @tx1, align 8, !dbg !146, !tbaa !12
  %113 = fmul double %111, %112, !dbg !146
  store double %113, double* @dx5tx1, align 8, !dbg !146, !tbaa !12
  %114 = load double* @dy1, align 8, !dbg !147, !tbaa !12
  %115 = load double* @ty1, align 8, !dbg !147, !tbaa !12
  %116 = fmul double %114, %115, !dbg !147
  store double %116, double* @dy1ty1, align 8, !dbg !147, !tbaa !12
  %117 = load double* @dy2, align 8, !dbg !148, !tbaa !12
  %118 = fmul double %115, %117, !dbg !148
  store double %118, double* @dy2ty1, align 8, !dbg !148, !tbaa !12
  %119 = load double* @dy3, align 8, !dbg !149, !tbaa !12
  %120 = load double* @ty1, align 8, !dbg !149, !tbaa !12
  %121 = fmul double %119, %120, !dbg !149
  store double %121, double* @dy3ty1, align 8, !dbg !149, !tbaa !12
  %122 = load double* @dy4, align 8, !dbg !150, !tbaa !12
  %123 = fmul double %120, %122, !dbg !150
  store double %123, double* @dy4ty1, align 8, !dbg !150, !tbaa !12
  %124 = load double* @dy5, align 8, !dbg !151, !tbaa !12
  %125 = load double* @ty1, align 8, !dbg !151, !tbaa !12
  %126 = fmul double %124, %125, !dbg !151
  store double %126, double* @dy5ty1, align 8, !dbg !151, !tbaa !12
  %127 = load double* @dz1, align 8, !dbg !152, !tbaa !12
  %128 = load double* @tz1, align 8, !dbg !152, !tbaa !12
  %129 = fmul double %127, %128, !dbg !152
  store double %129, double* @dz1tz1, align 8, !dbg !152, !tbaa !12
  %130 = load double* @dz2, align 8, !dbg !153, !tbaa !12
  %131 = fmul double %128, %130, !dbg !153
  store double %131, double* @dz2tz1, align 8, !dbg !153, !tbaa !12
  %132 = load double* @dz3, align 8, !dbg !154, !tbaa !12
  %133 = load double* @tz1, align 8, !dbg !154, !tbaa !12
  %134 = fmul double %132, %133, !dbg !154
  store double %134, double* @dz3tz1, align 8, !dbg !154, !tbaa !12
  %135 = load double* @dz4, align 8, !dbg !155, !tbaa !12
  %136 = fmul double %133, %135, !dbg !155
  store double %136, double* @dz4tz1, align 8, !dbg !155, !tbaa !12
  %137 = load double* @dz5, align 8, !dbg !156, !tbaa !12
  %138 = load double* @tz1, align 8, !dbg !156, !tbaa !12
  %139 = fmul double %137, %138, !dbg !156
  store double %139, double* @dz5tz1, align 8, !dbg !156, !tbaa !12
  store double 2.500000e+00, double* @c2iv, align 8, !dbg !157, !tbaa !12
  store double 0x3FF5555555555555, double* @con43, align 8, !dbg !158, !tbaa !12
  store double 0x3FC5555555555555, double* @con16, align 8, !dbg !159, !tbaa !12
  %140 = load double* @c3c4tx3, align 8, !dbg !160, !tbaa !12
  %141 = fmul double %140, 0x3FF5555555555555, !dbg !160
  %142 = load double* @tx3, align 8, !dbg !160, !tbaa !12
  %143 = fmul double %141, %142, !dbg !160
  store double %143, double* @xxcon1, align 8, !dbg !160, !tbaa !12
  %144 = fmul double %140, %142, !dbg !161
  store double %144, double* @xxcon2, align 8, !dbg !161, !tbaa !12
  %145 = load double* @c3c4tx3, align 8, !dbg !162, !tbaa !12
  %146 = load double* @conz1, align 8, !dbg !162, !tbaa !12
  %147 = fmul double %145, %146, !dbg !162
  %148 = load double* @tx3, align 8, !dbg !162, !tbaa !12
  %149 = fmul double %147, %148, !dbg !162
  store double %149, double* @xxcon3, align 8, !dbg !162, !tbaa !12
  %150 = load double* @con16, align 8, !dbg !163, !tbaa !12
  %151 = fmul double %145, %150, !dbg !163
  %152 = fmul double %148, %151, !dbg !163
  store double %152, double* @xxcon4, align 8, !dbg !163, !tbaa !12
  %153 = load double* @c3c4tx3, align 8, !dbg !164, !tbaa !12
  %154 = load double* @c1c5, align 8, !dbg !164, !tbaa !12
  %155 = fmul double %153, %154, !dbg !164
  %156 = load double* @tx3, align 8, !dbg !164, !tbaa !12
  %157 = fmul double %155, %156, !dbg !164
  store double %157, double* @xxcon5, align 8, !dbg !164, !tbaa !12
  %158 = load double* @c3c4ty3, align 8, !dbg !165, !tbaa !12
  %159 = load double* @con43, align 8, !dbg !165, !tbaa !12
  %160 = fmul double %158, %159, !dbg !165
  %161 = load double* @ty3, align 8, !dbg !165, !tbaa !12
  %162 = fmul double %160, %161, !dbg !165
  store double %162, double* @yycon1, align 8, !dbg !165, !tbaa !12
  %163 = fmul double %158, %161, !dbg !166
  store double %163, double* @yycon2, align 8, !dbg !166, !tbaa !12
  %164 = load double* @c3c4ty3, align 8, !dbg !167, !tbaa !12
  %165 = load double* @conz1, align 8, !dbg !167, !tbaa !12
  %166 = fmul double %164, %165, !dbg !167
  %167 = load double* @ty3, align 8, !dbg !167, !tbaa !12
  %168 = fmul double %166, %167, !dbg !167
  store double %168, double* @yycon3, align 8, !dbg !167, !tbaa !12
  %169 = load double* @con16, align 8, !dbg !168, !tbaa !12
  %170 = fmul double %164, %169, !dbg !168
  %171 = fmul double %167, %170, !dbg !168
  store double %171, double* @yycon4, align 8, !dbg !168, !tbaa !12
  %172 = load double* @c3c4ty3, align 8, !dbg !169, !tbaa !12
  %173 = load double* @c1c5, align 8, !dbg !169, !tbaa !12
  %174 = fmul double %172, %173, !dbg !169
  %175 = load double* @ty3, align 8, !dbg !169, !tbaa !12
  %176 = fmul double %174, %175, !dbg !169
  store double %176, double* @yycon5, align 8, !dbg !169, !tbaa !12
  %177 = load double* @c3c4tz3, align 8, !dbg !170, !tbaa !12
  %178 = load double* @con43, align 8, !dbg !170, !tbaa !12
  %179 = fmul double %177, %178, !dbg !170
  %180 = load double* @tz3, align 8, !dbg !170, !tbaa !12
  %181 = fmul double %179, %180, !dbg !170
  store double %181, double* @zzcon1, align 8, !dbg !170, !tbaa !12
  %182 = fmul double %177, %180, !dbg !171
  store double %182, double* @zzcon2, align 8, !dbg !171, !tbaa !12
  %183 = load double* @c3c4tz3, align 8, !dbg !172, !tbaa !12
  %184 = load double* @conz1, align 8, !dbg !172, !tbaa !12
  %185 = fmul double %183, %184, !dbg !172
  %186 = load double* @tz3, align 8, !dbg !172, !tbaa !12
  %187 = fmul double %185, %186, !dbg !172
  store double %187, double* @zzcon3, align 8, !dbg !172, !tbaa !12
  %188 = load double* @con16, align 8, !dbg !173, !tbaa !12
  %189 = fmul double %183, %188, !dbg !173
  %190 = fmul double %186, %189, !dbg !173
  store double %190, double* @zzcon4, align 8, !dbg !173, !tbaa !12
  %191 = load double* @c3c4tz3, align 8, !dbg !174, !tbaa !12
  %192 = load double* @c1c5, align 8, !dbg !174, !tbaa !12
  %193 = fmul double %191, %192, !dbg !174
  %194 = load double* @tz3, align 8, !dbg !174, !tbaa !12
  %195 = fmul double %193, %194, !dbg !174
  store double %195, double* @zzcon5, align 8, !dbg !174, !tbaa !12
  ret void, !dbg !175
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!8, !9}
!llvm.ident = !{!10}

!0 = metadata !{i32 786449, metadata !1, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 true, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/bt/set_constants.c] [DW_LANG_C99]
!1 = metadata !{metadata !"set_constants.c", metadata !"/home/azguolu/ARAT-0.1/llvm-tracer/example/bt"}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4}
!4 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"set_constants", metadata !"set_constants", metadata !"", i32 36, metadata !6, i1 false, i1 true, i32 0, i32 0, null, i32 0, i1 true, void ()* @set_constants, null, null, metadata !2, i32 37} ; [ DW_TAG_subprogram ] [line 36] [def] [scope 37] [set_constants]
!5 = metadata !{i32 786473, metadata !1}          ; [ DW_TAG_file_type ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/bt/set_constants.c]
!6 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !7, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!7 = metadata !{null}
!8 = metadata !{i32 2, metadata !"Dwarf Version", i32 4}
!9 = metadata !{i32 1, metadata !"Debug Info Version", i32 1}
!10 = metadata !{metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"}
!11 = metadata !{i32 38, i32 0, metadata !4, null}
!12 = metadata !{metadata !13, metadata !13, i64 0}
!13 = metadata !{metadata !"double", metadata !14, i64 0}
!14 = metadata !{metadata !"omnipotent char", metadata !15, i64 0}
!15 = metadata !{metadata !"Simple C/C++ TBAA"}
!16 = metadata !{i32 39, i32 0, metadata !4, null}
!17 = metadata !{i32 40, i32 0, metadata !4, null}
!18 = metadata !{i32 41, i32 0, metadata !4, null}
!19 = metadata !{i32 42, i32 0, metadata !4, null}
!20 = metadata !{i32 43, i32 0, metadata !4, null}
!21 = metadata !{i32 44, i32 0, metadata !4, null}
!22 = metadata !{i32 45, i32 0, metadata !4, null}
!23 = metadata !{i32 46, i32 0, metadata !4, null}
!24 = metadata !{i32 47, i32 0, metadata !4, null}
!25 = metadata !{i32 48, i32 0, metadata !4, null}
!26 = metadata !{i32 49, i32 0, metadata !4, null}
!27 = metadata !{i32 50, i32 0, metadata !4, null}
!28 = metadata !{i32 52, i32 0, metadata !4, null}
!29 = metadata !{i32 53, i32 0, metadata !4, null}
!30 = metadata !{i32 54, i32 0, metadata !4, null}
!31 = metadata !{i32 55, i32 0, metadata !4, null}
!32 = metadata !{i32 56, i32 0, metadata !4, null}
!33 = metadata !{i32 57, i32 0, metadata !4, null}
!34 = metadata !{i32 58, i32 0, metadata !4, null} ; [ DW_TAG_imported_module ]
!35 = metadata !{i32 59, i32 0, metadata !4, null}
!36 = metadata !{i32 60, i32 0, metadata !4, null}
!37 = metadata !{i32 61, i32 0, metadata !4, null}
!38 = metadata !{i32 62, i32 0, metadata !4, null}
!39 = metadata !{i32 63, i32 0, metadata !4, null}
!40 = metadata !{i32 64, i32 0, metadata !4, null}
!41 = metadata !{i32 66, i32 0, metadata !4, null}
!42 = metadata !{i32 67, i32 0, metadata !4, null}
!43 = metadata !{i32 68, i32 0, metadata !4, null}
!44 = metadata !{i32 69, i32 0, metadata !4, null}
!45 = metadata !{i32 70, i32 0, metadata !4, null}
!46 = metadata !{i32 71, i32 0, metadata !4, null}
!47 = metadata !{i32 72, i32 0, metadata !4, null}
!48 = metadata !{i32 73, i32 0, metadata !4, null}
!49 = metadata !{i32 74, i32 0, metadata !4, null}
!50 = metadata !{i32 75, i32 0, metadata !4, null}
!51 = metadata !{i32 76, i32 0, metadata !4, null}
!52 = metadata !{i32 77, i32 0, metadata !4, null}
!53 = metadata !{i32 78, i32 0, metadata !4, null}
!54 = metadata !{i32 80, i32 0, metadata !4, null}
!55 = metadata !{i32 81, i32 0, metadata !4, null}
!56 = metadata !{i32 82, i32 0, metadata !4, null}
!57 = metadata !{i32 83, i32 0, metadata !4, null}
!58 = metadata !{i32 84, i32 0, metadata !4, null}
!59 = metadata !{i32 85, i32 0, metadata !4, null}
!60 = metadata !{i32 86, i32 0, metadata !4, null}
!61 = metadata !{i32 87, i32 0, metadata !4, null}
!62 = metadata !{i32 88, i32 0, metadata !4, null}
!63 = metadata !{i32 89, i32 0, metadata !4, null}
!64 = metadata !{i32 90, i32 0, metadata !4, null}
!65 = metadata !{i32 91, i32 0, metadata !4, null}
!66 = metadata !{i32 92, i32 0, metadata !4, null}
!67 = metadata !{i32 94, i32 0, metadata !4, null}
!68 = metadata !{i32 95, i32 0, metadata !4, null}
!69 = metadata !{i32 96, i32 0, metadata !4, null}
!70 = metadata !{i32 97, i32 0, metadata !4, null}
!71 = metadata !{i32 98, i32 0, metadata !4, null}
!72 = metadata !{i32 99, i32 0, metadata !4, null}
!73 = metadata !{i32 100, i32 0, metadata !4, null}
!74 = metadata !{i32 101, i32 0, metadata !4, null}
!75 = metadata !{i32 102, i32 0, metadata !4, null}
!76 = metadata !{i32 103, i32 0, metadata !4, null}
!77 = metadata !{i32 104, i32 0, metadata !4, null}
!78 = metadata !{i32 105, i32 0, metadata !4, null}
!79 = metadata !{i32 106, i32 0, metadata !4, null}
!80 = metadata !{i32 108, i32 0, metadata !4, null}
!81 = metadata !{i32 109, i32 0, metadata !4, null}
!82 = metadata !{i32 110, i32 0, metadata !4, null}
!83 = metadata !{i32 111, i32 0, metadata !4, null}
!84 = metadata !{i32 112, i32 0, metadata !4, null}
!85 = metadata !{i32 114, i32 0, metadata !4, null}
!86 = metadata !{metadata !87, metadata !87, i64 0}
!87 = metadata !{metadata !"int", metadata !14, i64 0}
!88 = metadata !{i32 115, i32 0, metadata !4, null}
!89 = metadata !{i32 116, i32 0, metadata !4, null}
!90 = metadata !{i32 118, i32 0, metadata !4, null}
!91 = metadata !{i32 119, i32 0, metadata !4, null}
!92 = metadata !{i32 120, i32 0, metadata !4, null}
!93 = metadata !{i32 121, i32 0, metadata !4, null}
!94 = metadata !{i32 123, i32 0, metadata !4, null}
!95 = metadata !{i32 125, i32 0, metadata !4, null}
!96 = metadata !{i32 126, i32 0, metadata !4, null}
!97 = metadata !{i32 127, i32 0, metadata !4, null}
!98 = metadata !{i32 129, i32 0, metadata !4, null}
!99 = metadata !{i32 130, i32 0, metadata !4, null}
!100 = metadata !{i32 131, i32 0, metadata !4, null}
!101 = metadata !{i32 133, i32 0, metadata !4, null}
!102 = metadata !{i32 134, i32 0, metadata !4, null}
!103 = metadata !{i32 135, i32 0, metadata !4, null}
!104 = metadata !{i32 137, i32 0, metadata !4, null}
!105 = metadata !{i32 138, i32 0, metadata !4, null}
!106 = metadata !{i32 139, i32 0, metadata !4, null}
!107 = metadata !{i32 140, i32 0, metadata !4, null}
!108 = metadata !{i32 141, i32 0, metadata !4, null}
!109 = metadata !{i32 143, i32 0, metadata !4, null}
!110 = metadata !{i32 144, i32 0, metadata !4, null}
!111 = metadata !{i32 145, i32 0, metadata !4, null}
!112 = metadata !{i32 146, i32 0, metadata !4, null}
!113 = metadata !{i32 147, i32 0, metadata !4, null}
!114 = metadata !{i32 149, i32 0, metadata !4, null}
!115 = metadata !{i32 150, i32 0, metadata !4, null}
!116 = metadata !{i32 151, i32 0, metadata !4, null}
!117 = metadata !{i32 152, i32 0, metadata !4, null}
!118 = metadata !{i32 153, i32 0, metadata !4, null}
!119 = metadata !{i32 155, i32 0, metadata !4, null}
!120 = metadata !{i32 156, i32 0, metadata !4, null}
!121 = metadata !{i32 157, i32 0, metadata !4, null}
!122 = metadata !{i32 159, i32 0, metadata !4, null}
!123 = metadata !{i32 161, i32 0, metadata !4, null}
!124 = metadata !{i32 162, i32 0, metadata !4, null}
!125 = metadata !{i32 164, i32 0, metadata !4, null}
!126 = metadata !{i32 165, i32 0, metadata !4, null}
!127 = metadata !{i32 166, i32 0, metadata !4, null}
!128 = metadata !{i32 167, i32 0, metadata !4, null}
!129 = metadata !{i32 168, i32 0, metadata !4, null}
!130 = metadata !{i32 169, i32 0, metadata !4, null}
!131 = metadata !{i32 171, i32 0, metadata !4, null}
!132 = metadata !{i32 172, i32 0, metadata !4, null}
!133 = metadata !{i32 173, i32 0, metadata !4, null}
!134 = metadata !{i32 175, i32 0, metadata !4, null}
!135 = metadata !{i32 177, i32 0, metadata !4, null}
!136 = metadata !{i32 178, i32 0, metadata !4, null}
!137 = metadata !{i32 179, i32 0, metadata !4, null}
!138 = metadata !{i32 180, i32 0, metadata !4, null}
!139 = metadata !{i32 182, i32 0, metadata !4, null}
!140 = metadata !{i32 183, i32 0, metadata !4, null}
!141 = metadata !{i32 184, i32 0, metadata !4, null}
!142 = metadata !{i32 186, i32 0, metadata !4, null}
!143 = metadata !{i32 187, i32 0, metadata !4, null}
!144 = metadata !{i32 188, i32 0, metadata !4, null}
!145 = metadata !{i32 189, i32 0, metadata !4, null}
!146 = metadata !{i32 190, i32 0, metadata !4, null}
!147 = metadata !{i32 192, i32 0, metadata !4, null}
!148 = metadata !{i32 193, i32 0, metadata !4, null}
!149 = metadata !{i32 194, i32 0, metadata !4, null}
!150 = metadata !{i32 195, i32 0, metadata !4, null}
!151 = metadata !{i32 196, i32 0, metadata !4, null}
!152 = metadata !{i32 198, i32 0, metadata !4, null}
!153 = metadata !{i32 199, i32 0, metadata !4, null}
!154 = metadata !{i32 200, i32 0, metadata !4, null}
!155 = metadata !{i32 201, i32 0, metadata !4, null}
!156 = metadata !{i32 202, i32 0, metadata !4, null}
!157 = metadata !{i32 204, i32 0, metadata !4, null}
!158 = metadata !{i32 205, i32 0, metadata !4, null}
!159 = metadata !{i32 206, i32 0, metadata !4, null}
!160 = metadata !{i32 208, i32 0, metadata !4, null}
!161 = metadata !{i32 209, i32 0, metadata !4, null}
!162 = metadata !{i32 210, i32 0, metadata !4, null}
!163 = metadata !{i32 211, i32 0, metadata !4, null}
!164 = metadata !{i32 212, i32 0, metadata !4, null}
!165 = metadata !{i32 214, i32 0, metadata !4, null}
!166 = metadata !{i32 215, i32 0, metadata !4, null}
!167 = metadata !{i32 216, i32 0, metadata !4, null}
!168 = metadata !{i32 217, i32 0, metadata !4, null}
!169 = metadata !{i32 218, i32 0, metadata !4, null}
!170 = metadata !{i32 220, i32 0, metadata !4, null}
!171 = metadata !{i32 221, i32 0, metadata !4, null}
!172 = metadata !{i32 222, i32 0, metadata !4, null}
!173 = metadata !{i32 223, i32 0, metadata !4, null}
!174 = metadata !{i32 224, i32 0, metadata !4, null}
!175 = metadata !{i32 225, i32 0, metadata !4, null}
