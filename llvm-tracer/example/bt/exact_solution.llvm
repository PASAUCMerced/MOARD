; ModuleID = 'exact_solution.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ce = external global [5 x [13 x double]]

; Function Attrs: nounwind uwtable
define void @exact_solution(double %xi, double %eta, double %zeta, double* nocapture %dtemp) #0 {
  tail call void @llvm.dbg.value(metadata !{double %xi}, i64 0, metadata !11), !dbg !20
  tail call void @llvm.dbg.value(metadata !{double %eta}, i64 0, metadata !12), !dbg !20
  tail call void @llvm.dbg.value(metadata !{double %zeta}, i64 0, metadata !13), !dbg !20
  tail call void @llvm.dbg.value(metadata !{double* %dtemp}, i64 0, metadata !14), !dbg !20
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !15), !dbg !21
  br label %1, !dbg !21

; <label>:1                                       ; preds = %1, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %1 ]
  %2 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 0, !dbg !23
  %3 = load double* %2, align 8, !dbg !23, !tbaa !25
  %4 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 1, !dbg !23
  %5 = load double* %4, align 8, !dbg !23, !tbaa !25
  %6 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 4, !dbg !23
  %7 = load double* %6, align 8, !dbg !23, !tbaa !25
  %8 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 7, !dbg !23
  %9 = load double* %8, align 8, !dbg !23, !tbaa !25
  %10 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 10, !dbg !23
  %11 = load double* %10, align 8, !dbg !23, !tbaa !25
  %12 = fmul double %11, %xi, !dbg !23
  %13 = fadd double %9, %12, !dbg !23
  %14 = fmul double %13, %xi, !dbg !23
  %15 = fadd double %7, %14, !dbg !23
  %16 = fmul double %15, %xi, !dbg !23
  %17 = fadd double %5, %16, !dbg !23
  %18 = fmul double %17, %xi, !dbg !23
  %19 = fadd double %3, %18, !dbg !23
  %20 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 2, !dbg !23
  %21 = load double* %20, align 8, !dbg !23, !tbaa !25
  %22 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 5, !dbg !23
  %23 = load double* %22, align 8, !dbg !23, !tbaa !25
  %24 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 8, !dbg !23
  %25 = load double* %24, align 8, !dbg !23, !tbaa !25
  %26 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 11, !dbg !23
  %27 = load double* %26, align 8, !dbg !23, !tbaa !25
  %28 = fmul double %27, %eta, !dbg !23
  %29 = fadd double %25, %28, !dbg !23
  %30 = fmul double %29, %eta, !dbg !23
  %31 = fadd double %23, %30, !dbg !23
  %32 = fmul double %31, %eta, !dbg !23
  %33 = fadd double %21, %32, !dbg !23
  %34 = fmul double %33, %eta, !dbg !23
  %35 = fadd double %19, %34, !dbg !23
  %36 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 3, !dbg !23
  %37 = load double* %36, align 8, !dbg !23, !tbaa !25
  %38 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 6, !dbg !23
  %39 = load double* %38, align 8, !dbg !23, !tbaa !25
  %40 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 9, !dbg !23
  %41 = load double* %40, align 8, !dbg !23, !tbaa !25
  %42 = getelementptr inbounds [5 x [13 x double]]* @ce, i64 0, i64 %indvars.iv, i64 12, !dbg !23
  %43 = load double* %42, align 8, !dbg !23, !tbaa !25
  %44 = fmul double %43, %zeta, !dbg !23
  %45 = fadd double %41, %44, !dbg !23
  %46 = fmul double %45, %zeta, !dbg !23
  %47 = fadd double %39, %46, !dbg !23
  %48 = fmul double %47, %zeta, !dbg !23
  %49 = fadd double %37, %48, !dbg !23
  %50 = fmul double %49, %zeta, !dbg !23
  %51 = fadd double %35, %50, !dbg !23
  %52 = getelementptr inbounds double* %dtemp, i64 %indvars.iv, !dbg !23
  store double %51, double* %52, align 8, !dbg !23, !tbaa !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !21
  %exitcond = icmp eq i64 %indvars.iv.next, 5, !dbg !21
  br i1 %exitcond, label %53, label %1, !dbg !21

; <label>:53                                      ; preds = %1
  ret void, !dbg !29
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!17, !18}
!llvm.ident = !{!19}

!0 = metadata !{i32 786449, metadata !1, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 true, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/bt/exact_solution.c] [DW_LANG_C99]
!1 = metadata !{metadata !"exact_solution.c", metadata !"/home/azguolu/ARAT-0.1/llvm-tracer/example/bt"}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4}
!4 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"exact_solution", metadata !"exact_solution", metadata !"", i32 39, metadata !6, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (double, double, double, double*)* @exact_solution, null, null, metadata !10, i32 40} ; [ DW_TAG_subprogram ] [line 39] [def] [scope 40] [exact_solution]
!5 = metadata !{i32 786473, metadata !1}          ; [ DW_TAG_file_type ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/bt/exact_solution.c]
!6 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !7, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!7 = metadata !{null, metadata !8, metadata !8, metadata !8, metadata !9}
!8 = metadata !{i32 786468, null, null, metadata !"double", i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ] [double] [line 0, size 64, align 64, offset 0, enc DW_ATE_float]
!9 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !8} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from double]
!10 = metadata !{metadata !11, metadata !12, metadata !13, metadata !14, metadata !15}
!11 = metadata !{i32 786689, metadata !4, metadata !"xi", metadata !5, i32 16777255, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [xi] [line 39]
!12 = metadata !{i32 786689, metadata !4, metadata !"eta", metadata !5, i32 33554471, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [eta] [line 39]
!13 = metadata !{i32 786689, metadata !4, metadata !"zeta", metadata !5, i32 50331687, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [zeta] [line 39]
!14 = metadata !{i32 786689, metadata !4, metadata !"dtemp", metadata !5, i32 67108903, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [dtemp] [line 39]
!15 = metadata !{i32 786688, metadata !4, metadata !"m", metadata !5, i32 41, metadata !16, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [m] [line 41]
!16 = metadata !{i32 786468, null, null, metadata !"int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!17 = metadata !{i32 2, metadata !"Dwarf Version", i32 4}
!18 = metadata !{i32 1, metadata !"Debug Info Version", i32 1}
!19 = metadata !{metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"}
!20 = metadata !{i32 39, i32 0, metadata !4, null}
!21 = metadata !{i32 43, i32 0, metadata !22, null}
!22 = metadata !{i32 786443, metadata !1, metadata !4, i32 43, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/bt/exact_solution.c]
!23 = metadata !{i32 44, i32 0, metadata !24, null}
!24 = metadata !{i32 786443, metadata !1, metadata !22, i32 43, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/bt/exact_solution.c]
!25 = metadata !{metadata !26, metadata !26, i64 0}
!26 = metadata !{metadata !"double", metadata !27, i64 0}
!27 = metadata !{metadata !"omnipotent char", metadata !28, i64 0}
!28 = metadata !{metadata !"Simple C/C++ TBAA"}
!29 = metadata !{i32 50, i32 0, metadata !4, null}
