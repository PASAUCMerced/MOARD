; ModuleID = 'domain.llvm'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@nx0 = external global i32
@nx = external global i32
@ny0 = external global i32
@ny = external global i32
@nz0 = external global i32
@nz = external global i32
@.str = private unnamed_addr constant [177 x i8] c"     SUBDOMAIN SIZE IS TOO SMALL - \0A     ADJUST PROBLEM SIZE OR NUMBER OF PROCESSORS\0A     SO THAT NX, NY AND NZ ARE GREATER THAN OR EQUAL\0A     TO 4 THEY ARE CURRENTLY%3d%3d%3d\0A\00", align 1
@.str1 = private unnamed_addr constant [217 x i8] c"     SUBDOMAIN SIZE IS TOO LARGE - \0A     ADJUST PROBLEM SIZE OR NUMBER OF PROCESSORS\0A     SO THAT NX, NY AND NZ ARE LESS THAN OR EQUAL TO \0A     ISIZ1, ISIZ2 AND ISIZ3 RESPECTIVELY.  THEY ARE\0A     CURRENTLYi%4d%4d%4d\0A\00", align 1
@ist = external global i32
@iend = external global i32
@jst = external global i32
@jend = external global i32
@ii1 = external global i32
@ii2 = external global i32
@ji1 = external global i32
@ji2 = external global i32
@ki1 = external global i32
@ki2 = external global i32
@.str2 = private constant [7 x i8] c"domain\00"
@.str3 = private constant [2 x i8] c"0\00"
@.str4 = private constant [2 x i8] c"1\00"
@.str5 = private constant [4 x i8] c"nx0\00"
@.str6 = private constant [4 x i8] c"phi\00"
@.str7 = private constant [2 x i8] c"1\00"
@.str8 = private constant [4 x i8] c"phi\00"
@.str9 = private constant [7 x i8] c"domain\00"
@.str10 = private constant [2 x i8] c"0\00"
@.str11 = private constant [4 x i8] c"0-0\00"
@.str12 = private constant [3 x i8] c"nx\00"
@.str13 = private constant [4 x i8] c"phi\00"
@.str14 = private constant [2 x i8] c"1\00"
@.str15 = private constant [4 x i8] c"phi\00"
@.str16 = private constant [7 x i8] c"domain\00"
@.str17 = private constant [2 x i8] c"0\00"
@.str18 = private constant [2 x i8] c"2\00"
@.str19 = private constant [4 x i8] c"ny0\00"
@.str20 = private constant [4 x i8] c"phi\00"
@.str21 = private constant [2 x i8] c"2\00"
@.str22 = private constant [4 x i8] c"phi\00"
@.str23 = private constant [7 x i8] c"domain\00"
@.str24 = private constant [2 x i8] c"0\00"
@.str25 = private constant [4 x i8] c"0-1\00"
@.str26 = private constant [3 x i8] c"ny\00"
@.str27 = private constant [4 x i8] c"phi\00"
@.str28 = private constant [2 x i8] c"2\00"
@.str29 = private constant [4 x i8] c"phi\00"
@.str30 = private constant [7 x i8] c"domain\00"
@.str31 = private constant [2 x i8] c"0\00"
@.str32 = private constant [2 x i8] c"3\00"
@.str33 = private constant [4 x i8] c"nz0\00"
@.str34 = private constant [4 x i8] c"phi\00"
@.str35 = private constant [2 x i8] c"3\00"
@.str36 = private constant [4 x i8] c"phi\00"
@.str37 = private constant [7 x i8] c"domain\00"
@.str38 = private constant [2 x i8] c"0\00"
@.str39 = private constant [4 x i8] c"0-2\00"
@.str40 = private constant [3 x i8] c"nz\00"
@.str41 = private constant [4 x i8] c"phi\00"
@.str42 = private constant [2 x i8] c"3\00"
@.str43 = private constant [4 x i8] c"phi\00"
@.str44 = private constant [7 x i8] c"domain\00"
@.str45 = private constant [2 x i8] c"0\00"
@.str46 = private constant [2 x i8] c"4\00"
@.str47 = private constant [1 x i8] zeroinitializer
@.str48 = private constant [4 x i8] c"phi\00"
@.str49 = private constant [2 x i8] c"1\00"
@.str50 = private constant [4 x i8] c"phi\00"
@.str51 = private constant [2 x i8] c"4\00"
@.str52 = private constant [4 x i8] c"phi\00"
@.str53 = private constant [7 x i8] c"domain\00"
@.str54 = private constant [2 x i8] c"0\00"
@.str55 = private constant [2 x i8] c"5\00"
@.str56 = private constant [1 x i8] zeroinitializer
@.str57 = private constant [4 x i8] c"phi\00"
@.str58 = private constant [2 x i8] c"2\00"
@.str59 = private constant [4 x i8] c"phi\00"
@.str60 = private constant [2 x i8] c"5\00"
@.str61 = private constant [4 x i8] c"phi\00"
@.str62 = private constant [7 x i8] c"domain\00"
@.str63 = private constant [2 x i8] c"0\00"
@.str64 = private constant [8 x i8] c"or.cond\00"
@.str65 = private constant [2 x i8] c"5\00"
@.str66 = private constant [4 x i8] c"phi\00"
@.str67 = private constant [2 x i8] c"4\00"
@.str68 = private constant [4 x i8] c"phi\00"
@.str69 = private constant [8 x i8] c"or.cond\00"
@.str70 = private constant [4 x i8] c"phi\00"
@.str71 = private constant [7 x i8] c"domain\00"
@.str72 = private constant [2 x i8] c"0\00"
@.str73 = private constant [2 x i8] c"6\00"
@.str74 = private constant [1 x i8] zeroinitializer
@.str75 = private constant [4 x i8] c"phi\00"
@.str76 = private constant [2 x i8] c"3\00"
@.str77 = private constant [4 x i8] c"phi\00"
@.str78 = private constant [2 x i8] c"6\00"
@.str79 = private constant [4 x i8] c"phi\00"
@.str80 = private constant [7 x i8] c"domain\00"
@.str81 = private constant [2 x i8] c"0\00"
@.str82 = private constant [9 x i8] c"or.cond3\00"
@.str83 = private constant [2 x i8] c"6\00"
@.str84 = private constant [4 x i8] c"phi\00"
@.str85 = private constant [8 x i8] c"or.cond\00"
@.str86 = private constant [4 x i8] c"phi\00"
@.str87 = private constant [9 x i8] c"or.cond3\00"
@.str88 = private constant [4 x i8] c"phi\00"
@.str89 = private constant [7 x i8] c"domain\00"
@.str90 = private constant [2 x i8] c"0\00"
@.str91 = private constant [4 x i8] c"0-3\00"
@.str92 = private constant [2 x i8] c"7\00"
@.str93 = private constant [4 x i8] c"phi\00"
@.str94 = private constant [2 x i8] c"9\00"
@.str95 = private constant [4 x i8] c"phi\00"
@.str96 = private constant [9 x i8] c"or.cond3\00"
@.str97 = private constant [4 x i8] c"phi\00"
@.str98 = private constant [7 x i8] c"domain\00"
@.str99 = private constant [2 x i8] c"7\00"
@.str100 = private constant [2 x i8] c"8\00"
@.str101 = private constant [7 x i8] c"printf\00"
@.str102 = private constant [4 x i8] c"phi\00"
@.str103 = private constant [1 x i8] zeroinitializer
@.str104 = private constant [4 x i8] c"phi\00"
@.str105 = private constant [1 x i8] zeroinitializer
@.str106 = private constant [4 x i8] c"phi\00"
@.str107 = private constant [2 x i8] c"8\00"
@.str108 = private constant [4 x i8] c"phi\00"
@.str109 = private constant [7 x i8] c"domain\00"
@.str110 = private constant [2 x i8] c"7\00"
@.str111 = private constant [4 x i8] c"7-0\00"
@.str112 = private constant [5 x i8] c"exit\00"
@.str113 = private constant [4 x i8] c"phi\00"
@.str114 = private constant [1 x i8] zeroinitializer
@.str115 = private constant [4 x i8] c"phi\00"
@.str116 = private constant [1 x i8] zeroinitializer
@.str117 = private constant [4 x i8] c"phi\00"
@.str118 = private constant [7 x i8] c"domain\00"
@.str119 = private constant [2 x i8] c"7\00"
@.str120 = private constant [4 x i8] c"7-1\00"
@.str121 = private constant [7 x i8] c"domain\00"
@.str122 = private constant [2 x i8] c"9\00"
@.str123 = private constant [3 x i8] c"10\00"
@.str124 = private constant [1 x i8] zeroinitializer
@.str125 = private constant [4 x i8] c"phi\00"
@.str126 = private constant [2 x i8] c"1\00"
@.str127 = private constant [4 x i8] c"phi\00"
@.str128 = private constant [3 x i8] c"10\00"
@.str129 = private constant [4 x i8] c"phi\00"
@.str130 = private constant [7 x i8] c"domain\00"
@.str131 = private constant [2 x i8] c"9\00"
@.str132 = private constant [3 x i8] c"11\00"
@.str133 = private constant [1 x i8] zeroinitializer
@.str134 = private constant [4 x i8] c"phi\00"
@.str135 = private constant [2 x i8] c"2\00"
@.str136 = private constant [4 x i8] c"phi\00"
@.str137 = private constant [3 x i8] c"11\00"
@.str138 = private constant [4 x i8] c"phi\00"
@.str139 = private constant [7 x i8] c"domain\00"
@.str140 = private constant [2 x i8] c"9\00"
@.str141 = private constant [9 x i8] c"or.cond5\00"
@.str142 = private constant [3 x i8] c"11\00"
@.str143 = private constant [4 x i8] c"phi\00"
@.str144 = private constant [3 x i8] c"10\00"
@.str145 = private constant [4 x i8] c"phi\00"
@.str146 = private constant [9 x i8] c"or.cond5\00"
@.str147 = private constant [4 x i8] c"phi\00"
@.str148 = private constant [7 x i8] c"domain\00"
@.str149 = private constant [2 x i8] c"9\00"
@.str150 = private constant [3 x i8] c"12\00"
@.str151 = private constant [1 x i8] zeroinitializer
@.str152 = private constant [4 x i8] c"phi\00"
@.str153 = private constant [2 x i8] c"3\00"
@.str154 = private constant [4 x i8] c"phi\00"
@.str155 = private constant [3 x i8] c"12\00"
@.str156 = private constant [4 x i8] c"phi\00"
@.str157 = private constant [7 x i8] c"domain\00"
@.str158 = private constant [2 x i8] c"9\00"
@.str159 = private constant [9 x i8] c"or.cond7\00"
@.str160 = private constant [3 x i8] c"12\00"
@.str161 = private constant [4 x i8] c"phi\00"
@.str162 = private constant [9 x i8] c"or.cond5\00"
@.str163 = private constant [4 x i8] c"phi\00"
@.str164 = private constant [9 x i8] c"or.cond7\00"
@.str165 = private constant [4 x i8] c"phi\00"
@.str166 = private constant [7 x i8] c"domain\00"
@.str167 = private constant [2 x i8] c"9\00"
@.str168 = private constant [4 x i8] c"9-0\00"
@.str169 = private constant [3 x i8] c"13\00"
@.str170 = private constant [4 x i8] c"phi\00"
@.str171 = private constant [3 x i8] c"15\00"
@.str172 = private constant [4 x i8] c"phi\00"
@.str173 = private constant [9 x i8] c"or.cond7\00"
@.str174 = private constant [4 x i8] c"phi\00"
@.str175 = private constant [7 x i8] c"domain\00"
@.str176 = private constant [3 x i8] c"13\00"
@.str177 = private constant [3 x i8] c"14\00"
@.str178 = private constant [7 x i8] c"printf\00"
@.str179 = private constant [4 x i8] c"phi\00"
@.str180 = private constant [1 x i8] zeroinitializer
@.str181 = private constant [4 x i8] c"phi\00"
@.str182 = private constant [1 x i8] zeroinitializer
@.str183 = private constant [4 x i8] c"phi\00"
@.str184 = private constant [3 x i8] c"14\00"
@.str185 = private constant [4 x i8] c"phi\00"
@.str186 = private constant [7 x i8] c"domain\00"
@.str187 = private constant [3 x i8] c"13\00"
@.str188 = private constant [5 x i8] c"13-0\00"
@.str189 = private constant [5 x i8] c"exit\00"
@.str190 = private constant [4 x i8] c"phi\00"
@.str191 = private constant [1 x i8] zeroinitializer
@.str192 = private constant [4 x i8] c"phi\00"
@.str193 = private constant [1 x i8] zeroinitializer
@.str194 = private constant [4 x i8] c"phi\00"
@.str195 = private constant [7 x i8] c"domain\00"
@.str196 = private constant [3 x i8] c"13\00"
@.str197 = private constant [5 x i8] c"13-1\00"
@.str198 = private constant [7 x i8] c"domain\00"
@.str199 = private constant [3 x i8] c"15\00"
@.str200 = private constant [5 x i8] c"15-0\00"
@.str201 = private constant [4 x i8] c"ist\00"
@.str202 = private constant [4 x i8] c"phi\00"
@.str203 = private constant [1 x i8] zeroinitializer
@.str204 = private constant [4 x i8] c"phi\00"
@.str205 = private constant [7 x i8] c"domain\00"
@.str206 = private constant [3 x i8] c"15\00"
@.str207 = private constant [3 x i8] c"16\00"
@.str208 = private constant [3 x i8] c"nx\00"
@.str209 = private constant [4 x i8] c"phi\00"
@.str210 = private constant [3 x i8] c"16\00"
@.str211 = private constant [4 x i8] c"phi\00"
@.str212 = private constant [7 x i8] c"domain\00"
@.str213 = private constant [3 x i8] c"15\00"
@.str214 = private constant [3 x i8] c"17\00"
@.str215 = private constant [1 x i8] zeroinitializer
@.str216 = private constant [4 x i8] c"phi\00"
@.str217 = private constant [3 x i8] c"16\00"
@.str218 = private constant [4 x i8] c"phi\00"
@.str219 = private constant [3 x i8] c"17\00"
@.str220 = private constant [4 x i8] c"phi\00"
@.str221 = private constant [7 x i8] c"domain\00"
@.str222 = private constant [3 x i8] c"15\00"
@.str223 = private constant [5 x i8] c"15-1\00"
@.str224 = private constant [5 x i8] c"iend\00"
@.str225 = private constant [4 x i8] c"phi\00"
@.str226 = private constant [3 x i8] c"17\00"
@.str227 = private constant [4 x i8] c"phi\00"
@.str228 = private constant [7 x i8] c"domain\00"
@.str229 = private constant [3 x i8] c"15\00"
@.str230 = private constant [5 x i8] c"15-2\00"
@.str231 = private constant [4 x i8] c"jst\00"
@.str232 = private constant [4 x i8] c"phi\00"
@.str233 = private constant [1 x i8] zeroinitializer
@.str234 = private constant [4 x i8] c"phi\00"
@.str235 = private constant [7 x i8] c"domain\00"
@.str236 = private constant [3 x i8] c"15\00"
@.str237 = private constant [3 x i8] c"18\00"
@.str238 = private constant [3 x i8] c"ny\00"
@.str239 = private constant [4 x i8] c"phi\00"
@.str240 = private constant [3 x i8] c"18\00"
@.str241 = private constant [4 x i8] c"phi\00"
@.str242 = private constant [7 x i8] c"domain\00"
@.str243 = private constant [3 x i8] c"15\00"
@.str244 = private constant [3 x i8] c"19\00"
@.str245 = private constant [1 x i8] zeroinitializer
@.str246 = private constant [4 x i8] c"phi\00"
@.str247 = private constant [3 x i8] c"18\00"
@.str248 = private constant [4 x i8] c"phi\00"
@.str249 = private constant [3 x i8] c"19\00"
@.str250 = private constant [4 x i8] c"phi\00"
@.str251 = private constant [7 x i8] c"domain\00"
@.str252 = private constant [3 x i8] c"15\00"
@.str253 = private constant [5 x i8] c"15-3\00"
@.str254 = private constant [5 x i8] c"jend\00"
@.str255 = private constant [4 x i8] c"phi\00"
@.str256 = private constant [3 x i8] c"19\00"
@.str257 = private constant [4 x i8] c"phi\00"
@.str258 = private constant [7 x i8] c"domain\00"
@.str259 = private constant [3 x i8] c"15\00"
@.str260 = private constant [5 x i8] c"15-4\00"
@.str261 = private constant [4 x i8] c"ii1\00"
@.str262 = private constant [4 x i8] c"phi\00"
@.str263 = private constant [1 x i8] zeroinitializer
@.str264 = private constant [4 x i8] c"phi\00"
@.str265 = private constant [7 x i8] c"domain\00"
@.str266 = private constant [3 x i8] c"15\00"
@.str267 = private constant [3 x i8] c"20\00"
@.str268 = private constant [4 x i8] c"nx0\00"
@.str269 = private constant [4 x i8] c"phi\00"
@.str270 = private constant [3 x i8] c"20\00"
@.str271 = private constant [4 x i8] c"phi\00"
@.str272 = private constant [7 x i8] c"domain\00"
@.str273 = private constant [3 x i8] c"15\00"
@.str274 = private constant [3 x i8] c"21\00"
@.str275 = private constant [1 x i8] zeroinitializer
@.str276 = private constant [4 x i8] c"phi\00"
@.str277 = private constant [3 x i8] c"20\00"
@.str278 = private constant [4 x i8] c"phi\00"
@.str279 = private constant [3 x i8] c"21\00"
@.str280 = private constant [4 x i8] c"phi\00"
@.str281 = private constant [7 x i8] c"domain\00"
@.str282 = private constant [3 x i8] c"15\00"
@.str283 = private constant [5 x i8] c"15-5\00"
@.str284 = private constant [4 x i8] c"ii2\00"
@.str285 = private constant [4 x i8] c"phi\00"
@.str286 = private constant [3 x i8] c"21\00"
@.str287 = private constant [4 x i8] c"phi\00"
@.str288 = private constant [7 x i8] c"domain\00"
@.str289 = private constant [3 x i8] c"15\00"
@.str290 = private constant [5 x i8] c"15-6\00"
@.str291 = private constant [4 x i8] c"ji1\00"
@.str292 = private constant [4 x i8] c"phi\00"
@.str293 = private constant [1 x i8] zeroinitializer
@.str294 = private constant [4 x i8] c"phi\00"
@.str295 = private constant [7 x i8] c"domain\00"
@.str296 = private constant [3 x i8] c"15\00"
@.str297 = private constant [3 x i8] c"22\00"
@.str298 = private constant [4 x i8] c"ny0\00"
@.str299 = private constant [4 x i8] c"phi\00"
@.str300 = private constant [3 x i8] c"22\00"
@.str301 = private constant [4 x i8] c"phi\00"
@.str302 = private constant [7 x i8] c"domain\00"
@.str303 = private constant [3 x i8] c"15\00"
@.str304 = private constant [3 x i8] c"23\00"
@.str305 = private constant [1 x i8] zeroinitializer
@.str306 = private constant [4 x i8] c"phi\00"
@.str307 = private constant [3 x i8] c"22\00"
@.str308 = private constant [4 x i8] c"phi\00"
@.str309 = private constant [3 x i8] c"23\00"
@.str310 = private constant [4 x i8] c"phi\00"
@.str311 = private constant [7 x i8] c"domain\00"
@.str312 = private constant [3 x i8] c"15\00"
@.str313 = private constant [5 x i8] c"15-7\00"
@.str314 = private constant [4 x i8] c"ji2\00"
@.str315 = private constant [4 x i8] c"phi\00"
@.str316 = private constant [3 x i8] c"23\00"
@.str317 = private constant [4 x i8] c"phi\00"
@.str318 = private constant [7 x i8] c"domain\00"
@.str319 = private constant [3 x i8] c"15\00"
@.str320 = private constant [5 x i8] c"15-8\00"
@.str321 = private constant [4 x i8] c"ki1\00"
@.str322 = private constant [4 x i8] c"phi\00"
@.str323 = private constant [1 x i8] zeroinitializer
@.str324 = private constant [4 x i8] c"phi\00"
@.str325 = private constant [7 x i8] c"domain\00"
@.str326 = private constant [3 x i8] c"15\00"
@.str327 = private constant [3 x i8] c"24\00"
@.str328 = private constant [4 x i8] c"nz0\00"
@.str329 = private constant [4 x i8] c"phi\00"
@.str330 = private constant [3 x i8] c"24\00"
@.str331 = private constant [4 x i8] c"phi\00"
@.str332 = private constant [7 x i8] c"domain\00"
@.str333 = private constant [3 x i8] c"15\00"
@.str334 = private constant [3 x i8] c"25\00"
@.str335 = private constant [1 x i8] zeroinitializer
@.str336 = private constant [4 x i8] c"phi\00"
@.str337 = private constant [3 x i8] c"24\00"
@.str338 = private constant [4 x i8] c"phi\00"
@.str339 = private constant [3 x i8] c"25\00"
@.str340 = private constant [4 x i8] c"phi\00"
@.str341 = private constant [7 x i8] c"domain\00"
@.str342 = private constant [3 x i8] c"15\00"
@.str343 = private constant [5 x i8] c"15-9\00"
@.str344 = private constant [4 x i8] c"ki2\00"
@.str345 = private constant [4 x i8] c"phi\00"
@.str346 = private constant [3 x i8] c"25\00"
@.str347 = private constant [4 x i8] c"phi\00"
@.str348 = private constant [7 x i8] c"domain\00"
@.str349 = private constant [3 x i8] c"15\00"
@.str350 = private constant [6 x i8] c"15-10\00"

; Function Attrs: nounwind uwtable
define void @domain() #0 {
  call void @trace_logger_log0(i64 43, i8* getelementptr inbounds ([7 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str4, i32 0, i32 0), i64 27, i1 false, i1 true), !dbg !11
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint (i32* @nx0 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str5, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str6, i32 0, i32 0)), !dbg !11
  %1 = load i32* @nx0, align 4, !dbg !11, !tbaa !12
  %2 = zext i32 %1 to i64, !dbg !11
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %2, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str7, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str8, i32 0, i32 0)), !dbg !11
  call void @trace_logger_log0(i64 43, i8* getelementptr inbounds ([7 x i8]* @.str9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str11, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !11
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @nx to i64), i64 1, i8* getelementptr inbounds ([3 x i8]* @.str12, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str13, i32 0, i32 0)), !dbg !11
  %3 = zext i32 %1 to i64, !dbg !11
  call void @trace_logger_log_int(i64 1, i64 32, i64 %3, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str14, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str15, i32 0, i32 0)), !dbg !11
  store i32 %1, i32* @nx, align 4, !dbg !11, !tbaa !12
  call void @trace_logger_log0(i64 44, i8* getelementptr inbounds ([7 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str18, i32 0, i32 0), i64 27, i1 false, i1 true), !dbg !16
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint (i32* @ny0 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str19, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str20, i32 0, i32 0)), !dbg !16
  %4 = load i32* @ny0, align 4, !dbg !16, !tbaa !12
  %5 = zext i32 %4 to i64, !dbg !16
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %5, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str21, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str22, i32 0, i32 0)), !dbg !16
  call void @trace_logger_log0(i64 44, i8* getelementptr inbounds ([7 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str24, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str25, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !16
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @ny to i64), i64 1, i8* getelementptr inbounds ([3 x i8]* @.str26, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str27, i32 0, i32 0)), !dbg !16
  %6 = zext i32 %4 to i64, !dbg !16
  call void @trace_logger_log_int(i64 1, i64 32, i64 %6, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str28, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str29, i32 0, i32 0)), !dbg !16
  store i32 %4, i32* @ny, align 4, !dbg !16, !tbaa !12
  call void @trace_logger_log0(i64 45, i8* getelementptr inbounds ([7 x i8]* @.str30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str31, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str32, i32 0, i32 0), i64 27, i1 false, i1 true), !dbg !17
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint (i32* @nz0 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str33, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str34, i32 0, i32 0)), !dbg !17
  %7 = load i32* @nz0, align 4, !dbg !17, !tbaa !12
  %8 = zext i32 %7 to i64, !dbg !17
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %8, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str35, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str36, i32 0, i32 0)), !dbg !17
  call void @trace_logger_log0(i64 45, i8* getelementptr inbounds ([7 x i8]* @.str37, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str38, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str39, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !17
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @nz to i64), i64 1, i8* getelementptr inbounds ([3 x i8]* @.str40, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str41, i32 0, i32 0)), !dbg !17
  %9 = zext i32 %7 to i64, !dbg !17
  call void @trace_logger_log_int(i64 1, i64 32, i64 %9, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str42, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str43, i32 0, i32 0)), !dbg !17
  store i32 %7, i32* @nz, align 4, !dbg !17, !tbaa !12
  call void @trace_logger_log0(i64 50, i8* getelementptr inbounds ([7 x i8]* @.str44, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str46, i32 0, i32 0), i64 46, i1 false, i1 true), !dbg !18
  call void @trace_logger_log_int(i64 2, i64 32, i64 4, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str47, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str48, i32 0, i32 0)), !dbg !18
  %10 = zext i32 %1 to i64, !dbg !18
  call void @trace_logger_log_int(i64 1, i64 32, i64 %10, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str50, i32 0, i32 0)), !dbg !18
  %11 = icmp slt i32 %1, 4, !dbg !18
  %12 = zext i1 %11 to i64, !dbg !18
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %12, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str51, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str52, i32 0, i32 0)), !dbg !18
  call void @trace_logger_log0(i64 50, i8* getelementptr inbounds ([7 x i8]* @.str53, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str54, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str55, i32 0, i32 0), i64 46, i1 false, i1 true), !dbg !18
  call void @trace_logger_log_int(i64 2, i64 32, i64 4, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str56, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str57, i32 0, i32 0)), !dbg !18
  %13 = zext i32 %4 to i64, !dbg !18
  call void @trace_logger_log_int(i64 1, i64 32, i64 %13, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str58, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str59, i32 0, i32 0)), !dbg !18
  %14 = icmp slt i32 %4, 4, !dbg !18
  %15 = zext i1 %14 to i64, !dbg !18
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %15, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str60, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str61, i32 0, i32 0)), !dbg !18
  call void @trace_logger_log0(i64 50, i8* getelementptr inbounds ([7 x i8]* @.str62, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str63, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str64, i32 0, i32 0), i64 24, i1 false, i1 true), !dbg !18
  %16 = zext i1 %14 to i64, !dbg !18
  call void @trace_logger_log_int(i64 2, i64 1, i64 %16, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str65, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str66, i32 0, i32 0)), !dbg !18
  %17 = zext i1 %11 to i64, !dbg !18
  call void @trace_logger_log_int(i64 1, i64 1, i64 %17, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str67, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str68, i32 0, i32 0)), !dbg !18
  %or.cond = or i1 %11, %14, !dbg !18
  %18 = zext i1 %or.cond to i64, !dbg !18
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %18, i64 1, i8* getelementptr inbounds ([8 x i8]* @.str69, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str70, i32 0, i32 0)), !dbg !18
  call void @trace_logger_log0(i64 50, i8* getelementptr inbounds ([7 x i8]* @.str71, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str72, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str73, i32 0, i32 0), i64 46, i1 false, i1 true), !dbg !18
  call void @trace_logger_log_int(i64 2, i64 32, i64 4, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str74, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str75, i32 0, i32 0)), !dbg !18
  %19 = zext i32 %7 to i64, !dbg !18
  call void @trace_logger_log_int(i64 1, i64 32, i64 %19, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str76, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str77, i32 0, i32 0)), !dbg !18
  %20 = icmp slt i32 %7, 4, !dbg !18
  %21 = zext i1 %20 to i64, !dbg !18
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %21, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str78, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str79, i32 0, i32 0)), !dbg !18
  call void @trace_logger_log0(i64 50, i8* getelementptr inbounds ([7 x i8]* @.str80, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str81, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str82, i32 0, i32 0), i64 24, i1 false, i1 true), !dbg !18
  %22 = zext i1 %20 to i64, !dbg !18
  call void @trace_logger_log_int(i64 2, i64 1, i64 %22, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str83, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str84, i32 0, i32 0)), !dbg !18
  %23 = zext i1 %or.cond to i64, !dbg !18
  call void @trace_logger_log_int(i64 1, i64 1, i64 %23, i64 1, i8* getelementptr inbounds ([8 x i8]* @.str85, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str86, i32 0, i32 0)), !dbg !18
  %or.cond3 = or i1 %or.cond, %20, !dbg !18
  %24 = zext i1 %or.cond3 to i64, !dbg !18
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %24, i64 1, i8* getelementptr inbounds ([9 x i8]* @.str87, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str88, i32 0, i32 0)), !dbg !18
  call void @trace_logger_log0(i64 50, i8* getelementptr inbounds ([7 x i8]* @.str89, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str90, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str91, i32 0, i32 0), i64 2, i1 false, i1 true), !dbg !18
  call void @trace_logger_log_int(i64 3, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str92, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str93, i32 0, i32 0)), !dbg !18
  call void @trace_logger_log_int(i64 2, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str94, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str95, i32 0, i32 0)), !dbg !18
  %25 = zext i1 %or.cond3 to i64, !dbg !18
  call void @trace_logger_log_int(i64 1, i64 1, i64 %25, i64 1, i8* getelementptr inbounds ([9 x i8]* @.str96, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str97, i32 0, i32 0)), !dbg !18
  br i1 %or.cond3, label %26, label %29, !dbg !18

; <label>:26                                      ; preds = %0
  call void @trace_logger_log0(i64 51, i8* getelementptr inbounds ([7 x i8]* @.str98, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str99, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str100, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !20
  call void @trace_logger_log_int(i64 5, i64 64, i64 ptrtoint (i32 (i8*, ...)* @printf to i64), i64 1, i8* getelementptr inbounds ([7 x i8]* @.str101, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str102, i32 0, i32 0)), !dbg !20
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint ([177 x i8]* @.str to i64), i64 0, i8* getelementptr inbounds ([1 x i8]* @.str103, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str104, i32 0, i32 0)), !dbg !20
  call void @trace_logger_log_int(i64 24601, i64 64, i64 ptrtoint ([177 x i8]* @.str to i64), i64 1, i8* getelementptr inbounds ([1 x i8]* @.str105, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str106, i32 0, i32 0)), !dbg !20
  %27 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([177 x i8]* @.str, i64 0, i64 0), i32 %1, i32 %4, i32 %7) #3, !dbg !20
  %28 = zext i32 %27 to i64, !dbg !22
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %28, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str107, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str108, i32 0, i32 0)), !dbg !22
  call void @trace_logger_log0(i64 55, i8* getelementptr inbounds ([7 x i8]* @.str109, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str110, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str111, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !22
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (void (i32)* @exit to i64), i64 1, i8* getelementptr inbounds ([5 x i8]* @.str112, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str113, i32 0, i32 0)), !dbg !22
  call void @trace_logger_log_int(i64 1, i64 32, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str114, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str115, i32 0, i32 0)), !dbg !22
  call void @trace_logger_log_int(i64 24601, i64 32, i64 1, i64 1, i8* getelementptr inbounds ([1 x i8]* @.str116, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str117, i32 0, i32 0)), !dbg !22
  tail call void @exit(i32 1) #4, !dbg !22
  call void @trace_logger_log0(i64 55, i8* getelementptr inbounds ([7 x i8]* @.str118, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str119, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str120, i32 0, i32 0), i64 7, i1 false, i1 true), !dbg !22
  unreachable, !dbg !22

; <label>:29                                      ; preds = %0
  call void @trace_logger_log0(i64 58, i8* getelementptr inbounds ([7 x i8]* @.str121, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str122, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str123, i32 0, i32 0), i64 46, i1 false, i1 true), !dbg !23
  call void @trace_logger_log_int(i64 2, i64 32, i64 12, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str124, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str125, i32 0, i32 0)), !dbg !23
  %30 = zext i32 %1 to i64, !dbg !23
  call void @trace_logger_log_int(i64 1, i64 32, i64 %30, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str126, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str127, i32 0, i32 0)), !dbg !23
  %31 = icmp sgt i32 %1, 12, !dbg !23
  %32 = zext i1 %31 to i64, !dbg !23
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %32, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str128, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str129, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log0(i64 58, i8* getelementptr inbounds ([7 x i8]* @.str130, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str131, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str132, i32 0, i32 0), i64 46, i1 false, i1 true), !dbg !23
  call void @trace_logger_log_int(i64 2, i64 32, i64 12, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str133, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str134, i32 0, i32 0)), !dbg !23
  %33 = zext i32 %4 to i64, !dbg !23
  call void @trace_logger_log_int(i64 1, i64 32, i64 %33, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str135, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str136, i32 0, i32 0)), !dbg !23
  %34 = icmp sgt i32 %4, 12, !dbg !23
  %35 = zext i1 %34 to i64, !dbg !23
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %35, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str137, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str138, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log0(i64 58, i8* getelementptr inbounds ([7 x i8]* @.str139, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str140, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str141, i32 0, i32 0), i64 24, i1 false, i1 true), !dbg !23
  %36 = zext i1 %34 to i64, !dbg !23
  call void @trace_logger_log_int(i64 2, i64 1, i64 %36, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str142, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str143, i32 0, i32 0)), !dbg !23
  %37 = zext i1 %31 to i64, !dbg !23
  call void @trace_logger_log_int(i64 1, i64 1, i64 %37, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str144, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str145, i32 0, i32 0)), !dbg !23
  %or.cond5 = or i1 %31, %34, !dbg !23
  %38 = zext i1 %or.cond5 to i64, !dbg !23
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %38, i64 1, i8* getelementptr inbounds ([9 x i8]* @.str146, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str147, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log0(i64 58, i8* getelementptr inbounds ([7 x i8]* @.str148, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str149, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str150, i32 0, i32 0), i64 46, i1 false, i1 true), !dbg !23
  call void @trace_logger_log_int(i64 2, i64 32, i64 12, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str151, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str152, i32 0, i32 0)), !dbg !23
  %39 = zext i32 %7 to i64, !dbg !23
  call void @trace_logger_log_int(i64 1, i64 32, i64 %39, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str153, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str154, i32 0, i32 0)), !dbg !23
  %40 = icmp sgt i32 %7, 12, !dbg !23
  %41 = zext i1 %40 to i64, !dbg !23
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %41, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str155, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str156, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log0(i64 58, i8* getelementptr inbounds ([7 x i8]* @.str157, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str159, i32 0, i32 0), i64 24, i1 false, i1 true), !dbg !23
  %42 = zext i1 %40 to i64, !dbg !23
  call void @trace_logger_log_int(i64 2, i64 1, i64 %42, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str160, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str161, i32 0, i32 0)), !dbg !23
  %43 = zext i1 %or.cond5 to i64, !dbg !23
  call void @trace_logger_log_int(i64 1, i64 1, i64 %43, i64 1, i8* getelementptr inbounds ([9 x i8]* @.str162, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str163, i32 0, i32 0)), !dbg !23
  %or.cond7 = or i1 %or.cond5, %40, !dbg !23
  %44 = zext i1 %or.cond7 to i64, !dbg !23
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %44, i64 1, i8* getelementptr inbounds ([9 x i8]* @.str164, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str165, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log0(i64 58, i8* getelementptr inbounds ([7 x i8]* @.str166, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str167, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str168, i32 0, i32 0), i64 2, i1 false, i1 true), !dbg !23
  call void @trace_logger_log_int(i64 3, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str169, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str170, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log_int(i64 2, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str172, i32 0, i32 0)), !dbg !23
  %45 = zext i1 %or.cond7 to i64, !dbg !23
  call void @trace_logger_log_int(i64 1, i64 1, i64 %45, i64 1, i8* getelementptr inbounds ([9 x i8]* @.str173, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str174, i32 0, i32 0)), !dbg !23
  br i1 %or.cond7, label %46, label %49, !dbg !23

; <label>:46                                      ; preds = %29
  call void @trace_logger_log0(i64 59, i8* getelementptr inbounds ([7 x i8]* @.str175, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str177, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !25
  call void @trace_logger_log_int(i64 5, i64 64, i64 ptrtoint (i32 (i8*, ...)* @printf to i64), i64 1, i8* getelementptr inbounds ([7 x i8]* @.str178, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str179, i32 0, i32 0)), !dbg !25
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint ([217 x i8]* @.str1 to i64), i64 0, i8* getelementptr inbounds ([1 x i8]* @.str180, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str181, i32 0, i32 0)), !dbg !25
  call void @trace_logger_log_int(i64 24601, i64 64, i64 ptrtoint ([217 x i8]* @.str1 to i64), i64 1, i8* getelementptr inbounds ([1 x i8]* @.str182, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str183, i32 0, i32 0)), !dbg !25
  %47 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([217 x i8]* @.str1, i64 0, i64 0), i32 %1, i32 %4, i32 %7) #3, !dbg !25
  %48 = zext i32 %47 to i64, !dbg !27
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %48, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str184, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str185, i32 0, i32 0)), !dbg !27
  call void @trace_logger_log0(i64 64, i8* getelementptr inbounds ([7 x i8]* @.str186, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str188, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !27
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (void (i32)* @exit to i64), i64 1, i8* getelementptr inbounds ([5 x i8]* @.str189, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str190, i32 0, i32 0)), !dbg !27
  call void @trace_logger_log_int(i64 1, i64 32, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str191, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str192, i32 0, i32 0)), !dbg !27
  call void @trace_logger_log_int(i64 24601, i64 32, i64 1, i64 1, i8* getelementptr inbounds ([1 x i8]* @.str193, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str194, i32 0, i32 0)), !dbg !27
  tail call void @exit(i32 1) #4, !dbg !27
  call void @trace_logger_log0(i64 64, i8* getelementptr inbounds ([7 x i8]* @.str195, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str197, i32 0, i32 0), i64 7, i1 false, i1 true), !dbg !27
  unreachable, !dbg !27

; <label>:49                                      ; preds = %29
  call void @trace_logger_log0(i64 70, i8* getelementptr inbounds ([7 x i8]* @.str198, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str199, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str200, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !28
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @ist to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str201, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str202, i32 0, i32 0)), !dbg !28
  call void @trace_logger_log_int(i64 1, i64 32, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str203, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str204, i32 0, i32 0)), !dbg !28
  store i32 1, i32* @ist, align 4, !dbg !28, !tbaa !12
  call void @trace_logger_log0(i64 71, i8* getelementptr inbounds ([7 x i8]* @.str205, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str206, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str207, i32 0, i32 0), i64 27, i1 false, i1 true), !dbg !29
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint (i32* @nx to i64), i64 1, i8* getelementptr inbounds ([3 x i8]* @.str208, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str209, i32 0, i32 0)), !dbg !29
  %50 = load i32* @nx, align 4, !dbg !29, !tbaa !12
  %51 = zext i32 %50 to i64, !dbg !29
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %51, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str210, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str211, i32 0, i32 0)), !dbg !29
  call void @trace_logger_log0(i64 71, i8* getelementptr inbounds ([7 x i8]* @.str212, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str213, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str214, i32 0, i32 0), i64 8, i1 false, i1 true), !dbg !29
  call void @trace_logger_log_int(i64 2, i64 32, i64 4294967295, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str215, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str216, i32 0, i32 0)), !dbg !29
  %52 = zext i32 %50 to i64, !dbg !29
  call void @trace_logger_log_int(i64 1, i64 32, i64 %52, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str217, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str218, i32 0, i32 0)), !dbg !29
  %53 = add nsw i32 %50, -1, !dbg !29
  %54 = zext i32 %53 to i64, !dbg !29
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %54, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str219, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str220, i32 0, i32 0)), !dbg !29
  call void @trace_logger_log0(i64 71, i8* getelementptr inbounds ([7 x i8]* @.str221, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str222, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str223, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !29
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @iend to i64), i64 1, i8* getelementptr inbounds ([5 x i8]* @.str224, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str225, i32 0, i32 0)), !dbg !29
  %55 = zext i32 %53 to i64, !dbg !29
  call void @trace_logger_log_int(i64 1, i64 32, i64 %55, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str226, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str227, i32 0, i32 0)), !dbg !29
  store i32 %53, i32* @iend, align 4, !dbg !29, !tbaa !12
  call void @trace_logger_log0(i64 73, i8* getelementptr inbounds ([7 x i8]* @.str228, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str229, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str230, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !30
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @jst to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str231, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str232, i32 0, i32 0)), !dbg !30
  call void @trace_logger_log_int(i64 1, i64 32, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str233, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str234, i32 0, i32 0)), !dbg !30
  store i32 1, i32* @jst, align 4, !dbg !30, !tbaa !12
  call void @trace_logger_log0(i64 74, i8* getelementptr inbounds ([7 x i8]* @.str235, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str236, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str237, i32 0, i32 0), i64 27, i1 false, i1 true), !dbg !31
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint (i32* @ny to i64), i64 1, i8* getelementptr inbounds ([3 x i8]* @.str238, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str239, i32 0, i32 0)), !dbg !31
  %56 = load i32* @ny, align 4, !dbg !31, !tbaa !12
  %57 = zext i32 %56 to i64, !dbg !31
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %57, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str240, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str241, i32 0, i32 0)), !dbg !31
  call void @trace_logger_log0(i64 74, i8* getelementptr inbounds ([7 x i8]* @.str242, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str243, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str244, i32 0, i32 0), i64 8, i1 false, i1 true), !dbg !31
  call void @trace_logger_log_int(i64 2, i64 32, i64 4294967295, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str245, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str246, i32 0, i32 0)), !dbg !31
  %58 = zext i32 %56 to i64, !dbg !31
  call void @trace_logger_log_int(i64 1, i64 32, i64 %58, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str247, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str248, i32 0, i32 0)), !dbg !31
  %59 = add nsw i32 %56, -1, !dbg !31
  %60 = zext i32 %59 to i64, !dbg !31
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %60, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str249, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str250, i32 0, i32 0)), !dbg !31
  call void @trace_logger_log0(i64 74, i8* getelementptr inbounds ([7 x i8]* @.str251, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str252, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str253, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !31
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @jend to i64), i64 1, i8* getelementptr inbounds ([5 x i8]* @.str254, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str255, i32 0, i32 0)), !dbg !31
  %61 = zext i32 %59 to i64, !dbg !31
  call void @trace_logger_log_int(i64 1, i64 32, i64 %61, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str256, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str257, i32 0, i32 0)), !dbg !31
  store i32 %59, i32* @jend, align 4, !dbg !31, !tbaa !12
  call void @trace_logger_log0(i64 76, i8* getelementptr inbounds ([7 x i8]* @.str258, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str260, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !32
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @ii1 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str261, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str262, i32 0, i32 0)), !dbg !32
  call void @trace_logger_log_int(i64 1, i64 32, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str263, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str264, i32 0, i32 0)), !dbg !32
  store i32 1, i32* @ii1, align 4, !dbg !32, !tbaa !12
  call void @trace_logger_log0(i64 77, i8* getelementptr inbounds ([7 x i8]* @.str265, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str266, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str267, i32 0, i32 0), i64 27, i1 false, i1 true), !dbg !33
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint (i32* @nx0 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str268, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str269, i32 0, i32 0)), !dbg !33
  %62 = load i32* @nx0, align 4, !dbg !33, !tbaa !12
  %63 = zext i32 %62 to i64, !dbg !33
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %63, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str270, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str271, i32 0, i32 0)), !dbg !33
  call void @trace_logger_log0(i64 77, i8* getelementptr inbounds ([7 x i8]* @.str272, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str273, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str274, i32 0, i32 0), i64 8, i1 false, i1 true), !dbg !33
  call void @trace_logger_log_int(i64 2, i64 32, i64 4294967295, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str275, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str276, i32 0, i32 0)), !dbg !33
  %64 = zext i32 %62 to i64, !dbg !33
  call void @trace_logger_log_int(i64 1, i64 32, i64 %64, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str277, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str278, i32 0, i32 0)), !dbg !33
  %65 = add nsw i32 %62, -1, !dbg !33
  %66 = zext i32 %65 to i64, !dbg !33
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %66, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str279, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str280, i32 0, i32 0)), !dbg !33
  call void @trace_logger_log0(i64 77, i8* getelementptr inbounds ([7 x i8]* @.str281, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str282, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str283, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !33
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @ii2 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str284, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str285, i32 0, i32 0)), !dbg !33
  %67 = zext i32 %65 to i64, !dbg !33
  call void @trace_logger_log_int(i64 1, i64 32, i64 %67, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str286, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str287, i32 0, i32 0)), !dbg !33
  store i32 %65, i32* @ii2, align 4, !dbg !33, !tbaa !12
  call void @trace_logger_log0(i64 78, i8* getelementptr inbounds ([7 x i8]* @.str288, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str290, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !34
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @ji1 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str291, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str292, i32 0, i32 0)), !dbg !34
  call void @trace_logger_log_int(i64 1, i64 32, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str293, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str294, i32 0, i32 0)), !dbg !34
  store i32 1, i32* @ji1, align 4, !dbg !34, !tbaa !12
  call void @trace_logger_log0(i64 79, i8* getelementptr inbounds ([7 x i8]* @.str295, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str296, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str297, i32 0, i32 0), i64 27, i1 false, i1 true), !dbg !35
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint (i32* @ny0 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str298, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str299, i32 0, i32 0)), !dbg !35
  %68 = load i32* @ny0, align 4, !dbg !35, !tbaa !12
  %69 = zext i32 %68 to i64, !dbg !35
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %69, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str300, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str301, i32 0, i32 0)), !dbg !35
  call void @trace_logger_log0(i64 79, i8* getelementptr inbounds ([7 x i8]* @.str302, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str303, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str304, i32 0, i32 0), i64 8, i1 false, i1 true), !dbg !35
  call void @trace_logger_log_int(i64 2, i64 32, i64 4294967294, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str305, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str306, i32 0, i32 0)), !dbg !35
  %70 = zext i32 %68 to i64, !dbg !35
  call void @trace_logger_log_int(i64 1, i64 32, i64 %70, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str307, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str308, i32 0, i32 0)), !dbg !35
  %71 = add nsw i32 %68, -2, !dbg !35
  %72 = zext i32 %71 to i64, !dbg !35
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %72, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str309, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str310, i32 0, i32 0)), !dbg !35
  call void @trace_logger_log0(i64 79, i8* getelementptr inbounds ([7 x i8]* @.str311, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str312, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str313, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !35
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @ji2 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str314, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str315, i32 0, i32 0)), !dbg !35
  %73 = zext i32 %71 to i64, !dbg !35
  call void @trace_logger_log_int(i64 1, i64 32, i64 %73, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str316, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str317, i32 0, i32 0)), !dbg !35
  store i32 %71, i32* @ji2, align 4, !dbg !35, !tbaa !12
  call void @trace_logger_log0(i64 80, i8* getelementptr inbounds ([7 x i8]* @.str318, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str319, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str320, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !36
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @ki1 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str321, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str322, i32 0, i32 0)), !dbg !36
  call void @trace_logger_log_int(i64 1, i64 32, i64 2, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str323, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str324, i32 0, i32 0)), !dbg !36
  store i32 2, i32* @ki1, align 4, !dbg !36, !tbaa !12
  call void @trace_logger_log0(i64 81, i8* getelementptr inbounds ([7 x i8]* @.str325, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str326, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str327, i32 0, i32 0), i64 27, i1 false, i1 true), !dbg !37
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint (i32* @nz0 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str328, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str329, i32 0, i32 0)), !dbg !37
  %74 = load i32* @nz0, align 4, !dbg !37, !tbaa !12
  %75 = zext i32 %74 to i64, !dbg !37
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %75, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str330, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str331, i32 0, i32 0)), !dbg !37
  call void @trace_logger_log0(i64 81, i8* getelementptr inbounds ([7 x i8]* @.str332, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str333, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str334, i32 0, i32 0), i64 8, i1 false, i1 true), !dbg !37
  call void @trace_logger_log_int(i64 2, i64 32, i64 4294967295, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str335, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str336, i32 0, i32 0)), !dbg !37
  %76 = zext i32 %74 to i64, !dbg !37
  call void @trace_logger_log_int(i64 1, i64 32, i64 %76, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str337, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str338, i32 0, i32 0)), !dbg !37
  %77 = add nsw i32 %74, -1, !dbg !37
  %78 = zext i32 %77 to i64, !dbg !37
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %78, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str339, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str340, i32 0, i32 0)), !dbg !37
  call void @trace_logger_log0(i64 81, i8* getelementptr inbounds ([7 x i8]* @.str341, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str342, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str343, i32 0, i32 0), i64 28, i1 false, i1 true), !dbg !37
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32* @ki2 to i64), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str344, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str345, i32 0, i32 0)), !dbg !37
  %79 = zext i32 %77 to i64, !dbg !37
  call void @trace_logger_log_int(i64 1, i64 32, i64 %79, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str346, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str347, i32 0, i32 0)), !dbg !37
  store i32 %77, i32* @ki2, align 4, !dbg !37, !tbaa !12
  call void @trace_logger_log0(i64 82, i8* getelementptr inbounds ([7 x i8]* @.str348, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str349, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str350, i32 0, i32 0), i64 1, i1 false, i1 true), !dbg !38
  ret void, !dbg !38
}

declare i32 @printf(i8*, ...) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #2

declare void @trace_logger_log0(i64, i8*, i8*, i8*, i64, i1, i1)

declare void @trace_logger_log_int(i64, i64, i64, i64, i8*, i64, i8*)

declare void @trace_logger_log_double(i64, i64, double, i64, i8*, i64, i8*)

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind }
attributes #4 = { nobuiltin noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!8, !9}
!llvm.ident = !{!10}

!0 = metadata !{i32 786449, metadata !1, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 true, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/domain.c] [DW_LANG_C99]
!1 = metadata !{metadata !"domain.c", metadata !"/home/azguolu/ARAT-0.1/llvm-tracer/example/lu"}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4}
!4 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"domain", metadata !"domain", metadata !"", i32 38, metadata !6, i1 false, i1 true, i32 0, i32 0, null, i32 0, i1 true, void ()* @domain, null, null, metadata !2, i32 39} ; [ DW_TAG_subprogram ] [line 38] [def] [scope 39] [domain]
!5 = metadata !{i32 786473, metadata !1}          ; [ DW_TAG_file_type ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/domain.c]
!6 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !7, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!7 = metadata !{null}
!8 = metadata !{i32 2, metadata !"Dwarf Version", i32 4}
!9 = metadata !{i32 1, metadata !"Debug Info Version", i32 1}
!10 = metadata !{metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"}
!11 = metadata !{i32 43, i32 0, metadata !4, null}
!12 = metadata !{metadata !13, metadata !13, i64 0}
!13 = metadata !{metadata !"int", metadata !14, i64 0}
!14 = metadata !{metadata !"omnipotent char", metadata !15, i64 0}
!15 = metadata !{metadata !"Simple C/C++ TBAA"}
!16 = metadata !{i32 44, i32 0, metadata !4, null}
!17 = metadata !{i32 45, i32 0, metadata !4, null}
!18 = metadata !{i32 50, i32 0, metadata !19, null}
!19 = metadata !{i32 786443, metadata !1, metadata !4, i32 50, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/domain.c]
!20 = metadata !{i32 51, i32 0, metadata !21, null}
!21 = metadata !{i32 786443, metadata !1, metadata !19, i32 50, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/domain.c]
!22 = metadata !{i32 55, i32 0, metadata !21, null}
!23 = metadata !{i32 58, i32 0, metadata !24, null} ; [ DW_TAG_imported_module ]
!24 = metadata !{i32 786443, metadata !1, metadata !4, i32 58, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/domain.c]
!25 = metadata !{i32 59, i32 0, metadata !26, null}
!26 = metadata !{i32 786443, metadata !1, metadata !24, i32 58, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/domain.c]
!27 = metadata !{i32 64, i32 0, metadata !26, null}
!28 = metadata !{i32 70, i32 0, metadata !4, null}
!29 = metadata !{i32 71, i32 0, metadata !4, null}
!30 = metadata !{i32 73, i32 0, metadata !4, null}
!31 = metadata !{i32 74, i32 0, metadata !4, null}
!32 = metadata !{i32 76, i32 0, metadata !4, null}
!33 = metadata !{i32 77, i32 0, metadata !4, null}
!34 = metadata !{i32 78, i32 0, metadata !4, null}
!35 = metadata !{i32 79, i32 0, metadata !4, null}
!36 = metadata !{i32 80, i32 0, metadata !4, null}
!37 = metadata !{i32 81, i32 0, metadata !4, null}
!38 = metadata !{i32 82, i32 0, metadata !4, null}
