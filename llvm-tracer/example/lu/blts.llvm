; ModuleID = 'blts.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define void @blts(i32 %ldmx, i32 %ldmy, i32 %ldmz, i32 %nx, i32 %ny, i32 %nz, i32 %k, double %omega, [5 x double]* %v, [5 x [5 x double]]* nocapture readonly %ldz, [5 x [5 x double]]* nocapture readonly %ldy, [5 x [5 x double]]* nocapture readonly %ldx, [5 x [5 x double]]* nocapture readonly %d, i32 %ist, i32 %iend, i32 %jst, i32 %jend, i32 %nx0, i32 %ny0) #0 {
  %tmat = alloca [5 x [5 x double]], align 16
  %tv = alloca [5 x double], align 16
  call void @llvm.dbg.value(metadata !{i32 %ldmx}, i64 0, metadata !19), !dbg !57
  call void @llvm.dbg.value(metadata !{i32 %ldmy}, i64 0, metadata !20), !dbg !57
  call void @llvm.dbg.value(metadata !{i32 %ldmz}, i64 0, metadata !21), !dbg !57
  call void @llvm.dbg.value(metadata !{i32 %nx}, i64 0, metadata !22), !dbg !57
  call void @llvm.dbg.value(metadata !{i32 %ny}, i64 0, metadata !23), !dbg !57
  call void @llvm.dbg.value(metadata !{i32 %nz}, i64 0, metadata !24), !dbg !57
  call void @llvm.dbg.value(metadata !{i32 %k}, i64 0, metadata !25), !dbg !57
  call void @llvm.dbg.value(metadata !{double %omega}, i64 0, metadata !26), !dbg !58
  call void @llvm.dbg.value(metadata !{[5 x double]* %v}, i64 0, metadata !27), !dbg !59
  call void @llvm.dbg.value(metadata !{[5 x [5 x double]]* %ldz}, i64 0, metadata !28), !dbg !60
  call void @llvm.dbg.value(metadata !{[5 x [5 x double]]* %ldy}, i64 0, metadata !29), !dbg !61
  call void @llvm.dbg.value(metadata !{[5 x [5 x double]]* %ldx}, i64 0, metadata !30), !dbg !62
  call void @llvm.dbg.value(metadata !{[5 x [5 x double]]* %d}, i64 0, metadata !31), !dbg !63
  call void @llvm.dbg.value(metadata !{i32 %ist}, i64 0, metadata !32), !dbg !64
  call void @llvm.dbg.value(metadata !{i32 %iend}, i64 0, metadata !33), !dbg !64
  call void @llvm.dbg.value(metadata !{i32 %jst}, i64 0, metadata !34), !dbg !64
  call void @llvm.dbg.value(metadata !{i32 %jend}, i64 0, metadata !35), !dbg !64
  call void @llvm.dbg.value(metadata !{i32 %nx0}, i64 0, metadata !36), !dbg !64
  call void @llvm.dbg.value(metadata !{i32 %ny0}, i64 0, metadata !37), !dbg !64
  %1 = sdiv i32 %ldmy, 2
  %2 = shl nsw i32 %1, 1
  %3 = or i32 %2, 1
  %4 = zext i32 %3 to i64
  %5 = sdiv i32 %ldmx, 2
  %6 = shl nsw i32 %5, 1
  %7 = or i32 %6, 1
  %8 = zext i32 %7 to i64
  %9 = bitcast [5 x [5 x double]]* %tmat to i8*, !dbg !65
  call void @llvm.lifetime.start(i64 200, i8* %9) #2, !dbg !65
  call void @llvm.dbg.declare(metadata !{[5 x [5 x double]]* %tmat}, metadata !43), !dbg !65
  %10 = bitcast [5 x double]* %tv to i8*, !dbg !65
  call void @llvm.lifetime.start(i64 40, i8* %10) #2, !dbg !65
  call void @llvm.dbg.declare(metadata !{[5 x double]* %tv}, metadata !46), !dbg !65
  %11 = sext i32 %k to i64, !dbg !66
  %12 = mul nuw i64 %8, %4, !dbg !66
  %13 = mul nsw i64 %12, %11, !dbg !66
  %14 = add nsw i32 %k, -1, !dbg !67
  %15 = sext i32 %14 to i64, !dbg !67
  %16 = mul nsw i64 %12, %15, !dbg !67
  call void @llvm.dbg.value(metadata !{i32 %jst}, i64 0, metadata !39), !dbg !68
  %17 = icmp slt i32 %jst, %jend, !dbg !68
  br i1 %17, label %.preheader24.lr.ph, label %.preheader19, !dbg !68

.preheader24.lr.ph:                               ; preds = %0
  %18 = icmp slt i32 %ist, %iend, !dbg !70
  %19 = sext i32 %ist to i64
  %20 = sext i32 %jst to i64
  br label %.preheader24, !dbg !68

.preheader24:                                     ; preds = %.preheader24.lr.ph, %._crit_edge26
  %indvars.iv40 = phi i64 [ %20, %.preheader24.lr.ph ], [ %indvars.iv.next41, %._crit_edge26 ]
  br i1 %18, label %.preheader22.lr.ph, label %._crit_edge26, !dbg !70

.preheader22.lr.ph:                               ; preds = %.preheader24
  %21 = mul nsw i64 %indvars.iv40, %8, !dbg !73
  %.sum10 = add i64 %21, %13, !dbg !73
  %.sum13 = add i64 %21, %16, !dbg !73
  br label %.preheader22, !dbg !70

.preheader19:                                     ; preds = %._crit_edge26, %0
  %22 = icmp slt i32 %jst, %jend, !dbg !77
  br i1 %22, label %.preheader17.lr.ph, label %._crit_edge21, !dbg !77

.preheader17.lr.ph:                               ; preds = %.preheader19
  %23 = icmp slt i32 %ist, %iend, !dbg !79
  %24 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 0, i64 0, !dbg !82
  %25 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 1, i64 0, !dbg !84
  %26 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 1, i64 1, !dbg !85
  %27 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 0, i64 1, !dbg !85
  %28 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 1, i64 2, !dbg !86
  %29 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 0, i64 2, !dbg !86
  %30 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 1, i64 3, !dbg !87
  %31 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 0, i64 3, !dbg !87
  %32 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 1, i64 4, !dbg !88
  %33 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 0, i64 4, !dbg !88
  %34 = getelementptr inbounds [5 x double]* %tv, i64 0, i64 1, !dbg !89
  %35 = getelementptr inbounds [5 x double]* %tv, i64 0, i64 0, !dbg !89
  %36 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 2, i64 0, !dbg !90
  %37 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 2, i64 1, !dbg !91
  %38 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 2, i64 2, !dbg !92
  %39 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 2, i64 3, !dbg !93
  %40 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 2, i64 4, !dbg !94
  %41 = getelementptr inbounds [5 x double]* %tv, i64 0, i64 2, !dbg !95
  %42 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 3, i64 0, !dbg !96
  %43 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 3, i64 1, !dbg !97
  %44 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 3, i64 2, !dbg !98
  %45 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 3, i64 3, !dbg !99
  %46 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 3, i64 4, !dbg !100
  %47 = getelementptr inbounds [5 x double]* %tv, i64 0, i64 3, !dbg !101
  %48 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 4, i64 0, !dbg !102
  %49 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 4, i64 1, !dbg !103
  %50 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 4, i64 2, !dbg !104
  %51 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 4, i64 3, !dbg !105
  %52 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 4, i64 4, !dbg !106
  %53 = getelementptr inbounds [5 x double]* %tv, i64 0, i64 4, !dbg !107
  %54 = sext i32 %ist to i64
  %55 = sext i32 %jst to i64
  br label %.preheader17, !dbg !77

.preheader22:                                     ; preds = %.preheader22.lr.ph, %90
  %indvars.iv38 = phi i64 [ %19, %.preheader22.lr.ph ], [ %indvars.iv.next39, %90 ]
  %.sum11 = add i64 %.sum10, %indvars.iv38, !dbg !73
  %.sum12 = add i64 %indvars.iv38, %21, !dbg !73
  %.sum14 = add i64 %.sum13, %indvars.iv38, !dbg !73
  %56 = getelementptr inbounds [5 x double]* %v, i64 %.sum14, i64 0, !dbg !73
  %57 = getelementptr inbounds [5 x double]* %v, i64 %.sum14, i64 1, !dbg !73
  %58 = getelementptr inbounds [5 x double]* %v, i64 %.sum14, i64 2, !dbg !73
  %59 = getelementptr inbounds [5 x double]* %v, i64 %.sum14, i64 3, !dbg !73
  %60 = getelementptr inbounds [5 x double]* %v, i64 %.sum14, i64 4, !dbg !73
  br label %61, !dbg !108

; <label>:61                                      ; preds = %61, %.preheader22
  %indvars.iv35 = phi i64 [ 0, %.preheader22 ], [ %indvars.iv.next36, %61 ]
  %62 = getelementptr inbounds [5 x double]* %v, i64 %.sum11, i64 %indvars.iv35, !dbg !73
  %63 = load double* %62, align 8, !dbg !73, !tbaa !109
  %64 = getelementptr inbounds [5 x [5 x double]]* %ldz, i64 %.sum12, i64 0, i64 %indvars.iv35, !dbg !73
  %65 = load double* %64, align 8, !dbg !73, !tbaa !109
  %66 = load double* %56, align 8, !dbg !73, !tbaa !109
  %67 = fmul double %65, %66, !dbg !73
  %68 = getelementptr inbounds [5 x [5 x double]]* %ldz, i64 %.sum12, i64 1, i64 %indvars.iv35, !dbg !73
  %69 = load double* %68, align 8, !dbg !73, !tbaa !109
  %70 = load double* %57, align 8, !dbg !73, !tbaa !109
  %71 = fmul double %69, %70, !dbg !73
  %72 = fadd double %67, %71, !dbg !73
  %73 = getelementptr inbounds [5 x [5 x double]]* %ldz, i64 %.sum12, i64 2, i64 %indvars.iv35, !dbg !73
  %74 = load double* %73, align 8, !dbg !73, !tbaa !109
  %75 = load double* %58, align 8, !dbg !73, !tbaa !109
  %76 = fmul double %74, %75, !dbg !73
  %77 = fadd double %72, %76, !dbg !73
  %78 = getelementptr inbounds [5 x [5 x double]]* %ldz, i64 %.sum12, i64 3, i64 %indvars.iv35, !dbg !73
  %79 = load double* %78, align 8, !dbg !73, !tbaa !109
  %80 = load double* %59, align 8, !dbg !73, !tbaa !109
  %81 = fmul double %79, %80, !dbg !73
  %82 = fadd double %77, %81, !dbg !73
  %83 = getelementptr inbounds [5 x [5 x double]]* %ldz, i64 %.sum12, i64 4, i64 %indvars.iv35, !dbg !73
  %84 = load double* %83, align 8, !dbg !73, !tbaa !109
  %85 = load double* %60, align 8, !dbg !73, !tbaa !109
  %86 = fmul double %84, %85, !dbg !73
  %87 = fadd double %82, %86, !dbg !73
  %88 = fmul double %87, %omega, !dbg !73
  %89 = fsub double %63, %88, !dbg !73
  store double %89, double* %62, align 8, !dbg !73, !tbaa !109
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !108
  %exitcond37 = icmp eq i64 %indvars.iv.next36, 5, !dbg !108
  br i1 %exitcond37, label %90, label %61, !dbg !108

; <label>:90                                      ; preds = %61
  %indvars.iv.next39 = add nsw i64 %indvars.iv38, 1, !dbg !70
  %91 = trunc i64 %indvars.iv.next39 to i32, !dbg !70
  %92 = icmp slt i32 %91, %iend, !dbg !70
  br i1 %92, label %.preheader22, label %._crit_edge26, !dbg !70

._crit_edge26:                                    ; preds = %90, %.preheader24
  %indvars.iv.next41 = add nsw i64 %indvars.iv40, 1, !dbg !68
  %93 = trunc i64 %indvars.iv.next41 to i32, !dbg !68
  %94 = icmp slt i32 %93, %jend, !dbg !68
  br i1 %94, label %.preheader24, label %.preheader19, !dbg !68

.preheader17:                                     ; preds = %.preheader17.lr.ph, %._crit_edge
  %indvars.iv33 = phi i64 [ %55, %.preheader17.lr.ph ], [ %indvars.iv.next34, %._crit_edge ]
  br i1 %23, label %.preheader.lr.ph, label %._crit_edge, !dbg !79

.preheader.lr.ph:                                 ; preds = %.preheader17
  %95 = mul nsw i64 %indvars.iv33, %8, !dbg !113
  %.sum3 = add i64 %95, %13, !dbg !113
  %96 = add nsw i64 %indvars.iv33, -1, !dbg !113
  %97 = mul nsw i64 %96, %8, !dbg !113
  %.sum6 = add i64 %97, %13, !dbg !113
  %98 = mul nsw i64 %indvars.iv33, %8, !dbg !116
  %99 = mul nsw i64 %indvars.iv33, %8, !dbg !119
  %.sum = add i64 %99, %13, !dbg !119
  br label %.preheader, !dbg !79

.preheader:                                       ; preds = %.preheader.lr.ph, %182
  %indvars.iv31 = phi i64 [ %54, %.preheader.lr.ph ], [ %indvars.iv.next32, %182 ]
  %.sum4 = add i64 %indvars.iv31, %.sum3, !dbg !113
  %.sum5 = add i64 %indvars.iv31, %95, !dbg !113
  %.sum7 = add i64 %.sum6, %indvars.iv31, !dbg !113
  %100 = getelementptr inbounds [5 x double]* %v, i64 %.sum7, i64 0, !dbg !113
  %101 = load double* %100, align 8, !dbg !113, !tbaa !109
  %102 = add nsw i64 %indvars.iv31, -1, !dbg !113
  %.sum9 = add i64 %102, %.sum3, !dbg !113
  %103 = getelementptr inbounds [5 x double]* %v, i64 %.sum9, i64 0, !dbg !113
  %104 = load double* %103, align 8, !dbg !113, !tbaa !109
  %105 = getelementptr inbounds [5 x double]* %v, i64 %.sum7, i64 1, !dbg !113
  %106 = load double* %105, align 8, !dbg !113, !tbaa !109
  %107 = getelementptr inbounds [5 x double]* %v, i64 %.sum9, i64 1, !dbg !113
  %108 = load double* %107, align 8, !dbg !113, !tbaa !109
  %109 = getelementptr inbounds [5 x double]* %v, i64 %.sum7, i64 2, !dbg !113
  %110 = load double* %109, align 8, !dbg !113, !tbaa !109
  %111 = getelementptr inbounds [5 x double]* %v, i64 %.sum9, i64 2, !dbg !113
  %112 = load double* %111, align 8, !dbg !113, !tbaa !109
  %113 = getelementptr inbounds [5 x double]* %v, i64 %.sum7, i64 3, !dbg !113
  %114 = load double* %113, align 8, !dbg !113, !tbaa !109
  %115 = getelementptr inbounds [5 x double]* %v, i64 %.sum9, i64 3, !dbg !113
  %116 = load double* %115, align 8, !dbg !113, !tbaa !109
  %117 = getelementptr inbounds [5 x double]* %v, i64 %.sum7, i64 4, !dbg !113
  %118 = load double* %117, align 8, !dbg !113, !tbaa !109
  %119 = getelementptr inbounds [5 x double]* %v, i64 %.sum9, i64 4, !dbg !113
  %120 = load double* %119, align 8, !dbg !113, !tbaa !109
  br label %121, !dbg !120

; <label>:121                                     ; preds = %121, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %121 ]
  %122 = getelementptr inbounds [5 x double]* %v, i64 %.sum4, i64 %indvars.iv, !dbg !113
  %123 = load double* %122, align 8, !dbg !113, !tbaa !109
  %124 = getelementptr inbounds [5 x [5 x double]]* %ldy, i64 %.sum5, i64 0, i64 %indvars.iv, !dbg !113
  %125 = load double* %124, align 8, !dbg !113, !tbaa !109
  %126 = fmul double %125, %101, !dbg !113
  %127 = getelementptr inbounds [5 x [5 x double]]* %ldx, i64 %.sum5, i64 0, i64 %indvars.iv, !dbg !113
  %128 = load double* %127, align 8, !dbg !113, !tbaa !109
  %129 = fmul double %128, %104, !dbg !113
  %130 = fadd double %126, %129, !dbg !113
  %131 = getelementptr inbounds [5 x [5 x double]]* %ldy, i64 %.sum5, i64 1, i64 %indvars.iv, !dbg !113
  %132 = load double* %131, align 8, !dbg !113, !tbaa !109
  %133 = fmul double %132, %106, !dbg !113
  %134 = fadd double %130, %133, !dbg !113
  %135 = getelementptr inbounds [5 x [5 x double]]* %ldx, i64 %.sum5, i64 1, i64 %indvars.iv, !dbg !113
  %136 = load double* %135, align 8, !dbg !113, !tbaa !109
  %137 = fmul double %136, %108, !dbg !113
  %138 = fadd double %134, %137, !dbg !113
  %139 = getelementptr inbounds [5 x [5 x double]]* %ldy, i64 %.sum5, i64 2, i64 %indvars.iv, !dbg !113
  %140 = load double* %139, align 8, !dbg !113, !tbaa !109
  %141 = fmul double %140, %110, !dbg !113
  %142 = fadd double %138, %141, !dbg !113
  %143 = getelementptr inbounds [5 x [5 x double]]* %ldx, i64 %.sum5, i64 2, i64 %indvars.iv, !dbg !113
  %144 = load double* %143, align 8, !dbg !113, !tbaa !109
  %145 = fmul double %144, %112, !dbg !113
  %146 = fadd double %142, %145, !dbg !113
  %147 = getelementptr inbounds [5 x [5 x double]]* %ldy, i64 %.sum5, i64 3, i64 %indvars.iv, !dbg !113
  %148 = load double* %147, align 8, !dbg !113, !tbaa !109
  %149 = fmul double %148, %114, !dbg !113
  %150 = fadd double %146, %149, !dbg !113
  %151 = getelementptr inbounds [5 x [5 x double]]* %ldx, i64 %.sum5, i64 3, i64 %indvars.iv, !dbg !113
  %152 = load double* %151, align 8, !dbg !113, !tbaa !109
  %153 = fmul double %152, %116, !dbg !113
  %154 = fadd double %150, %153, !dbg !113
  %155 = getelementptr inbounds [5 x [5 x double]]* %ldy, i64 %.sum5, i64 4, i64 %indvars.iv, !dbg !113
  %156 = load double* %155, align 8, !dbg !113, !tbaa !109
  %157 = fmul double %156, %118, !dbg !113
  %158 = fadd double %154, %157, !dbg !113
  %159 = getelementptr inbounds [5 x [5 x double]]* %ldx, i64 %.sum5, i64 4, i64 %indvars.iv, !dbg !113
  %160 = load double* %159, align 8, !dbg !113, !tbaa !109
  %161 = fmul double %160, %120, !dbg !113
  %162 = fadd double %158, %161, !dbg !113
  %163 = fmul double %162, %omega, !dbg !113
  %164 = fsub double %123, %163, !dbg !113
  %165 = getelementptr inbounds [5 x double]* %tv, i64 0, i64 %indvars.iv, !dbg !113
  store double %164, double* %165, align 8, !dbg !113, !tbaa !109
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !120
  %exitcond = icmp eq i64 %indvars.iv.next, 5, !dbg !120
  br i1 %exitcond, label %.loopexit, label %121, !dbg !120

.loopexit:                                        ; preds = %121
  %.sum2 = add i64 %indvars.iv31, %98, !dbg !116
  br label %166, !dbg !121

; <label>:166                                     ; preds = %166, %.loopexit
  %indvars.iv28 = phi i64 [ 0, %.loopexit ], [ %indvars.iv.next29, %166 ]
  %167 = getelementptr inbounds [5 x [5 x double]]* %d, i64 %.sum2, i64 0, i64 %indvars.iv28, !dbg !116
  %168 = load double* %167, align 8, !dbg !116, !tbaa !109
  %169 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 %indvars.iv28, i64 0, !dbg !116
  store double %168, double* %169, align 8, !dbg !116, !tbaa !109
  %170 = getelementptr inbounds [5 x [5 x double]]* %d, i64 %.sum2, i64 1, i64 %indvars.iv28, !dbg !122
  %171 = load double* %170, align 8, !dbg !122, !tbaa !109
  %172 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 %indvars.iv28, i64 1, !dbg !122
  store double %171, double* %172, align 8, !dbg !122, !tbaa !109
  %173 = getelementptr inbounds [5 x [5 x double]]* %d, i64 %.sum2, i64 2, i64 %indvars.iv28, !dbg !123
  %174 = load double* %173, align 8, !dbg !123, !tbaa !109
  %175 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 %indvars.iv28, i64 2, !dbg !123
  store double %174, double* %175, align 8, !dbg !123, !tbaa !109
  %176 = getelementptr inbounds [5 x [5 x double]]* %d, i64 %.sum2, i64 3, i64 %indvars.iv28, !dbg !124
  %177 = load double* %176, align 8, !dbg !124, !tbaa !109
  %178 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 %indvars.iv28, i64 3, !dbg !124
  store double %177, double* %178, align 8, !dbg !124, !tbaa !109
  %179 = getelementptr inbounds [5 x [5 x double]]* %d, i64 %.sum2, i64 4, i64 %indvars.iv28, !dbg !125
  %180 = load double* %179, align 8, !dbg !125, !tbaa !109
  %181 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 %indvars.iv28, i64 4, !dbg !125
  store double %180, double* %181, align 8, !dbg !125, !tbaa !109
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !121
  %exitcond30 = icmp eq i64 %indvars.iv.next29, 5, !dbg !121
  br i1 %exitcond30, label %182, label %166, !dbg !121

; <label>:182                                     ; preds = %166
  %183 = load double* %24, align 16, !dbg !82, !tbaa !109
  %184 = fdiv double 1.000000e+00, %183, !dbg !82
  call void @llvm.dbg.value(metadata !{double %184}, i64 0, metadata !42), !dbg !82
  %185 = load double* %25, align 8, !dbg !84, !tbaa !109
  %186 = fmul double %184, %185, !dbg !84
  call void @llvm.dbg.value(metadata !{double %186}, i64 0, metadata !41), !dbg !84
  %187 = load double* %26, align 8, !dbg !85, !tbaa !109
  %188 = load double* %27, align 8, !dbg !85, !tbaa !109
  %189 = fmul double %186, %188, !dbg !85
  %190 = fsub double %187, %189, !dbg !85
  store double %190, double* %26, align 8, !dbg !85, !tbaa !109
  %191 = load double* %28, align 8, !dbg !86, !tbaa !109
  %192 = load double* %29, align 16, !dbg !86, !tbaa !109
  %193 = fmul double %186, %192, !dbg !86
  %194 = fsub double %191, %193, !dbg !86
  store double %194, double* %28, align 8, !dbg !86, !tbaa !109
  %195 = load double* %30, align 8, !dbg !87, !tbaa !109
  %196 = load double* %31, align 8, !dbg !87, !tbaa !109
  %197 = fmul double %186, %196, !dbg !87
  %198 = fsub double %195, %197, !dbg !87
  store double %198, double* %30, align 8, !dbg !87, !tbaa !109
  %199 = load double* %32, align 8, !dbg !88, !tbaa !109
  %200 = load double* %33, align 16, !dbg !88, !tbaa !109
  %201 = fmul double %186, %200, !dbg !88
  %202 = fsub double %199, %201, !dbg !88
  store double %202, double* %32, align 8, !dbg !88, !tbaa !109
  %203 = load double* %34, align 8, !dbg !89, !tbaa !109
  %204 = load double* %35, align 16, !dbg !89, !tbaa !109
  %205 = fmul double %186, %204, !dbg !89
  %206 = fsub double %203, %205, !dbg !89
  store double %206, double* %34, align 8, !dbg !89, !tbaa !109
  %207 = load double* %36, align 16, !dbg !90, !tbaa !109
  %208 = fmul double %184, %207, !dbg !90
  call void @llvm.dbg.value(metadata !{double %208}, i64 0, metadata !41), !dbg !90
  %209 = load double* %37, align 8, !dbg !91, !tbaa !109
  %210 = load double* %27, align 8, !dbg !91, !tbaa !109
  %211 = fmul double %208, %210, !dbg !91
  %212 = fsub double %209, %211, !dbg !91
  store double %212, double* %37, align 8, !dbg !91, !tbaa !109
  %213 = load double* %38, align 16, !dbg !92, !tbaa !109
  %214 = load double* %29, align 16, !dbg !92, !tbaa !109
  %215 = fmul double %208, %214, !dbg !92
  %216 = fsub double %213, %215, !dbg !92
  store double %216, double* %38, align 16, !dbg !92, !tbaa !109
  %217 = load double* %39, align 8, !dbg !93, !tbaa !109
  %218 = load double* %31, align 8, !dbg !93, !tbaa !109
  %219 = fmul double %208, %218, !dbg !93
  %220 = fsub double %217, %219, !dbg !93
  store double %220, double* %39, align 8, !dbg !93, !tbaa !109
  %221 = load double* %40, align 16, !dbg !94, !tbaa !109
  %222 = load double* %33, align 16, !dbg !94, !tbaa !109
  %223 = fmul double %208, %222, !dbg !94
  %224 = fsub double %221, %223, !dbg !94
  store double %224, double* %40, align 16, !dbg !94, !tbaa !109
  %225 = load double* %41, align 16, !dbg !95, !tbaa !109
  %226 = load double* %35, align 16, !dbg !95, !tbaa !109
  %227 = fmul double %208, %226, !dbg !95
  %228 = fsub double %225, %227, !dbg !95
  store double %228, double* %41, align 16, !dbg !95, !tbaa !109
  %229 = load double* %42, align 8, !dbg !96, !tbaa !109
  %230 = fmul double %184, %229, !dbg !96
  call void @llvm.dbg.value(metadata !{double %230}, i64 0, metadata !41), !dbg !96
  %231 = load double* %43, align 8, !dbg !97, !tbaa !109
  %232 = load double* %27, align 8, !dbg !97, !tbaa !109
  %233 = fmul double %230, %232, !dbg !97
  %234 = fsub double %231, %233, !dbg !97
  store double %234, double* %43, align 8, !dbg !97, !tbaa !109
  %235 = load double* %44, align 8, !dbg !98, !tbaa !109
  %236 = load double* %29, align 16, !dbg !98, !tbaa !109
  %237 = fmul double %230, %236, !dbg !98
  %238 = fsub double %235, %237, !dbg !98
  store double %238, double* %44, align 8, !dbg !98, !tbaa !109
  %239 = load double* %45, align 8, !dbg !99, !tbaa !109
  %240 = load double* %31, align 8, !dbg !99, !tbaa !109
  %241 = fmul double %230, %240, !dbg !99
  %242 = fsub double %239, %241, !dbg !99
  store double %242, double* %45, align 8, !dbg !99, !tbaa !109
  %243 = load double* %46, align 8, !dbg !100, !tbaa !109
  %244 = load double* %33, align 16, !dbg !100, !tbaa !109
  %245 = fmul double %230, %244, !dbg !100
  %246 = fsub double %243, %245, !dbg !100
  store double %246, double* %46, align 8, !dbg !100, !tbaa !109
  %247 = load double* %47, align 8, !dbg !101, !tbaa !109
  %248 = load double* %35, align 16, !dbg !101, !tbaa !109
  %249 = fmul double %230, %248, !dbg !101
  %250 = fsub double %247, %249, !dbg !101
  store double %250, double* %47, align 8, !dbg !101, !tbaa !109
  %251 = load double* %48, align 16, !dbg !102, !tbaa !109
  %252 = fmul double %184, %251, !dbg !102
  call void @llvm.dbg.value(metadata !{double %252}, i64 0, metadata !41), !dbg !102
  %253 = load double* %49, align 8, !dbg !103, !tbaa !109
  %254 = load double* %27, align 8, !dbg !103, !tbaa !109
  %255 = fmul double %252, %254, !dbg !103
  %256 = fsub double %253, %255, !dbg !103
  store double %256, double* %49, align 8, !dbg !103, !tbaa !109
  %257 = load double* %50, align 16, !dbg !104, !tbaa !109
  %258 = load double* %29, align 16, !dbg !104, !tbaa !109
  %259 = fmul double %252, %258, !dbg !104
  %260 = fsub double %257, %259, !dbg !104
  store double %260, double* %50, align 16, !dbg !104, !tbaa !109
  %261 = load double* %51, align 8, !dbg !105, !tbaa !109
  %262 = load double* %31, align 8, !dbg !105, !tbaa !109
  %263 = fmul double %252, %262, !dbg !105
  %264 = fsub double %261, %263, !dbg !105
  store double %264, double* %51, align 8, !dbg !105, !tbaa !109
  %265 = load double* %52, align 16, !dbg !106, !tbaa !109
  %266 = load double* %33, align 16, !dbg !106, !tbaa !109
  %267 = fmul double %252, %266, !dbg !106
  %268 = fsub double %265, %267, !dbg !106
  store double %268, double* %52, align 16, !dbg !106, !tbaa !109
  %269 = load double* %53, align 16, !dbg !107, !tbaa !109
  %270 = load double* %35, align 16, !dbg !107, !tbaa !109
  %271 = fmul double %252, %270, !dbg !107
  %272 = fsub double %269, %271, !dbg !107
  store double %272, double* %53, align 16, !dbg !107, !tbaa !109
  %273 = load double* %26, align 8, !dbg !126, !tbaa !109
  %274 = fdiv double 1.000000e+00, %273, !dbg !126
  call void @llvm.dbg.value(metadata !{double %274}, i64 0, metadata !42), !dbg !126
  %275 = load double* %37, align 8, !dbg !127, !tbaa !109
  %276 = fmul double %274, %275, !dbg !127
  call void @llvm.dbg.value(metadata !{double %276}, i64 0, metadata !41), !dbg !127
  %277 = load double* %38, align 16, !dbg !128, !tbaa !109
  %278 = load double* %28, align 8, !dbg !128, !tbaa !109
  %279 = fmul double %276, %278, !dbg !128
  %280 = fsub double %277, %279, !dbg !128
  store double %280, double* %38, align 16, !dbg !128, !tbaa !109
  %281 = load double* %39, align 8, !dbg !129, !tbaa !109
  %282 = load double* %30, align 8, !dbg !129, !tbaa !109
  %283 = fmul double %276, %282, !dbg !129
  %284 = fsub double %281, %283, !dbg !129
  store double %284, double* %39, align 8, !dbg !129, !tbaa !109
  %285 = load double* %40, align 16, !dbg !130, !tbaa !109
  %286 = load double* %32, align 8, !dbg !130, !tbaa !109
  %287 = fmul double %276, %286, !dbg !130
  %288 = fsub double %285, %287, !dbg !130
  store double %288, double* %40, align 16, !dbg !130, !tbaa !109
  %289 = load double* %41, align 16, !dbg !131, !tbaa !109
  %290 = load double* %34, align 8, !dbg !131, !tbaa !109
  %291 = fmul double %276, %290, !dbg !131
  %292 = fsub double %289, %291, !dbg !131
  store double %292, double* %41, align 16, !dbg !131, !tbaa !109
  %293 = load double* %43, align 8, !dbg !132, !tbaa !109
  %294 = fmul double %274, %293, !dbg !132
  call void @llvm.dbg.value(metadata !{double %294}, i64 0, metadata !41), !dbg !132
  %295 = load double* %44, align 8, !dbg !133, !tbaa !109
  %296 = load double* %28, align 8, !dbg !133, !tbaa !109
  %297 = fmul double %294, %296, !dbg !133
  %298 = fsub double %295, %297, !dbg !133
  store double %298, double* %44, align 8, !dbg !133, !tbaa !109
  %299 = load double* %45, align 8, !dbg !134, !tbaa !109
  %300 = load double* %30, align 8, !dbg !134, !tbaa !109
  %301 = fmul double %294, %300, !dbg !134
  %302 = fsub double %299, %301, !dbg !134
  store double %302, double* %45, align 8, !dbg !134, !tbaa !109
  %303 = load double* %46, align 8, !dbg !135, !tbaa !109
  %304 = load double* %32, align 8, !dbg !135, !tbaa !109
  %305 = fmul double %294, %304, !dbg !135
  %306 = fsub double %303, %305, !dbg !135
  store double %306, double* %46, align 8, !dbg !135, !tbaa !109
  %307 = load double* %47, align 8, !dbg !136, !tbaa !109
  %308 = load double* %34, align 8, !dbg !136, !tbaa !109
  %309 = fmul double %294, %308, !dbg !136
  %310 = fsub double %307, %309, !dbg !136
  store double %310, double* %47, align 8, !dbg !136, !tbaa !109
  %311 = load double* %49, align 8, !dbg !137, !tbaa !109
  %312 = fmul double %274, %311, !dbg !137
  call void @llvm.dbg.value(metadata !{double %312}, i64 0, metadata !41), !dbg !137
  %313 = load double* %50, align 16, !dbg !138, !tbaa !109
  %314 = load double* %28, align 8, !dbg !138, !tbaa !109
  %315 = fmul double %312, %314, !dbg !138
  %316 = fsub double %313, %315, !dbg !138
  store double %316, double* %50, align 16, !dbg !138, !tbaa !109
  %317 = load double* %51, align 8, !dbg !139, !tbaa !109
  %318 = load double* %30, align 8, !dbg !139, !tbaa !109
  %319 = fmul double %312, %318, !dbg !139
  %320 = fsub double %317, %319, !dbg !139
  store double %320, double* %51, align 8, !dbg !139, !tbaa !109
  %321 = load double* %52, align 16, !dbg !140, !tbaa !109
  %322 = load double* %32, align 8, !dbg !140, !tbaa !109
  %323 = fmul double %312, %322, !dbg !140
  %324 = fsub double %321, %323, !dbg !140
  store double %324, double* %52, align 16, !dbg !140, !tbaa !109
  %325 = load double* %53, align 16, !dbg !141, !tbaa !109
  %326 = load double* %34, align 8, !dbg !141, !tbaa !109
  %327 = fmul double %312, %326, !dbg !141
  %328 = fsub double %325, %327, !dbg !141
  store double %328, double* %53, align 16, !dbg !141, !tbaa !109
  %329 = load double* %38, align 16, !dbg !142, !tbaa !109
  %330 = fdiv double 1.000000e+00, %329, !dbg !142
  call void @llvm.dbg.value(metadata !{double %330}, i64 0, metadata !42), !dbg !142
  %331 = load double* %44, align 8, !dbg !143, !tbaa !109
  %332 = fmul double %330, %331, !dbg !143
  call void @llvm.dbg.value(metadata !{double %332}, i64 0, metadata !41), !dbg !143
  %333 = load double* %45, align 8, !dbg !144, !tbaa !109
  %334 = load double* %39, align 8, !dbg !144, !tbaa !109
  %335 = fmul double %332, %334, !dbg !144
  %336 = fsub double %333, %335, !dbg !144
  store double %336, double* %45, align 8, !dbg !144, !tbaa !109
  %337 = load double* %46, align 8, !dbg !145, !tbaa !109
  %338 = load double* %40, align 16, !dbg !145, !tbaa !109
  %339 = fmul double %332, %338, !dbg !145
  %340 = fsub double %337, %339, !dbg !145
  store double %340, double* %46, align 8, !dbg !145, !tbaa !109
  %341 = load double* %47, align 8, !dbg !146, !tbaa !109
  %342 = load double* %41, align 16, !dbg !146, !tbaa !109
  %343 = fmul double %332, %342, !dbg !146
  %344 = fsub double %341, %343, !dbg !146
  store double %344, double* %47, align 8, !dbg !146, !tbaa !109
  %345 = load double* %50, align 16, !dbg !147, !tbaa !109
  %346 = fmul double %330, %345, !dbg !147
  call void @llvm.dbg.value(metadata !{double %346}, i64 0, metadata !41), !dbg !147
  %347 = load double* %51, align 8, !dbg !148, !tbaa !109
  %348 = load double* %39, align 8, !dbg !148, !tbaa !109
  %349 = fmul double %346, %348, !dbg !148
  %350 = fsub double %347, %349, !dbg !148
  store double %350, double* %51, align 8, !dbg !148, !tbaa !109
  %351 = load double* %52, align 16, !dbg !149, !tbaa !109
  %352 = load double* %40, align 16, !dbg !149, !tbaa !109
  %353 = fmul double %346, %352, !dbg !149
  %354 = fsub double %351, %353, !dbg !149
  store double %354, double* %52, align 16, !dbg !149, !tbaa !109
  %355 = load double* %53, align 16, !dbg !150, !tbaa !109
  %356 = load double* %41, align 16, !dbg !150, !tbaa !109
  %357 = fmul double %346, %356, !dbg !150
  %358 = fsub double %355, %357, !dbg !150
  store double %358, double* %53, align 16, !dbg !150, !tbaa !109
  %359 = load double* %45, align 8, !dbg !151, !tbaa !109
  %360 = fdiv double 1.000000e+00, %359, !dbg !151
  call void @llvm.dbg.value(metadata !{double %360}, i64 0, metadata !42), !dbg !151
  %361 = load double* %51, align 8, !dbg !152, !tbaa !109
  %362 = fmul double %360, %361, !dbg !152
  call void @llvm.dbg.value(metadata !{double %362}, i64 0, metadata !41), !dbg !152
  %363 = load double* %52, align 16, !dbg !153, !tbaa !109
  %364 = load double* %46, align 8, !dbg !153, !tbaa !109
  %365 = fmul double %362, %364, !dbg !153
  %366 = fsub double %363, %365, !dbg !153
  store double %366, double* %52, align 16, !dbg !153, !tbaa !109
  %367 = load double* %53, align 16, !dbg !154, !tbaa !109
  %368 = load double* %47, align 8, !dbg !154, !tbaa !109
  %369 = fmul double %362, %368, !dbg !154
  %370 = fsub double %367, %369, !dbg !154
  store double %370, double* %53, align 16, !dbg !154, !tbaa !109
  %371 = load double* %52, align 16, !dbg !119, !tbaa !109
  %372 = fdiv double %370, %371, !dbg !119
  %.sum1 = add i64 %.sum, %indvars.iv31, !dbg !119
  %373 = getelementptr inbounds [5 x double]* %v, i64 %.sum1, i64 4, !dbg !119
  store double %372, double* %373, align 8, !dbg !119, !tbaa !109
  %374 = load double* %47, align 8, !dbg !155, !tbaa !109
  %375 = load double* %46, align 8, !dbg !155, !tbaa !109
  %376 = fmul double %372, %375, !dbg !155
  %377 = fsub double %374, %376, !dbg !155
  store double %377, double* %47, align 8, !dbg !155, !tbaa !109
  %378 = load double* %45, align 8, !dbg !156, !tbaa !109
  %379 = fdiv double %377, %378, !dbg !156
  %380 = getelementptr inbounds [5 x double]* %v, i64 %.sum1, i64 3, !dbg !156
  store double %379, double* %380, align 8, !dbg !156, !tbaa !109
  %381 = load double* %41, align 16, !dbg !157, !tbaa !109
  %382 = load double* %39, align 8, !dbg !157, !tbaa !109
  %383 = fmul double %379, %382, !dbg !157
  %384 = fsub double %381, %383, !dbg !157
  %385 = load double* %40, align 16, !dbg !157, !tbaa !109
  %386 = load double* %373, align 8, !dbg !157, !tbaa !109
  %387 = fmul double %385, %386, !dbg !157
  %388 = fsub double %384, %387, !dbg !157
  store double %388, double* %41, align 16, !dbg !157, !tbaa !109
  %389 = load double* %38, align 16, !dbg !158, !tbaa !109
  %390 = fdiv double %388, %389, !dbg !158
  %391 = getelementptr inbounds [5 x double]* %v, i64 %.sum1, i64 2, !dbg !158
  store double %390, double* %391, align 8, !dbg !158, !tbaa !109
  %392 = load double* %34, align 8, !dbg !159, !tbaa !109
  %393 = load double* %28, align 8, !dbg !159, !tbaa !109
  %394 = fmul double %390, %393, !dbg !159
  %395 = fsub double %392, %394, !dbg !159
  %396 = load double* %30, align 8, !dbg !159, !tbaa !109
  %397 = load double* %380, align 8, !dbg !159, !tbaa !109
  %398 = fmul double %396, %397, !dbg !159
  %399 = fsub double %395, %398, !dbg !159
  %400 = load double* %32, align 8, !dbg !159, !tbaa !109
  %401 = load double* %373, align 8, !dbg !159, !tbaa !109
  %402 = fmul double %400, %401, !dbg !159
  %403 = fsub double %399, %402, !dbg !159
  store double %403, double* %34, align 8, !dbg !159, !tbaa !109
  %404 = load double* %26, align 8, !dbg !160, !tbaa !109
  %405 = fdiv double %403, %404, !dbg !160
  %406 = getelementptr inbounds [5 x double]* %v, i64 %.sum1, i64 1, !dbg !160
  store double %405, double* %406, align 8, !dbg !160, !tbaa !109
  %407 = load double* %35, align 16, !dbg !161, !tbaa !109
  %408 = load double* %27, align 8, !dbg !161, !tbaa !109
  %409 = fmul double %405, %408, !dbg !161
  %410 = fsub double %407, %409, !dbg !161
  %411 = load double* %29, align 16, !dbg !161, !tbaa !109
  %412 = load double* %391, align 8, !dbg !161, !tbaa !109
  %413 = fmul double %411, %412, !dbg !161
  %414 = fsub double %410, %413, !dbg !161
  %415 = load double* %31, align 8, !dbg !161, !tbaa !109
  %416 = load double* %380, align 8, !dbg !161, !tbaa !109
  %417 = fmul double %415, %416, !dbg !161
  %418 = fsub double %414, %417, !dbg !161
  %419 = load double* %33, align 16, !dbg !161, !tbaa !109
  %420 = load double* %373, align 8, !dbg !161, !tbaa !109
  %421 = fmul double %419, %420, !dbg !161
  %422 = fsub double %418, %421, !dbg !161
  store double %422, double* %35, align 16, !dbg !161, !tbaa !109
  %423 = load double* %24, align 16, !dbg !162, !tbaa !109
  %424 = fdiv double %422, %423, !dbg !162
  %425 = getelementptr inbounds [5 x double]* %v, i64 %.sum1, i64 0, !dbg !162
  store double %424, double* %425, align 8, !dbg !162, !tbaa !109
  %indvars.iv.next32 = add nsw i64 %indvars.iv31, 1, !dbg !79
  %426 = trunc i64 %indvars.iv.next32 to i32, !dbg !79
  %427 = icmp slt i32 %426, %iend, !dbg !79
  br i1 %427, label %.preheader, label %._crit_edge, !dbg !79

._crit_edge:                                      ; preds = %182, %.preheader17
  %indvars.iv.next34 = add nsw i64 %indvars.iv33, 1, !dbg !77
  %428 = trunc i64 %indvars.iv.next34 to i32, !dbg !77
  %429 = icmp slt i32 %428, %jend, !dbg !77
  br i1 %429, label %.preheader17, label %._crit_edge21, !dbg !77

._crit_edge21:                                    ; preds = %._crit_edge, %.preheader19
  call void @llvm.lifetime.end(i64 40, i8* %10) #2, !dbg !163
  call void @llvm.lifetime.end(i64 200, i8* %9) #2, !dbg !163
  ret void, !dbg !163
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!54, !55}
!llvm.ident = !{!56}

!0 = metadata !{i32 786449, metadata !1, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 true, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c] [DW_LANG_C99]
!1 = metadata !{metadata !"blts.c", metadata !"/home/azguolu/ARAT-0.1/llvm-tracer/example/lu"}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4}
!4 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"blts", metadata !"blts", metadata !"", i32 45, metadata !6, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32, i32, i32, i32, i32, i32, i32, double, [5 x double]*, [5 x [5 x double]]*, [5 x [5 x double]]*, [5 x [5 x double]]*, [5 x [5 x double]]*, i32, i32, i32, i32, i32, i32)* @blts, null, null, metadata !18, i32 53} ; [ DW_TAG_subprogram ] [line 45] [def] [scope 53] [blts]
!5 = metadata !{i32 786473, metadata !1}          ; [ DW_TAG_file_type ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!6 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !7, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!7 = metadata !{null, metadata !8, metadata !8, metadata !8, metadata !8, metadata !8, metadata !8, metadata !8, metadata !9, metadata !10, metadata !15, metadata !15, metadata !15, metadata !15, metadata !8, metadata !8, metadata !8, metadata !8, metadata !8, metadata !8}
!8 = metadata !{i32 786468, null, null, metadata !"int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!9 = metadata !{i32 786468, null, null, metadata !"double", i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ] [double] [line 0, size 64, align 64, offset 0, enc DW_ATE_float]
!10 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !11} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!11 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 0, i64 64, i32 0, i32 0, metadata !9, metadata !12, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 0, align 64, offset 0] [from double]
!12 = metadata !{metadata !13, metadata !13, metadata !14}
!13 = metadata !{i32 786465, i64 0, i64 -1}       ; [ DW_TAG_subrange_type ] [unbounded]
!14 = metadata !{i32 786465, i64 0, i64 5}        ; [ DW_TAG_subrange_type ] [0, 4]
!15 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !16} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!16 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 0, i64 64, i32 0, i32 0, metadata !9, metadata !17, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 0, align 64, offset 0] [from double]
!17 = metadata !{metadata !13, metadata !14, metadata !14}
!18 = metadata !{metadata !19, metadata !20, metadata !21, metadata !22, metadata !23, metadata !24, metadata !25, metadata !26, metadata !27, metadata !28, metadata !29, metadata !30, metadata !31, metadata !32, metadata !33, metadata !34, metadata !35, metadata !36, metadata !37, metadata !38, metadata !39, metadata !40, metadata !41, metadata !42, metadata !43, metadata !46, metadata !49, metadata !53}
!19 = metadata !{i32 786689, metadata !4, metadata !"ldmx", metadata !5, i32 16777261, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ldmx] [line 45]
!20 = metadata !{i32 786689, metadata !4, metadata !"ldmy", metadata !5, i32 33554477, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ldmy] [line 45]
!21 = metadata !{i32 786689, metadata !4, metadata !"ldmz", metadata !5, i32 50331693, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ldmz] [line 45]
!22 = metadata !{i32 786689, metadata !4, metadata !"nx", metadata !5, i32 67108909, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [nx] [line 45]
!23 = metadata !{i32 786689, metadata !4, metadata !"ny", metadata !5, i32 83886125, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ny] [line 45]
!24 = metadata !{i32 786689, metadata !4, metadata !"nz", metadata !5, i32 100663341, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [nz] [line 45]
!25 = metadata !{i32 786689, metadata !4, metadata !"k", metadata !5, i32 117440557, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [k] [line 45]
!26 = metadata !{i32 786689, metadata !4, metadata !"omega", metadata !5, i32 134217774, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [omega] [line 46]
!27 = metadata !{i32 786689, metadata !4, metadata !"v", metadata !5, i32 150994991, metadata !10, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [v] [line 47]
!28 = metadata !{i32 786689, metadata !4, metadata !"ldz", metadata !5, i32 167772208, metadata !15, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ldz] [line 48]
!29 = metadata !{i32 786689, metadata !4, metadata !"ldy", metadata !5, i32 184549425, metadata !15, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ldy] [line 49]
!30 = metadata !{i32 786689, metadata !4, metadata !"ldx", metadata !5, i32 201326642, metadata !15, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ldx] [line 50]
!31 = metadata !{i32 786689, metadata !4, metadata !"d", metadata !5, i32 218103859, metadata !15, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [d] [line 51]
!32 = metadata !{i32 786689, metadata !4, metadata !"ist", metadata !5, i32 234881076, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ist] [line 52]
!33 = metadata !{i32 786689, metadata !4, metadata !"iend", metadata !5, i32 251658292, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [iend] [line 52]
!34 = metadata !{i32 786689, metadata !4, metadata !"jst", metadata !5, i32 268435508, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [jst] [line 52]
!35 = metadata !{i32 786689, metadata !4, metadata !"jend", metadata !5, i32 285212724, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [jend] [line 52]
!36 = metadata !{i32 786689, metadata !4, metadata !"nx0", metadata !5, i32 301989940, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [nx0] [line 52]
!37 = metadata !{i32 786689, metadata !4, metadata !"ny0", metadata !5, i32 318767156, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ny0] [line 52]
!38 = metadata !{i32 786688, metadata !4, metadata !"i", metadata !5, i32 57, metadata !8, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 57]
!39 = metadata !{i32 786688, metadata !4, metadata !"j", metadata !5, i32 57, metadata !8, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [j] [line 57]
!40 = metadata !{i32 786688, metadata !4, metadata !"m", metadata !5, i32 57, metadata !8, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [m] [line 57]
!41 = metadata !{i32 786688, metadata !4, metadata !"tmp", metadata !5, i32 58, metadata !9, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [tmp] [line 58]
!42 = metadata !{i32 786688, metadata !4, metadata !"tmp1", metadata !5, i32 58, metadata !9, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [tmp1] [line 58]
!43 = metadata !{i32 786688, metadata !4, metadata !"tmat", metadata !5, i32 59, metadata !44, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [tmat] [line 59]
!44 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 1600, i64 64, i32 0, i32 0, metadata !9, metadata !45, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 1600, align 64, offset 0] [from double]
!45 = metadata !{metadata !14, metadata !14}
!46 = metadata !{i32 786688, metadata !4, metadata !"tv", metadata !5, i32 59, metadata !47, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [tv] [line 59]
!47 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 320, i64 64, i32 0, i32 0, metadata !9, metadata !48, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 320, align 64, offset 0] [from double]
!48 = metadata !{metadata !14}
!49 = metadata !{i32 786688, metadata !4, metadata !"vk", metadata !5, i32 64, metadata !50, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [vk] [line 64]
!50 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !51} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!51 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 0, i64 64, i32 0, i32 0, metadata !9, metadata !52, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 0, align 64, offset 0] [from double]
!52 = metadata !{metadata !13, metadata !14}
!53 = metadata !{i32 786688, metadata !4, metadata !"vkm1", metadata !5, i32 65, metadata !50, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [vkm1] [line 65]
!54 = metadata !{i32 2, metadata !"Dwarf Version", i32 4}
!55 = metadata !{i32 1, metadata !"Debug Info Version", i32 1}
!56 = metadata !{metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"}
!57 = metadata !{i32 45, i32 0, metadata !4, null}
!58 = metadata !{i32 46, i32 0, metadata !4, null}
!59 = metadata !{i32 47, i32 0, metadata !4, null}
!60 = metadata !{i32 48, i32 0, metadata !4, null}
!61 = metadata !{i32 49, i32 0, metadata !4, null}
!62 = metadata !{i32 50, i32 0, metadata !4, null}
!63 = metadata !{i32 51, i32 0, metadata !4, null}
!64 = metadata !{i32 52, i32 0, metadata !4, null}
!65 = metadata !{i32 59, i32 0, metadata !4, null}
!66 = metadata !{i32 64, i32 0, metadata !4, null}
!67 = metadata !{i32 65, i32 0, metadata !4, null}
!68 = metadata !{i32 67, i32 0, metadata !69, null}
!69 = metadata !{i32 786443, metadata !1, metadata !4, i32 67, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!70 = metadata !{i32 68, i32 0, metadata !71, null}
!71 = metadata !{i32 786443, metadata !1, metadata !72, i32 68, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!72 = metadata !{i32 786443, metadata !1, metadata !69, i32 67, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!73 = metadata !{i32 70, i32 0, metadata !74, null}
!74 = metadata !{i32 786443, metadata !1, metadata !75, i32 69, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!75 = metadata !{i32 786443, metadata !1, metadata !76, i32 69, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!76 = metadata !{i32 786443, metadata !1, metadata !71, i32 68, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!77 = metadata !{i32 80, i32 0, metadata !78, null}
!78 = metadata !{i32 786443, metadata !1, metadata !4, i32 80, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!79 = metadata !{i32 81, i32 0, metadata !80, null}
!80 = metadata !{i32 786443, metadata !1, metadata !81, i32 81, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!81 = metadata !{i32 786443, metadata !1, metadata !78, i32 80, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!82 = metadata !{i32 109, i32 0, metadata !83, null}
!83 = metadata !{i32 786443, metadata !1, metadata !80, i32 81, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!84 = metadata !{i32 110, i32 0, metadata !83, null}
!85 = metadata !{i32 111, i32 0, metadata !83, null}
!86 = metadata !{i32 112, i32 0, metadata !83, null}
!87 = metadata !{i32 113, i32 0, metadata !83, null}
!88 = metadata !{i32 114, i32 0, metadata !83, null}
!89 = metadata !{i32 115, i32 0, metadata !83, null}
!90 = metadata !{i32 117, i32 0, metadata !83, null}
!91 = metadata !{i32 118, i32 0, metadata !83, null}
!92 = metadata !{i32 119, i32 0, metadata !83, null}
!93 = metadata !{i32 120, i32 0, metadata !83, null}
!94 = metadata !{i32 121, i32 0, metadata !83, null}
!95 = metadata !{i32 122, i32 0, metadata !83, null}
!96 = metadata !{i32 124, i32 0, metadata !83, null}
!97 = metadata !{i32 125, i32 0, metadata !83, null}
!98 = metadata !{i32 126, i32 0, metadata !83, null}
!99 = metadata !{i32 127, i32 0, metadata !83, null}
!100 = metadata !{i32 128, i32 0, metadata !83, null}
!101 = metadata !{i32 129, i32 0, metadata !83, null}
!102 = metadata !{i32 131, i32 0, metadata !83, null}
!103 = metadata !{i32 132, i32 0, metadata !83, null}
!104 = metadata !{i32 133, i32 0, metadata !83, null}
!105 = metadata !{i32 134, i32 0, metadata !83, null}
!106 = metadata !{i32 135, i32 0, metadata !83, null}
!107 = metadata !{i32 136, i32 0, metadata !83, null}
!108 = metadata !{i32 69, i32 0, metadata !75, null}
!109 = metadata !{metadata !110, metadata !110, i64 0}
!110 = metadata !{metadata !"double", metadata !111, i64 0}
!111 = metadata !{metadata !"omnipotent char", metadata !112, i64 0}
!112 = metadata !{metadata !"Simple C/C++ TBAA"}
!113 = metadata !{i32 83, i32 0, metadata !114, null}
!114 = metadata !{i32 786443, metadata !1, metadata !115, i32 82, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!115 = metadata !{i32 786443, metadata !1, metadata !83, i32 82, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!116 = metadata !{i32 102, i32 0, metadata !117, null}
!117 = metadata !{i32 786443, metadata !1, metadata !118, i32 101, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!118 = metadata !{i32 786443, metadata !1, metadata !83, i32 101, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/blts.c]
!119 = metadata !{i32 176, i32 0, metadata !83, null}
!120 = metadata !{i32 82, i32 0, metadata !115, null}
!121 = metadata !{i32 101, i32 0, metadata !118, null}
!122 = metadata !{i32 103, i32 0, metadata !117, null}
!123 = metadata !{i32 104, i32 0, metadata !117, null}
!124 = metadata !{i32 105, i32 0, metadata !117, null}
!125 = metadata !{i32 106, i32 0, metadata !117, null}
!126 = metadata !{i32 138, i32 0, metadata !83, null}
!127 = metadata !{i32 139, i32 0, metadata !83, null}
!128 = metadata !{i32 140, i32 0, metadata !83, null}
!129 = metadata !{i32 141, i32 0, metadata !83, null}
!130 = metadata !{i32 142, i32 0, metadata !83, null}
!131 = metadata !{i32 143, i32 0, metadata !83, null}
!132 = metadata !{i32 145, i32 0, metadata !83, null}
!133 = metadata !{i32 146, i32 0, metadata !83, null}
!134 = metadata !{i32 147, i32 0, metadata !83, null}
!135 = metadata !{i32 148, i32 0, metadata !83, null}
!136 = metadata !{i32 149, i32 0, metadata !83, null}
!137 = metadata !{i32 151, i32 0, metadata !83, null}
!138 = metadata !{i32 152, i32 0, metadata !83, null}
!139 = metadata !{i32 153, i32 0, metadata !83, null}
!140 = metadata !{i32 154, i32 0, metadata !83, null}
!141 = metadata !{i32 155, i32 0, metadata !83, null}
!142 = metadata !{i32 157, i32 0, metadata !83, null}
!143 = metadata !{i32 158, i32 0, metadata !83, null}
!144 = metadata !{i32 159, i32 0, metadata !83, null}
!145 = metadata !{i32 160, i32 0, metadata !83, null}
!146 = metadata !{i32 161, i32 0, metadata !83, null}
!147 = metadata !{i32 163, i32 0, metadata !83, null}
!148 = metadata !{i32 164, i32 0, metadata !83, null}
!149 = metadata !{i32 165, i32 0, metadata !83, null}
!150 = metadata !{i32 166, i32 0, metadata !83, null}
!151 = metadata !{i32 168, i32 0, metadata !83, null}
!152 = metadata !{i32 169, i32 0, metadata !83, null}
!153 = metadata !{i32 170, i32 0, metadata !83, null}
!154 = metadata !{i32 171, i32 0, metadata !83, null}
!155 = metadata !{i32 178, i32 0, metadata !83, null}
!156 = metadata !{i32 180, i32 0, metadata !83, null}
!157 = metadata !{i32 182, i32 0, metadata !83, null}
!158 = metadata !{i32 185, i32 0, metadata !83, null}
!159 = metadata !{i32 187, i32 0, metadata !83, null}
!160 = metadata !{i32 191, i32 0, metadata !83, null}
!161 = metadata !{i32 193, i32 0, metadata !83, null}
!162 = metadata !{i32 198, i32 0, metadata !83, null}
!163 = metadata !{i32 201, i32 0, metadata !4, null}
