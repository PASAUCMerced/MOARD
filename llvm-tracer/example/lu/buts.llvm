; ModuleID = 'buts.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define void @buts(i32 %ldmx, i32 %ldmy, i32 %ldmz, i32 %nx, i32 %ny, i32 %nz, i32 %k, double %omega, [5 x double]* nocapture %v, [5 x double]* nocapture %tv, [5 x [5 x double]]* nocapture readonly %d, [5 x [5 x double]]* nocapture readonly %udx, [5 x [5 x double]]* nocapture readonly %udy, [5 x [5 x double]]* nocapture readonly %udz, i32 %ist, i32 %iend, i32 %jst, i32 %jend, i32 %nx0, i32 %ny0) #0 {
  %tmat = alloca [5 x [5 x double]], align 16
  call void @llvm.dbg.value(metadata !{i32 %ldmx}, i64 0, metadata !22), !dbg !53
  call void @llvm.dbg.value(metadata !{i32 %ldmy}, i64 0, metadata !23), !dbg !53
  call void @llvm.dbg.value(metadata !{i32 %ldmz}, i64 0, metadata !24), !dbg !53
  call void @llvm.dbg.value(metadata !{i32 %nx}, i64 0, metadata !25), !dbg !53
  call void @llvm.dbg.value(metadata !{i32 %ny}, i64 0, metadata !26), !dbg !53
  call void @llvm.dbg.value(metadata !{i32 %nz}, i64 0, metadata !27), !dbg !53
  call void @llvm.dbg.value(metadata !{i32 %k}, i64 0, metadata !28), !dbg !53
  call void @llvm.dbg.value(metadata !{double %omega}, i64 0, metadata !29), !dbg !54
  call void @llvm.dbg.value(metadata !{[5 x double]* %v}, i64 0, metadata !30), !dbg !55
  call void @llvm.dbg.value(metadata !{[5 x double]* %tv}, i64 0, metadata !31), !dbg !56
  call void @llvm.dbg.value(metadata !{[5 x [5 x double]]* %d}, i64 0, metadata !32), !dbg !57
  call void @llvm.dbg.value(metadata !{[5 x [5 x double]]* %udx}, i64 0, metadata !33), !dbg !58
  call void @llvm.dbg.value(metadata !{[5 x [5 x double]]* %udy}, i64 0, metadata !34), !dbg !59
  call void @llvm.dbg.value(metadata !{[5 x [5 x double]]* %udz}, i64 0, metadata !35), !dbg !60
  call void @llvm.dbg.value(metadata !{i32 %ist}, i64 0, metadata !36), !dbg !61
  call void @llvm.dbg.value(metadata !{i32 %iend}, i64 0, metadata !37), !dbg !61
  call void @llvm.dbg.value(metadata !{i32 %jst}, i64 0, metadata !38), !dbg !61
  call void @llvm.dbg.value(metadata !{i32 %jend}, i64 0, metadata !39), !dbg !61
  call void @llvm.dbg.value(metadata !{i32 %nx0}, i64 0, metadata !40), !dbg !61
  call void @llvm.dbg.value(metadata !{i32 %ny0}, i64 0, metadata !41), !dbg !61
  %1 = sdiv i32 %ldmy, 2
  %2 = shl nsw i32 %1, 1
  %3 = or i32 %2, 1
  %4 = zext i32 %3 to i64
  %5 = sdiv i32 %ldmx, 2
  %6 = shl nsw i32 %5, 1
  %7 = or i32 %6, 1
  %8 = zext i32 %7 to i64
  %9 = bitcast [5 x [5 x double]]* %tmat to i8*, !dbg !62
  call void @llvm.lifetime.start(i64 200, i8* %9) #2, !dbg !62
  call void @llvm.dbg.declare(metadata !{[5 x [5 x double]]* %tmat}, metadata !47), !dbg !62
  %10 = icmp sgt i32 %jend, %jst, !dbg !63
  br i1 %10, label %.preheader27.lr.ph, label %.preheader21, !dbg !63

.preheader27.lr.ph:                               ; preds = %0
  %11 = icmp sgt i32 %iend, %ist, !dbg !65
  %12 = add nsw i32 %k, 1, !dbg !68
  %13 = sext i32 %12 to i64, !dbg !68
  %14 = mul i64 %4, %13, !dbg !68
  %15 = sext i32 %iend to i64
  %16 = sext i32 %jend to i64
  br label %.preheader27, !dbg !63

.preheader27:                                     ; preds = %._crit_edge30, %.preheader27.lr.ph
  %indvars.iv44.in = phi i64 [ %indvars.iv44, %._crit_edge30 ], [ %16, %.preheader27.lr.ph ]
  %indvars.iv44 = add i64 %indvars.iv44.in, -1, !dbg !63
  br i1 %11, label %.preheader24.lr.ph, label %._crit_edge30, !dbg !65

.preheader24.lr.ph:                               ; preds = %.preheader27
  %17 = mul nsw i64 %indvars.iv44, %8, !dbg !68
  %18 = add i64 %indvars.iv44, %14, !dbg !68
  %.sum12 = mul i64 %8, %18, !dbg !68
  br label %.preheader24, !dbg !65

.preheader21:                                     ; preds = %._crit_edge30, %0
  %19 = icmp sgt i32 %jend, %jst, !dbg !72
  br i1 %19, label %.preheader17.lr.ph, label %._crit_edge23, !dbg !72

.preheader17.lr.ph:                               ; preds = %.preheader21
  %20 = icmp sgt i32 %iend, %ist, !dbg !74
  %21 = sext i32 %k to i64, !dbg !77
  %22 = mul i64 %4, %21, !dbg !77
  %23 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 0, i64 0, !dbg !81
  %24 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 1, i64 0, !dbg !82
  %25 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 1, i64 1, !dbg !83
  %26 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 0, i64 1, !dbg !83
  %27 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 1, i64 2, !dbg !84
  %28 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 0, i64 2, !dbg !84
  %29 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 1, i64 3, !dbg !85
  %30 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 0, i64 3, !dbg !85
  %31 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 1, i64 4, !dbg !86
  %32 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 0, i64 4, !dbg !86
  %33 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 2, i64 0, !dbg !87
  %34 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 2, i64 1, !dbg !88
  %35 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 2, i64 2, !dbg !89
  %36 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 2, i64 3, !dbg !90
  %37 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 2, i64 4, !dbg !91
  %38 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 3, i64 0, !dbg !92
  %39 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 3, i64 1, !dbg !93
  %40 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 3, i64 2, !dbg !94
  %41 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 3, i64 3, !dbg !95
  %42 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 3, i64 4, !dbg !96
  %43 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 4, i64 0, !dbg !97
  %44 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 4, i64 1, !dbg !98
  %45 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 4, i64 2, !dbg !99
  %46 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 4, i64 3, !dbg !100
  %47 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 4, i64 4, !dbg !101
  %48 = sext i32 %k to i64, !dbg !102
  %49 = mul i64 %4, %48, !dbg !102
  %50 = sext i32 %iend to i64
  %51 = sext i32 %jend to i64
  br label %.preheader17, !dbg !72

.loopexit25:                                      ; preds = %59
  %52 = trunc i64 %indvars.iv.next43 to i32, !dbg !65
  %53 = icmp sgt i32 %52, %ist, !dbg !65
  br i1 %53, label %.preheader24, label %._crit_edge30, !dbg !65

.preheader24:                                     ; preds = %.preheader24.lr.ph, %.loopexit25
  %indvars.iv42 = phi i64 [ %15, %.preheader24.lr.ph ], [ %indvars.iv.next43, %.loopexit25 ]
  %indvars.iv.next43 = add nsw i64 %indvars.iv42, -1, !dbg !65
  %.sum11 = add i64 %indvars.iv.next43, %17, !dbg !68
  %.sum13 = add i64 %.sum12, %indvars.iv.next43, !dbg !68
  %54 = getelementptr inbounds [5 x double]* %v, i64 %.sum13, i64 0, !dbg !68
  %55 = getelementptr inbounds [5 x double]* %v, i64 %.sum13, i64 1, !dbg !68
  %56 = getelementptr inbounds [5 x double]* %v, i64 %.sum13, i64 2, !dbg !68
  %57 = getelementptr inbounds [5 x double]* %v, i64 %.sum13, i64 3, !dbg !68
  %58 = getelementptr inbounds [5 x double]* %v, i64 %.sum13, i64 4, !dbg !68
  br label %59, !dbg !103

; <label>:59                                      ; preds = %59, %.preheader24
  %indvars.iv39 = phi i64 [ 0, %.preheader24 ], [ %indvars.iv.next40, %59 ]
  %60 = getelementptr inbounds [5 x [5 x double]]* %udz, i64 %.sum11, i64 0, i64 %indvars.iv39, !dbg !68
  %61 = load double* %60, align 8, !dbg !68, !tbaa !104
  %62 = load double* %54, align 8, !dbg !68, !tbaa !104
  %63 = fmul double %61, %62, !dbg !68
  %64 = getelementptr inbounds [5 x [5 x double]]* %udz, i64 %.sum11, i64 1, i64 %indvars.iv39, !dbg !68
  %65 = load double* %64, align 8, !dbg !68, !tbaa !104
  %66 = load double* %55, align 8, !dbg !68, !tbaa !104
  %67 = fmul double %65, %66, !dbg !68
  %68 = fadd double %63, %67, !dbg !68
  %69 = getelementptr inbounds [5 x [5 x double]]* %udz, i64 %.sum11, i64 2, i64 %indvars.iv39, !dbg !68
  %70 = load double* %69, align 8, !dbg !68, !tbaa !104
  %71 = load double* %56, align 8, !dbg !68, !tbaa !104
  %72 = fmul double %70, %71, !dbg !68
  %73 = fadd double %68, %72, !dbg !68
  %74 = getelementptr inbounds [5 x [5 x double]]* %udz, i64 %.sum11, i64 3, i64 %indvars.iv39, !dbg !68
  %75 = load double* %74, align 8, !dbg !68, !tbaa !104
  %76 = load double* %57, align 8, !dbg !68, !tbaa !104
  %77 = fmul double %75, %76, !dbg !68
  %78 = fadd double %73, %77, !dbg !68
  %79 = getelementptr inbounds [5 x [5 x double]]* %udz, i64 %.sum11, i64 4, i64 %indvars.iv39, !dbg !68
  %80 = load double* %79, align 8, !dbg !68, !tbaa !104
  %81 = load double* %58, align 8, !dbg !68, !tbaa !104
  %82 = fmul double %80, %81, !dbg !68
  %83 = fadd double %78, %82, !dbg !68
  %84 = fmul double %83, %omega, !dbg !68
  %85 = getelementptr inbounds [5 x double]* %tv, i64 %.sum11, i64 %indvars.iv39, !dbg !68
  store double %84, double* %85, align 8, !dbg !68, !tbaa !104
  %indvars.iv.next40 = add nuw nsw i64 %indvars.iv39, 1, !dbg !103
  %exitcond41 = icmp eq i64 %indvars.iv.next40, 5, !dbg !103
  br i1 %exitcond41, label %.loopexit25, label %59, !dbg !103

._crit_edge30:                                    ; preds = %.loopexit25, %.preheader27
  %86 = trunc i64 %indvars.iv44 to i32, !dbg !63
  %87 = icmp sgt i32 %86, %jst, !dbg !63
  br i1 %87, label %.preheader27, label %.preheader21, !dbg !63

.preheader17:                                     ; preds = %._crit_edge, %.preheader17.lr.ph
  %indvars.iv37.in = phi i64 [ %indvars.iv37, %._crit_edge ], [ %51, %.preheader17.lr.ph ]
  %indvars.iv37 = add i64 %indvars.iv37.in, -1, !dbg !72
  br i1 %20, label %.preheader.lr.ph, label %._crit_edge, !dbg !74

.preheader.lr.ph:                                 ; preds = %.preheader17
  %88 = mul nsw i64 %indvars.iv37, %8, !dbg !77
  %89 = add i64 %indvars.iv37.in, %22, !dbg !77
  %.sum6 = mul i64 %8, %89, !dbg !77
  %90 = add i64 %indvars.iv37, %22, !dbg !77
  %.sum9 = mul i64 %8, %90, !dbg !77
  %91 = mul nsw i64 %indvars.iv37, %8, !dbg !108
  %92 = mul nsw i64 %indvars.iv37, %8, !dbg !111
  %93 = add i64 %indvars.iv37, %49, !dbg !102
  %.sum1 = mul i64 %8, %93, !dbg !102
  br label %.preheader, !dbg !74

.preheader:                                       ; preds = %.preheader.lr.ph, %174
  %indvars.iv35 = phi i64 [ %50, %.preheader.lr.ph ], [ %indvars.iv.next36, %174 ]
  %indvars.iv.next36 = add nsw i64 %indvars.iv35, -1, !dbg !74
  %.sum4 = add i64 %indvars.iv.next36, %88, !dbg !77
  %.sum7 = add i64 %.sum6, %indvars.iv.next36, !dbg !77
  %94 = getelementptr inbounds [5 x double]* %v, i64 %.sum7, i64 0, !dbg !77
  %.sum10 = add i64 %.sum9, %indvars.iv35, !dbg !77
  %95 = getelementptr inbounds [5 x double]* %v, i64 %.sum10, i64 0, !dbg !77
  %96 = getelementptr inbounds [5 x double]* %v, i64 %.sum7, i64 1, !dbg !77
  %97 = getelementptr inbounds [5 x double]* %v, i64 %.sum10, i64 1, !dbg !77
  %98 = getelementptr inbounds [5 x double]* %v, i64 %.sum7, i64 2, !dbg !77
  %99 = getelementptr inbounds [5 x double]* %v, i64 %.sum10, i64 2, !dbg !77
  %100 = getelementptr inbounds [5 x double]* %v, i64 %.sum7, i64 3, !dbg !77
  %101 = getelementptr inbounds [5 x double]* %v, i64 %.sum10, i64 3, !dbg !77
  %102 = getelementptr inbounds [5 x double]* %v, i64 %.sum7, i64 4, !dbg !77
  %103 = getelementptr inbounds [5 x double]* %v, i64 %.sum10, i64 4, !dbg !77
  br label %104, !dbg !112

; <label>:104                                     ; preds = %104, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %104 ]
  %105 = getelementptr inbounds [5 x double]* %tv, i64 %.sum4, i64 %indvars.iv, !dbg !77
  %106 = load double* %105, align 8, !dbg !77, !tbaa !104
  %107 = getelementptr inbounds [5 x [5 x double]]* %udy, i64 %.sum4, i64 0, i64 %indvars.iv, !dbg !77
  %108 = load double* %107, align 8, !dbg !77, !tbaa !104
  %109 = load double* %94, align 8, !dbg !77, !tbaa !104
  %110 = fmul double %108, %109, !dbg !77
  %111 = getelementptr inbounds [5 x [5 x double]]* %udx, i64 %.sum4, i64 0, i64 %indvars.iv, !dbg !77
  %112 = load double* %111, align 8, !dbg !77, !tbaa !104
  %113 = load double* %95, align 8, !dbg !77, !tbaa !104
  %114 = fmul double %112, %113, !dbg !77
  %115 = fadd double %110, %114, !dbg !77
  %116 = getelementptr inbounds [5 x [5 x double]]* %udy, i64 %.sum4, i64 1, i64 %indvars.iv, !dbg !77
  %117 = load double* %116, align 8, !dbg !77, !tbaa !104
  %118 = load double* %96, align 8, !dbg !77, !tbaa !104
  %119 = fmul double %117, %118, !dbg !77
  %120 = fadd double %115, %119, !dbg !77
  %121 = getelementptr inbounds [5 x [5 x double]]* %udx, i64 %.sum4, i64 1, i64 %indvars.iv, !dbg !77
  %122 = load double* %121, align 8, !dbg !77, !tbaa !104
  %123 = load double* %97, align 8, !dbg !77, !tbaa !104
  %124 = fmul double %122, %123, !dbg !77
  %125 = fadd double %120, %124, !dbg !77
  %126 = getelementptr inbounds [5 x [5 x double]]* %udy, i64 %.sum4, i64 2, i64 %indvars.iv, !dbg !77
  %127 = load double* %126, align 8, !dbg !77, !tbaa !104
  %128 = load double* %98, align 8, !dbg !77, !tbaa !104
  %129 = fmul double %127, %128, !dbg !77
  %130 = fadd double %125, %129, !dbg !77
  %131 = getelementptr inbounds [5 x [5 x double]]* %udx, i64 %.sum4, i64 2, i64 %indvars.iv, !dbg !77
  %132 = load double* %131, align 8, !dbg !77, !tbaa !104
  %133 = load double* %99, align 8, !dbg !77, !tbaa !104
  %134 = fmul double %132, %133, !dbg !77
  %135 = fadd double %130, %134, !dbg !77
  %136 = getelementptr inbounds [5 x [5 x double]]* %udy, i64 %.sum4, i64 3, i64 %indvars.iv, !dbg !77
  %137 = load double* %136, align 8, !dbg !77, !tbaa !104
  %138 = load double* %100, align 8, !dbg !77, !tbaa !104
  %139 = fmul double %137, %138, !dbg !77
  %140 = fadd double %135, %139, !dbg !77
  %141 = getelementptr inbounds [5 x [5 x double]]* %udx, i64 %.sum4, i64 3, i64 %indvars.iv, !dbg !77
  %142 = load double* %141, align 8, !dbg !77, !tbaa !104
  %143 = load double* %101, align 8, !dbg !77, !tbaa !104
  %144 = fmul double %142, %143, !dbg !77
  %145 = fadd double %140, %144, !dbg !77
  %146 = getelementptr inbounds [5 x [5 x double]]* %udy, i64 %.sum4, i64 4, i64 %indvars.iv, !dbg !77
  %147 = load double* %146, align 8, !dbg !77, !tbaa !104
  %148 = load double* %102, align 8, !dbg !77, !tbaa !104
  %149 = fmul double %147, %148, !dbg !77
  %150 = fadd double %145, %149, !dbg !77
  %151 = getelementptr inbounds [5 x [5 x double]]* %udx, i64 %.sum4, i64 4, i64 %indvars.iv, !dbg !77
  %152 = load double* %151, align 8, !dbg !77, !tbaa !104
  %153 = load double* %103, align 8, !dbg !77, !tbaa !104
  %154 = fmul double %152, %153, !dbg !77
  %155 = fadd double %150, %154, !dbg !77
  %156 = fmul double %155, %omega, !dbg !77
  %157 = fadd double %106, %156, !dbg !77
  store double %157, double* %105, align 8, !dbg !77, !tbaa !104
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !112
  %exitcond = icmp eq i64 %indvars.iv.next, 5, !dbg !112
  br i1 %exitcond, label %.loopexit, label %104, !dbg !112

.loopexit:                                        ; preds = %104
  %.sum3 = add i64 %indvars.iv.next36, %91, !dbg !108
  br label %158, !dbg !113

; <label>:158                                     ; preds = %158, %.loopexit
  %indvars.iv32 = phi i64 [ 0, %.loopexit ], [ %indvars.iv.next33, %158 ]
  %159 = getelementptr inbounds [5 x [5 x double]]* %d, i64 %.sum3, i64 0, i64 %indvars.iv32, !dbg !108
  %160 = load double* %159, align 8, !dbg !108, !tbaa !104
  %161 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 %indvars.iv32, i64 0, !dbg !108
  store double %160, double* %161, align 8, !dbg !108, !tbaa !104
  %162 = getelementptr inbounds [5 x [5 x double]]* %d, i64 %.sum3, i64 1, i64 %indvars.iv32, !dbg !114
  %163 = load double* %162, align 8, !dbg !114, !tbaa !104
  %164 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 %indvars.iv32, i64 1, !dbg !114
  store double %163, double* %164, align 8, !dbg !114, !tbaa !104
  %165 = getelementptr inbounds [5 x [5 x double]]* %d, i64 %.sum3, i64 2, i64 %indvars.iv32, !dbg !115
  %166 = load double* %165, align 8, !dbg !115, !tbaa !104
  %167 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 %indvars.iv32, i64 2, !dbg !115
  store double %166, double* %167, align 8, !dbg !115, !tbaa !104
  %168 = getelementptr inbounds [5 x [5 x double]]* %d, i64 %.sum3, i64 3, i64 %indvars.iv32, !dbg !116
  %169 = load double* %168, align 8, !dbg !116, !tbaa !104
  %170 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 %indvars.iv32, i64 3, !dbg !116
  store double %169, double* %170, align 8, !dbg !116, !tbaa !104
  %171 = getelementptr inbounds [5 x [5 x double]]* %d, i64 %.sum3, i64 4, i64 %indvars.iv32, !dbg !117
  %172 = load double* %171, align 8, !dbg !117, !tbaa !104
  %173 = getelementptr inbounds [5 x [5 x double]]* %tmat, i64 0, i64 %indvars.iv32, i64 4, !dbg !117
  store double %172, double* %173, align 8, !dbg !117, !tbaa !104
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1, !dbg !113
  %exitcond34 = icmp eq i64 %indvars.iv.next33, 5, !dbg !113
  br i1 %exitcond34, label %174, label %158, !dbg !113

; <label>:174                                     ; preds = %158
  %175 = load double* %23, align 16, !dbg !81, !tbaa !104
  %176 = fdiv double 1.000000e+00, %175, !dbg !81
  call void @llvm.dbg.value(metadata !{double %176}, i64 0, metadata !46), !dbg !81
  %177 = load double* %24, align 8, !dbg !82, !tbaa !104
  %178 = fmul double %176, %177, !dbg !82
  call void @llvm.dbg.value(metadata !{double %178}, i64 0, metadata !45), !dbg !82
  %179 = load double* %25, align 8, !dbg !83, !tbaa !104
  %180 = load double* %26, align 8, !dbg !83, !tbaa !104
  %181 = fmul double %178, %180, !dbg !83
  %182 = fsub double %179, %181, !dbg !83
  store double %182, double* %25, align 8, !dbg !83, !tbaa !104
  %183 = load double* %27, align 8, !dbg !84, !tbaa !104
  %184 = load double* %28, align 16, !dbg !84, !tbaa !104
  %185 = fmul double %178, %184, !dbg !84
  %186 = fsub double %183, %185, !dbg !84
  store double %186, double* %27, align 8, !dbg !84, !tbaa !104
  %187 = load double* %29, align 8, !dbg !85, !tbaa !104
  %188 = load double* %30, align 8, !dbg !85, !tbaa !104
  %189 = fmul double %178, %188, !dbg !85
  %190 = fsub double %187, %189, !dbg !85
  store double %190, double* %29, align 8, !dbg !85, !tbaa !104
  %191 = load double* %31, align 8, !dbg !86, !tbaa !104
  %192 = load double* %32, align 16, !dbg !86, !tbaa !104
  %193 = fmul double %178, %192, !dbg !86
  %194 = fsub double %191, %193, !dbg !86
  store double %194, double* %31, align 8, !dbg !86, !tbaa !104
  %.sum = add i64 %indvars.iv.next36, %92, !dbg !111
  %195 = getelementptr inbounds [5 x double]* %tv, i64 %.sum, i64 1, !dbg !111
  %196 = load double* %195, align 8, !dbg !111, !tbaa !104
  %197 = getelementptr inbounds [5 x double]* %tv, i64 %.sum, i64 0, !dbg !111
  %198 = load double* %197, align 8, !dbg !111, !tbaa !104
  %199 = fmul double %178, %198, !dbg !111
  %200 = fsub double %196, %199, !dbg !111
  store double %200, double* %195, align 8, !dbg !111, !tbaa !104
  %201 = load double* %33, align 16, !dbg !87, !tbaa !104
  %202 = fmul double %176, %201, !dbg !87
  call void @llvm.dbg.value(metadata !{double %202}, i64 0, metadata !45), !dbg !87
  %203 = load double* %34, align 8, !dbg !88, !tbaa !104
  %204 = load double* %26, align 8, !dbg !88, !tbaa !104
  %205 = fmul double %202, %204, !dbg !88
  %206 = fsub double %203, %205, !dbg !88
  store double %206, double* %34, align 8, !dbg !88, !tbaa !104
  %207 = load double* %35, align 16, !dbg !89, !tbaa !104
  %208 = load double* %28, align 16, !dbg !89, !tbaa !104
  %209 = fmul double %202, %208, !dbg !89
  %210 = fsub double %207, %209, !dbg !89
  store double %210, double* %35, align 16, !dbg !89, !tbaa !104
  %211 = load double* %36, align 8, !dbg !90, !tbaa !104
  %212 = load double* %30, align 8, !dbg !90, !tbaa !104
  %213 = fmul double %202, %212, !dbg !90
  %214 = fsub double %211, %213, !dbg !90
  store double %214, double* %36, align 8, !dbg !90, !tbaa !104
  %215 = load double* %37, align 16, !dbg !91, !tbaa !104
  %216 = load double* %32, align 16, !dbg !91, !tbaa !104
  %217 = fmul double %202, %216, !dbg !91
  %218 = fsub double %215, %217, !dbg !91
  store double %218, double* %37, align 16, !dbg !91, !tbaa !104
  %219 = getelementptr inbounds [5 x double]* %tv, i64 %.sum, i64 2, !dbg !118
  %220 = load double* %219, align 8, !dbg !118, !tbaa !104
  %221 = load double* %197, align 8, !dbg !118, !tbaa !104
  %222 = fmul double %202, %221, !dbg !118
  %223 = fsub double %220, %222, !dbg !118
  store double %223, double* %219, align 8, !dbg !118, !tbaa !104
  %224 = load double* %38, align 8, !dbg !92, !tbaa !104
  %225 = fmul double %176, %224, !dbg !92
  call void @llvm.dbg.value(metadata !{double %225}, i64 0, metadata !45), !dbg !92
  %226 = load double* %39, align 8, !dbg !93, !tbaa !104
  %227 = load double* %26, align 8, !dbg !93, !tbaa !104
  %228 = fmul double %225, %227, !dbg !93
  %229 = fsub double %226, %228, !dbg !93
  store double %229, double* %39, align 8, !dbg !93, !tbaa !104
  %230 = load double* %40, align 8, !dbg !94, !tbaa !104
  %231 = load double* %28, align 16, !dbg !94, !tbaa !104
  %232 = fmul double %225, %231, !dbg !94
  %233 = fsub double %230, %232, !dbg !94
  store double %233, double* %40, align 8, !dbg !94, !tbaa !104
  %234 = load double* %41, align 8, !dbg !95, !tbaa !104
  %235 = load double* %30, align 8, !dbg !95, !tbaa !104
  %236 = fmul double %225, %235, !dbg !95
  %237 = fsub double %234, %236, !dbg !95
  store double %237, double* %41, align 8, !dbg !95, !tbaa !104
  %238 = load double* %42, align 8, !dbg !96, !tbaa !104
  %239 = load double* %32, align 16, !dbg !96, !tbaa !104
  %240 = fmul double %225, %239, !dbg !96
  %241 = fsub double %238, %240, !dbg !96
  store double %241, double* %42, align 8, !dbg !96, !tbaa !104
  %242 = getelementptr inbounds [5 x double]* %tv, i64 %.sum, i64 3, !dbg !119
  %243 = load double* %242, align 8, !dbg !119, !tbaa !104
  %244 = load double* %197, align 8, !dbg !119, !tbaa !104
  %245 = fmul double %225, %244, !dbg !119
  %246 = fsub double %243, %245, !dbg !119
  store double %246, double* %242, align 8, !dbg !119, !tbaa !104
  %247 = load double* %43, align 16, !dbg !97, !tbaa !104
  %248 = fmul double %176, %247, !dbg !97
  call void @llvm.dbg.value(metadata !{double %248}, i64 0, metadata !45), !dbg !97
  %249 = load double* %44, align 8, !dbg !98, !tbaa !104
  %250 = load double* %26, align 8, !dbg !98, !tbaa !104
  %251 = fmul double %248, %250, !dbg !98
  %252 = fsub double %249, %251, !dbg !98
  store double %252, double* %44, align 8, !dbg !98, !tbaa !104
  %253 = load double* %45, align 16, !dbg !99, !tbaa !104
  %254 = load double* %28, align 16, !dbg !99, !tbaa !104
  %255 = fmul double %248, %254, !dbg !99
  %256 = fsub double %253, %255, !dbg !99
  store double %256, double* %45, align 16, !dbg !99, !tbaa !104
  %257 = load double* %46, align 8, !dbg !100, !tbaa !104
  %258 = load double* %30, align 8, !dbg !100, !tbaa !104
  %259 = fmul double %248, %258, !dbg !100
  %260 = fsub double %257, %259, !dbg !100
  store double %260, double* %46, align 8, !dbg !100, !tbaa !104
  %261 = load double* %47, align 16, !dbg !101, !tbaa !104
  %262 = load double* %32, align 16, !dbg !101, !tbaa !104
  %263 = fmul double %248, %262, !dbg !101
  %264 = fsub double %261, %263, !dbg !101
  store double %264, double* %47, align 16, !dbg !101, !tbaa !104
  %265 = getelementptr inbounds [5 x double]* %tv, i64 %.sum, i64 4, !dbg !120
  %266 = load double* %265, align 8, !dbg !120, !tbaa !104
  %267 = load double* %197, align 8, !dbg !120, !tbaa !104
  %268 = fmul double %248, %267, !dbg !120
  %269 = fsub double %266, %268, !dbg !120
  store double %269, double* %265, align 8, !dbg !120, !tbaa !104
  %270 = load double* %25, align 8, !dbg !121, !tbaa !104
  %271 = fdiv double 1.000000e+00, %270, !dbg !121
  call void @llvm.dbg.value(metadata !{double %271}, i64 0, metadata !46), !dbg !121
  %272 = load double* %34, align 8, !dbg !122, !tbaa !104
  %273 = fmul double %271, %272, !dbg !122
  call void @llvm.dbg.value(metadata !{double %273}, i64 0, metadata !45), !dbg !122
  %274 = load double* %35, align 16, !dbg !123, !tbaa !104
  %275 = load double* %27, align 8, !dbg !123, !tbaa !104
  %276 = fmul double %273, %275, !dbg !123
  %277 = fsub double %274, %276, !dbg !123
  store double %277, double* %35, align 16, !dbg !123, !tbaa !104
  %278 = load double* %36, align 8, !dbg !124, !tbaa !104
  %279 = load double* %29, align 8, !dbg !124, !tbaa !104
  %280 = fmul double %273, %279, !dbg !124
  %281 = fsub double %278, %280, !dbg !124
  store double %281, double* %36, align 8, !dbg !124, !tbaa !104
  %282 = load double* %37, align 16, !dbg !125, !tbaa !104
  %283 = load double* %31, align 8, !dbg !125, !tbaa !104
  %284 = fmul double %273, %283, !dbg !125
  %285 = fsub double %282, %284, !dbg !125
  store double %285, double* %37, align 16, !dbg !125, !tbaa !104
  %286 = load double* %219, align 8, !dbg !126, !tbaa !104
  %287 = load double* %195, align 8, !dbg !126, !tbaa !104
  %288 = fmul double %273, %287, !dbg !126
  %289 = fsub double %286, %288, !dbg !126
  store double %289, double* %219, align 8, !dbg !126, !tbaa !104
  %290 = load double* %39, align 8, !dbg !127, !tbaa !104
  %291 = fmul double %271, %290, !dbg !127
  call void @llvm.dbg.value(metadata !{double %291}, i64 0, metadata !45), !dbg !127
  %292 = load double* %40, align 8, !dbg !128, !tbaa !104
  %293 = load double* %27, align 8, !dbg !128, !tbaa !104
  %294 = fmul double %291, %293, !dbg !128
  %295 = fsub double %292, %294, !dbg !128
  store double %295, double* %40, align 8, !dbg !128, !tbaa !104
  %296 = load double* %41, align 8, !dbg !129, !tbaa !104
  %297 = load double* %29, align 8, !dbg !129, !tbaa !104
  %298 = fmul double %291, %297, !dbg !129
  %299 = fsub double %296, %298, !dbg !129
  store double %299, double* %41, align 8, !dbg !129, !tbaa !104
  %300 = load double* %42, align 8, !dbg !130, !tbaa !104
  %301 = load double* %31, align 8, !dbg !130, !tbaa !104
  %302 = fmul double %291, %301, !dbg !130
  %303 = fsub double %300, %302, !dbg !130
  store double %303, double* %42, align 8, !dbg !130, !tbaa !104
  %304 = load double* %242, align 8, !dbg !131, !tbaa !104
  %305 = load double* %195, align 8, !dbg !131, !tbaa !104
  %306 = fmul double %291, %305, !dbg !131
  %307 = fsub double %304, %306, !dbg !131
  store double %307, double* %242, align 8, !dbg !131, !tbaa !104
  %308 = load double* %44, align 8, !dbg !132, !tbaa !104
  %309 = fmul double %271, %308, !dbg !132
  call void @llvm.dbg.value(metadata !{double %309}, i64 0, metadata !45), !dbg !132
  %310 = load double* %45, align 16, !dbg !133, !tbaa !104
  %311 = load double* %27, align 8, !dbg !133, !tbaa !104
  %312 = fmul double %309, %311, !dbg !133
  %313 = fsub double %310, %312, !dbg !133
  store double %313, double* %45, align 16, !dbg !133, !tbaa !104
  %314 = load double* %46, align 8, !dbg !134, !tbaa !104
  %315 = load double* %29, align 8, !dbg !134, !tbaa !104
  %316 = fmul double %309, %315, !dbg !134
  %317 = fsub double %314, %316, !dbg !134
  store double %317, double* %46, align 8, !dbg !134, !tbaa !104
  %318 = load double* %47, align 16, !dbg !135, !tbaa !104
  %319 = load double* %31, align 8, !dbg !135, !tbaa !104
  %320 = fmul double %309, %319, !dbg !135
  %321 = fsub double %318, %320, !dbg !135
  store double %321, double* %47, align 16, !dbg !135, !tbaa !104
  %322 = load double* %265, align 8, !dbg !136, !tbaa !104
  %323 = load double* %195, align 8, !dbg !136, !tbaa !104
  %324 = fmul double %309, %323, !dbg !136
  %325 = fsub double %322, %324, !dbg !136
  store double %325, double* %265, align 8, !dbg !136, !tbaa !104
  %326 = load double* %35, align 16, !dbg !137, !tbaa !104
  %327 = fdiv double 1.000000e+00, %326, !dbg !137
  call void @llvm.dbg.value(metadata !{double %327}, i64 0, metadata !46), !dbg !137
  %328 = load double* %40, align 8, !dbg !138, !tbaa !104
  %329 = fmul double %327, %328, !dbg !138
  call void @llvm.dbg.value(metadata !{double %329}, i64 0, metadata !45), !dbg !138
  %330 = load double* %41, align 8, !dbg !139, !tbaa !104
  %331 = load double* %36, align 8, !dbg !139, !tbaa !104
  %332 = fmul double %329, %331, !dbg !139
  %333 = fsub double %330, %332, !dbg !139
  store double %333, double* %41, align 8, !dbg !139, !tbaa !104
  %334 = load double* %42, align 8, !dbg !140, !tbaa !104
  %335 = load double* %37, align 16, !dbg !140, !tbaa !104
  %336 = fmul double %329, %335, !dbg !140
  %337 = fsub double %334, %336, !dbg !140
  store double %337, double* %42, align 8, !dbg !140, !tbaa !104
  %338 = load double* %242, align 8, !dbg !141, !tbaa !104
  %339 = load double* %219, align 8, !dbg !141, !tbaa !104
  %340 = fmul double %329, %339, !dbg !141
  %341 = fsub double %338, %340, !dbg !141
  store double %341, double* %242, align 8, !dbg !141, !tbaa !104
  %342 = load double* %45, align 16, !dbg !142, !tbaa !104
  %343 = fmul double %327, %342, !dbg !142
  call void @llvm.dbg.value(metadata !{double %343}, i64 0, metadata !45), !dbg !142
  %344 = load double* %46, align 8, !dbg !143, !tbaa !104
  %345 = load double* %36, align 8, !dbg !143, !tbaa !104
  %346 = fmul double %343, %345, !dbg !143
  %347 = fsub double %344, %346, !dbg !143
  store double %347, double* %46, align 8, !dbg !143, !tbaa !104
  %348 = load double* %47, align 16, !dbg !144, !tbaa !104
  %349 = load double* %37, align 16, !dbg !144, !tbaa !104
  %350 = fmul double %343, %349, !dbg !144
  %351 = fsub double %348, %350, !dbg !144
  store double %351, double* %47, align 16, !dbg !144, !tbaa !104
  %352 = load double* %265, align 8, !dbg !145, !tbaa !104
  %353 = load double* %219, align 8, !dbg !145, !tbaa !104
  %354 = fmul double %343, %353, !dbg !145
  %355 = fsub double %352, %354, !dbg !145
  store double %355, double* %265, align 8, !dbg !145, !tbaa !104
  %356 = load double* %41, align 8, !dbg !146, !tbaa !104
  %357 = fdiv double 1.000000e+00, %356, !dbg !146
  call void @llvm.dbg.value(metadata !{double %357}, i64 0, metadata !46), !dbg !146
  %358 = load double* %46, align 8, !dbg !147, !tbaa !104
  %359 = fmul double %357, %358, !dbg !147
  call void @llvm.dbg.value(metadata !{double %359}, i64 0, metadata !45), !dbg !147
  %360 = load double* %47, align 16, !dbg !148, !tbaa !104
  %361 = load double* %42, align 8, !dbg !148, !tbaa !104
  %362 = fmul double %359, %361, !dbg !148
  %363 = fsub double %360, %362, !dbg !148
  store double %363, double* %47, align 16, !dbg !148, !tbaa !104
  %364 = load double* %265, align 8, !dbg !149, !tbaa !104
  %365 = load double* %242, align 8, !dbg !149, !tbaa !104
  %366 = fmul double %359, %365, !dbg !149
  %367 = fsub double %364, %366, !dbg !149
  %368 = fdiv double %367, %363, !dbg !150
  store double %368, double* %265, align 8, !dbg !150, !tbaa !104
  %369 = load double* %242, align 8, !dbg !151, !tbaa !104
  %370 = load double* %42, align 8, !dbg !151, !tbaa !104
  %371 = fmul double %368, %370, !dbg !151
  %372 = fsub double %369, %371, !dbg !151
  %373 = load double* %41, align 8, !dbg !152, !tbaa !104
  %374 = fdiv double %372, %373, !dbg !152
  store double %374, double* %242, align 8, !dbg !152, !tbaa !104
  %375 = load double* %219, align 8, !dbg !153, !tbaa !104
  %376 = load double* %36, align 8, !dbg !153, !tbaa !104
  %377 = fmul double %374, %376, !dbg !153
  %378 = fsub double %375, %377, !dbg !153
  %379 = load double* %37, align 16, !dbg !153, !tbaa !104
  %380 = load double* %265, align 8, !dbg !153, !tbaa !104
  %381 = fmul double %379, %380, !dbg !153
  %382 = fsub double %378, %381, !dbg !153
  %383 = load double* %35, align 16, !dbg !154, !tbaa !104
  %384 = fdiv double %382, %383, !dbg !154
  store double %384, double* %219, align 8, !dbg !154, !tbaa !104
  %385 = load double* %195, align 8, !dbg !155, !tbaa !104
  %386 = load double* %27, align 8, !dbg !155, !tbaa !104
  %387 = fmul double %384, %386, !dbg !155
  %388 = fsub double %385, %387, !dbg !155
  %389 = load double* %29, align 8, !dbg !155, !tbaa !104
  %390 = load double* %242, align 8, !dbg !155, !tbaa !104
  %391 = fmul double %389, %390, !dbg !155
  %392 = fsub double %388, %391, !dbg !155
  %393 = load double* %31, align 8, !dbg !155, !tbaa !104
  %394 = load double* %265, align 8, !dbg !155, !tbaa !104
  %395 = fmul double %393, %394, !dbg !155
  %396 = fsub double %392, %395, !dbg !155
  %397 = load double* %25, align 8, !dbg !156, !tbaa !104
  %398 = fdiv double %396, %397, !dbg !156
  store double %398, double* %195, align 8, !dbg !156, !tbaa !104
  %399 = load double* %197, align 8, !dbg !157, !tbaa !104
  %400 = load double* %26, align 8, !dbg !157, !tbaa !104
  %401 = fmul double %398, %400, !dbg !157
  %402 = fsub double %399, %401, !dbg !157
  %403 = load double* %28, align 16, !dbg !157, !tbaa !104
  %404 = load double* %219, align 8, !dbg !157, !tbaa !104
  %405 = fmul double %403, %404, !dbg !157
  %406 = fsub double %402, %405, !dbg !157
  %407 = load double* %30, align 8, !dbg !157, !tbaa !104
  %408 = load double* %242, align 8, !dbg !157, !tbaa !104
  %409 = fmul double %407, %408, !dbg !157
  %410 = fsub double %406, %409, !dbg !157
  %411 = load double* %32, align 16, !dbg !157, !tbaa !104
  %412 = load double* %265, align 8, !dbg !157, !tbaa !104
  %413 = fmul double %411, %412, !dbg !157
  %414 = fsub double %410, %413, !dbg !157
  %415 = load double* %23, align 16, !dbg !158, !tbaa !104
  %416 = fdiv double %414, %415, !dbg !158
  store double %416, double* %197, align 8, !dbg !158, !tbaa !104
  %.sum2 = add i64 %.sum1, %indvars.iv.next36, !dbg !102
  %417 = getelementptr inbounds [5 x double]* %v, i64 %.sum2, i64 0, !dbg !102
  %418 = load double* %417, align 8, !dbg !102, !tbaa !104
  %419 = fsub double %418, %416, !dbg !102
  store double %419, double* %417, align 8, !dbg !102, !tbaa !104
  %420 = getelementptr inbounds [5 x double]* %v, i64 %.sum2, i64 1, !dbg !159
  %421 = load double* %420, align 8, !dbg !159, !tbaa !104
  %422 = load double* %195, align 8, !dbg !159, !tbaa !104
  %423 = fsub double %421, %422, !dbg !159
  store double %423, double* %420, align 8, !dbg !159, !tbaa !104
  %424 = getelementptr inbounds [5 x double]* %v, i64 %.sum2, i64 2, !dbg !160
  %425 = load double* %424, align 8, !dbg !160, !tbaa !104
  %426 = load double* %219, align 8, !dbg !160, !tbaa !104
  %427 = fsub double %425, %426, !dbg !160
  store double %427, double* %424, align 8, !dbg !160, !tbaa !104
  %428 = getelementptr inbounds [5 x double]* %v, i64 %.sum2, i64 3, !dbg !161
  %429 = load double* %428, align 8, !dbg !161, !tbaa !104
  %430 = load double* %242, align 8, !dbg !161, !tbaa !104
  %431 = fsub double %429, %430, !dbg !161
  store double %431, double* %428, align 8, !dbg !161, !tbaa !104
  %432 = getelementptr inbounds [5 x double]* %v, i64 %.sum2, i64 4, !dbg !162
  %433 = load double* %432, align 8, !dbg !162, !tbaa !104
  %434 = load double* %265, align 8, !dbg !162, !tbaa !104
  %435 = fsub double %433, %434, !dbg !162
  store double %435, double* %432, align 8, !dbg !162, !tbaa !104
  %436 = trunc i64 %indvars.iv.next36 to i32, !dbg !74
  %437 = icmp sgt i32 %436, %ist, !dbg !74
  br i1 %437, label %.preheader, label %._crit_edge, !dbg !74

._crit_edge:                                      ; preds = %174, %.preheader17
  %438 = trunc i64 %indvars.iv37 to i32, !dbg !72
  %439 = icmp sgt i32 %438, %jst, !dbg !72
  br i1 %439, label %.preheader17, label %._crit_edge23, !dbg !72

._crit_edge23:                                    ; preds = %._crit_edge, %.preheader21
  call void @llvm.lifetime.end(i64 200, i8* %9) #2, !dbg !163
  ret void, !dbg !163
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!50, !51}
!llvm.ident = !{!52}

!0 = metadata !{i32 786449, metadata !1, i32 12, metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)", i1 true, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c] [DW_LANG_C99]
!1 = metadata !{metadata !"buts.c", metadata !"/home/azguolu/ARAT-0.1/llvm-tracer/example/lu"}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4}
!4 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"buts", metadata !"buts", metadata !"", i32 45, metadata !6, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32, i32, i32, i32, i32, i32, i32, double, [5 x double]*, [5 x double]*, [5 x [5 x double]]*, [5 x [5 x double]]*, [5 x [5 x double]]*, [5 x [5 x double]]*, i32, i32, i32, i32, i32, i32)* @buts, null, null, metadata !21, i32 54} ; [ DW_TAG_subprogram ] [line 45] [def] [scope 54] [buts]
!5 = metadata !{i32 786473, metadata !1}          ; [ DW_TAG_file_type ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!6 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !7, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!7 = metadata !{null, metadata !8, metadata !8, metadata !8, metadata !8, metadata !8, metadata !8, metadata !8, metadata !9, metadata !10, metadata !15, metadata !18, metadata !18, metadata !18, metadata !18, metadata !8, metadata !8, metadata !8, metadata !8, metadata !8, metadata !8}
!8 = metadata !{i32 786468, null, null, metadata !"int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!9 = metadata !{i32 786468, null, null, metadata !"double", i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ] [double] [line 0, size 64, align 64, offset 0, enc DW_ATE_float]
!10 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !11} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!11 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 0, i64 64, i32 0, i32 0, metadata !9, metadata !12, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 0, align 64, offset 0] [from double]
!12 = metadata !{metadata !13, metadata !13, metadata !14}
!13 = metadata !{i32 786465, i64 0, i64 -1}       ; [ DW_TAG_subrange_type ] [unbounded]
!14 = metadata !{i32 786465, i64 0, i64 5}        ; [ DW_TAG_subrange_type ] [0, 4]
!15 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !16} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!16 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 0, i64 64, i32 0, i32 0, metadata !9, metadata !17, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 0, align 64, offset 0] [from double]
!17 = metadata !{metadata !13, metadata !14}
!18 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !19} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!19 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 0, i64 64, i32 0, i32 0, metadata !9, metadata !20, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 0, align 64, offset 0] [from double]
!20 = metadata !{metadata !13, metadata !14, metadata !14}
!21 = metadata !{metadata !22, metadata !23, metadata !24, metadata !25, metadata !26, metadata !27, metadata !28, metadata !29, metadata !30, metadata !31, metadata !32, metadata !33, metadata !34, metadata !35, metadata !36, metadata !37, metadata !38, metadata !39, metadata !40, metadata !41, metadata !42, metadata !43, metadata !44, metadata !45, metadata !46, metadata !47}
!22 = metadata !{i32 786689, metadata !4, metadata !"ldmx", metadata !5, i32 16777261, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ldmx] [line 45]
!23 = metadata !{i32 786689, metadata !4, metadata !"ldmy", metadata !5, i32 33554477, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ldmy] [line 45]
!24 = metadata !{i32 786689, metadata !4, metadata !"ldmz", metadata !5, i32 50331693, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ldmz] [line 45]
!25 = metadata !{i32 786689, metadata !4, metadata !"nx", metadata !5, i32 67108909, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [nx] [line 45]
!26 = metadata !{i32 786689, metadata !4, metadata !"ny", metadata !5, i32 83886125, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ny] [line 45]
!27 = metadata !{i32 786689, metadata !4, metadata !"nz", metadata !5, i32 100663341, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [nz] [line 45]
!28 = metadata !{i32 786689, metadata !4, metadata !"k", metadata !5, i32 117440557, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [k] [line 45]
!29 = metadata !{i32 786689, metadata !4, metadata !"omega", metadata !5, i32 134217774, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [omega] [line 46]
!30 = metadata !{i32 786689, metadata !4, metadata !"v", metadata !5, i32 150994991, metadata !10, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [v] [line 47]
!31 = metadata !{i32 786689, metadata !4, metadata !"tv", metadata !5, i32 167772208, metadata !15, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [tv] [line 48]
!32 = metadata !{i32 786689, metadata !4, metadata !"d", metadata !5, i32 184549425, metadata !18, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [d] [line 49]
!33 = metadata !{i32 786689, metadata !4, metadata !"udx", metadata !5, i32 201326642, metadata !18, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [udx] [line 50]
!34 = metadata !{i32 786689, metadata !4, metadata !"udy", metadata !5, i32 218103859, metadata !18, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [udy] [line 51]
!35 = metadata !{i32 786689, metadata !4, metadata !"udz", metadata !5, i32 234881076, metadata !18, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [udz] [line 52]
!36 = metadata !{i32 786689, metadata !4, metadata !"ist", metadata !5, i32 251658293, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ist] [line 53]
!37 = metadata !{i32 786689, metadata !4, metadata !"iend", metadata !5, i32 268435509, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [iend] [line 53]
!38 = metadata !{i32 786689, metadata !4, metadata !"jst", metadata !5, i32 285212725, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [jst] [line 53]
!39 = metadata !{i32 786689, metadata !4, metadata !"jend", metadata !5, i32 301989941, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [jend] [line 53]
!40 = metadata !{i32 786689, metadata !4, metadata !"nx0", metadata !5, i32 318767157, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [nx0] [line 53]
!41 = metadata !{i32 786689, metadata !4, metadata !"ny0", metadata !5, i32 335544373, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ny0] [line 53]
!42 = metadata !{i32 786688, metadata !4, metadata !"i", metadata !5, i32 58, metadata !8, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 58]
!43 = metadata !{i32 786688, metadata !4, metadata !"j", metadata !5, i32 58, metadata !8, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [j] [line 58]
!44 = metadata !{i32 786688, metadata !4, metadata !"m", metadata !5, i32 58, metadata !8, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [m] [line 58]
!45 = metadata !{i32 786688, metadata !4, metadata !"tmp", metadata !5, i32 59, metadata !9, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [tmp] [line 59]
!46 = metadata !{i32 786688, metadata !4, metadata !"tmp1", metadata !5, i32 59, metadata !9, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [tmp1] [line 59]
!47 = metadata !{i32 786688, metadata !4, metadata !"tmat", metadata !5, i32 60, metadata !48, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [tmat] [line 60]
!48 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 1600, i64 64, i32 0, i32 0, metadata !9, metadata !49, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 1600, align 64, offset 0] [from double]
!49 = metadata !{metadata !14, metadata !14}
!50 = metadata !{i32 2, metadata !"Dwarf Version", i32 4}
!51 = metadata !{i32 1, metadata !"Debug Info Version", i32 1}
!52 = metadata !{metadata !"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"}
!53 = metadata !{i32 45, i32 0, metadata !4, null}
!54 = metadata !{i32 46, i32 0, metadata !4, null}
!55 = metadata !{i32 47, i32 0, metadata !4, null}
!56 = metadata !{i32 48, i32 0, metadata !4, null}
!57 = metadata !{i32 49, i32 0, metadata !4, null}
!58 = metadata !{i32 50, i32 0, metadata !4, null}
!59 = metadata !{i32 51, i32 0, metadata !4, null}
!60 = metadata !{i32 52, i32 0, metadata !4, null}
!61 = metadata !{i32 53, i32 0, metadata !4, null}
!62 = metadata !{i32 60, i32 0, metadata !4, null}
!63 = metadata !{i32 62, i32 0, metadata !64, null}
!64 = metadata !{i32 786443, metadata !1, metadata !4, i32 62, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!65 = metadata !{i32 63, i32 0, metadata !66, null}
!66 = metadata !{i32 786443, metadata !1, metadata !67, i32 63, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!67 = metadata !{i32 786443, metadata !1, metadata !64, i32 62, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!68 = metadata !{i32 65, i32 0, metadata !69, null}
!69 = metadata !{i32 786443, metadata !1, metadata !70, i32 64, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!70 = metadata !{i32 786443, metadata !1, metadata !71, i32 64, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!71 = metadata !{i32 786443, metadata !1, metadata !66, i32 63, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!72 = metadata !{i32 75, i32 0, metadata !73, null}
!73 = metadata !{i32 786443, metadata !1, metadata !4, i32 75, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!74 = metadata !{i32 76, i32 0, metadata !75, null}
!75 = metadata !{i32 786443, metadata !1, metadata !76, i32 76, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!76 = metadata !{i32 786443, metadata !1, metadata !73, i32 75, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!77 = metadata !{i32 78, i32 0, metadata !78, null}
!78 = metadata !{i32 786443, metadata !1, metadata !79, i32 77, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!79 = metadata !{i32 786443, metadata !1, metadata !80, i32 77, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!80 = metadata !{i32 786443, metadata !1, metadata !75, i32 76, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!81 = metadata !{i32 102, i32 0, metadata !80, null}
!82 = metadata !{i32 103, i32 0, metadata !80, null}
!83 = metadata !{i32 104, i32 0, metadata !80, null}
!84 = metadata !{i32 105, i32 0, metadata !80, null}
!85 = metadata !{i32 106, i32 0, metadata !80, null}
!86 = metadata !{i32 107, i32 0, metadata !80, null}
!87 = metadata !{i32 110, i32 0, metadata !80, null}
!88 = metadata !{i32 111, i32 0, metadata !80, null}
!89 = metadata !{i32 112, i32 0, metadata !80, null}
!90 = metadata !{i32 113, i32 0, metadata !80, null}
!91 = metadata !{i32 114, i32 0, metadata !80, null}
!92 = metadata !{i32 117, i32 0, metadata !80, null}
!93 = metadata !{i32 118, i32 0, metadata !80, null}
!94 = metadata !{i32 119, i32 0, metadata !80, null}
!95 = metadata !{i32 120, i32 0, metadata !80, null}
!96 = metadata !{i32 121, i32 0, metadata !80, null}
!97 = metadata !{i32 124, i32 0, metadata !80, null}
!98 = metadata !{i32 125, i32 0, metadata !80, null}
!99 = metadata !{i32 126, i32 0, metadata !80, null}
!100 = metadata !{i32 127, i32 0, metadata !80, null}
!101 = metadata !{i32 128, i32 0, metadata !80, null}
!102 = metadata !{i32 192, i32 0, metadata !80, null}
!103 = metadata !{i32 64, i32 0, metadata !70, null}
!104 = metadata !{metadata !105, metadata !105, i64 0}
!105 = metadata !{metadata !"double", metadata !106, i64 0}
!106 = metadata !{metadata !"omnipotent char", metadata !107, i64 0}
!107 = metadata !{metadata !"Simple C/C++ TBAA"}
!108 = metadata !{i32 95, i32 0, metadata !109, null}
!109 = metadata !{i32 786443, metadata !1, metadata !110, i32 94, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!110 = metadata !{i32 786443, metadata !1, metadata !80, i32 94, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/azguolu/ARAT-0.1/llvm-tracer/example/lu/buts.c]
!111 = metadata !{i32 108, i32 0, metadata !80, null}
!112 = metadata !{i32 77, i32 0, metadata !79, null}
!113 = metadata !{i32 94, i32 0, metadata !110, null}
!114 = metadata !{i32 96, i32 0, metadata !109, null}
!115 = metadata !{i32 97, i32 0, metadata !109, null}
!116 = metadata !{i32 98, i32 0, metadata !109, null}
!117 = metadata !{i32 99, i32 0, metadata !109, null}
!118 = metadata !{i32 115, i32 0, metadata !80, null}
!119 = metadata !{i32 122, i32 0, metadata !80, null}
!120 = metadata !{i32 129, i32 0, metadata !80, null}
!121 = metadata !{i32 131, i32 0, metadata !80, null}
!122 = metadata !{i32 132, i32 0, metadata !80, null}
!123 = metadata !{i32 133, i32 0, metadata !80, null}
!124 = metadata !{i32 134, i32 0, metadata !80, null}
!125 = metadata !{i32 135, i32 0, metadata !80, null}
!126 = metadata !{i32 136, i32 0, metadata !80, null}
!127 = metadata !{i32 138, i32 0, metadata !80, null}
!128 = metadata !{i32 139, i32 0, metadata !80, null}
!129 = metadata !{i32 140, i32 0, metadata !80, null}
!130 = metadata !{i32 141, i32 0, metadata !80, null}
!131 = metadata !{i32 142, i32 0, metadata !80, null}
!132 = metadata !{i32 144, i32 0, metadata !80, null}
!133 = metadata !{i32 145, i32 0, metadata !80, null}
!134 = metadata !{i32 146, i32 0, metadata !80, null}
!135 = metadata !{i32 147, i32 0, metadata !80, null}
!136 = metadata !{i32 148, i32 0, metadata !80, null}
!137 = metadata !{i32 150, i32 0, metadata !80, null}
!138 = metadata !{i32 151, i32 0, metadata !80, null}
!139 = metadata !{i32 152, i32 0, metadata !80, null}
!140 = metadata !{i32 153, i32 0, metadata !80, null}
!141 = metadata !{i32 154, i32 0, metadata !80, null}
!142 = metadata !{i32 156, i32 0, metadata !80, null}
!143 = metadata !{i32 157, i32 0, metadata !80, null}
!144 = metadata !{i32 158, i32 0, metadata !80, null}
!145 = metadata !{i32 159, i32 0, metadata !80, null}
!146 = metadata !{i32 161, i32 0, metadata !80, null}
!147 = metadata !{i32 162, i32 0, metadata !80, null}
!148 = metadata !{i32 163, i32 0, metadata !80, null}
!149 = metadata !{i32 164, i32 0, metadata !80, null}
!150 = metadata !{i32 169, i32 0, metadata !80, null}
!151 = metadata !{i32 171, i32 0, metadata !80, null}
!152 = metadata !{i32 172, i32 0, metadata !80, null}
!153 = metadata !{i32 174, i32 0, metadata !80, null}
!154 = metadata !{i32 177, i32 0, metadata !80, null}
!155 = metadata !{i32 179, i32 0, metadata !80, null}
!156 = metadata !{i32 183, i32 0, metadata !80, null}
!157 = metadata !{i32 185, i32 0, metadata !80, null}
!158 = metadata !{i32 190, i32 0, metadata !80, null}
!159 = metadata !{i32 193, i32 0, metadata !80, null}
!160 = metadata !{i32 194, i32 0, metadata !80, null}
!161 = metadata !{i32 195, i32 0, metadata !80, null}
!162 = metadata !{i32 196, i32 0, metadata !80, null}
!163 = metadata !{i32 199, i32 0, metadata !4, null}
